<?xml version="1.0" encoding="UTF-8"?><testrun duration="2674" footerText="Generated by WebStorm on 16-05-19 16:49" name="All">
    <count name="total" value="232"/>
    <count name="passed" value="232"/>
    <config configId="mocha-javascript-test-runner" name="All">
        <node-interpreter/>
        <node-options/>
        <mocha-package/>
        <working-directory/>
        <pass-parent-env/>
        <envs>
            <env name="NODE_ENV" value="test"/>
        </envs>
        <ui/>
        <extra-mocha-options/>
        <test-kind/>
        <test-directory/>
        <recursive/>
    </config>
    <test duration="5" locationUrl="test://Should return 500" name="Should return 500" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\error.test.js" status="passed">
        <output type="stdout">{}
</output>
    </test>
    <suite duration="279" locationUrl="suite:///api/auth" name="/api/auth" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\auth.test.js" status="passed">
        <suite duration="279" locationUrl="suite:///api/auth.POST /" name="POST /" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\auth.test.js" status="passed">
            <test duration="35" locationUrl="test:///api/auth.POST /.should return 400 if email not set" name="should return 400 if email not set" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\auth.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;email&amp;quot;:null,&amp;quot;password&amp;quot;:&amp;quot;Asdf12345&amp;quot;}
Res body: Invalid email
POST /api/auth 
</output>
                <output type="stdout">400 
</output>
                <output type="stdout">4.945 ms - 13
</output>
            </test>
            <test duration="9" locationUrl="test:///api/auth.POST /.Should return 400 if password not set" name="Should return 400 if password not set" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\auth.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;email&amp;quot;:&amp;quot;asd@asd.as&amp;quot;,&amp;quot;password&amp;quot;:null}
Res body: Password must be at least 8 characters long and include at least one capital letter and one number
POST /api/auth 
</output>
                <output type="stdout">400 
</output>
                <output type="stdout">6.872 ms - 98
</output>
            </test>
            <test duration="3" locationUrl="test:///api/auth.POST /.Should return 400 if password invalid" name="Should return 400 if password invalid" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\auth.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;email&amp;quot;:&amp;quot;asd@asd.as&amp;quot;,&amp;quot;password&amp;quot;:&amp;quot;123&amp;quot;}
Res body: Password must be at least 8 characters long and include at least one capital letter and one number
POST /api/auth 
</output>
                <output type="stdout">400 
</output>
                <output type="stdout">0.979 ms - 98
</output>
            </test>
            <test duration="81" locationUrl="test:///api/auth.POST /.Should return 400 if password wasn't correct" name="Should return 400 if password wasn't correct" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\auth.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;email&amp;quot;:&amp;quot;asd@asd.as&amp;quot;,&amp;quot;password&amp;quot;:&amp;quot;Qwert12345&amp;quot;}
{ isAdmin: false,
  adminOnBuildings: [],
  role: 0,
  _id: 5cdd76e6f0ab0124889da2d6,
  email: &amp;#39;asd@asd.as&amp;#39;,
  password:
   &amp;#39;$2b$10$K3rtE8Q1WQD5Q3ZJ/IVeMe4XZJfxWzXfIuFN8OU62oRqqa4CeVloq&amp;#39;,
  __v: 0 }
Res body: Invalid email or password
POST /api/auth 
</output>
                <output type="stdout">400 
</output>
                <output type="stdout">78.835 ms - 25
</output>
            </test>
            <test duration="75" locationUrl="test:///api/auth.POST /.Should return 200 if email and password valid" name="Should return 200 if email and password valid" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\auth.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;email&amp;quot;:&amp;quot;asd@asd.as&amp;quot;,&amp;quot;password&amp;quot;:&amp;quot;Asdf12345&amp;quot;}
{ isAdmin: false,
  adminOnBuildings: [],
  role: 0,
  _id: 5cdd76e6f0ab0124889da2d7,
  email: &amp;#39;asd@asd.as&amp;#39;,
  password:
   &amp;#39;$2b$10$lZ61Q3gj.vRWcjtnfXP9welgNFi3qg3bRHd3JjCluWy8g7izadwii&amp;#39;,
  __v: 0 }
Res body: Login successful
POST /api/auth 
</output>
                <output type="stdout">200 
</output>
                <output type="stdout">72.855 ms - 16
</output>
            </test>
            <test duration="3" locationUrl="test:///api/auth.POST /.Should return 400 if user did not exist" name="Should return 400 if user did not exist" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\auth.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;email&amp;quot;:&amp;quot;asd@asd.dk&amp;quot;,&amp;quot;password&amp;quot;:&amp;quot;Asdf12345&amp;quot;}
null
Res body: Invalid email or password
POST /api/auth 
</output>
                <output type="stdout">400 
</output>
                <output type="stdout">1.807 ms - 25
</output>
            </test>
            <test duration="73" locationUrl="test:///api/auth.POST /.Should return json web token that can be decoded to valid mongoose _id" name="Should return json web token that can be decoded to valid mongoose _id" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\auth.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;email&amp;quot;:&amp;quot;asd@asd.as&amp;quot;,&amp;quot;password&amp;quot;:&amp;quot;Asdf12345&amp;quot;}
{ isAdmin: false,
  adminOnBuildings: [],
  role: 0,
  _id: 5cdd76e6f0ab0124889da2d9,
  email: &amp;#39;asd@asd.as&amp;#39;,
  password:
   &amp;#39;$2b$10$b5uoG9PVzHhoafzcrwnkW.UNWoMee//hna3YTQODcMj/ila9Lx5Gi&amp;#39;,
  __v: 0 }
Res body: Login successful
POST /api/auth 
</output>
                <output type="stdout">200 
</output>
                <output type="stdout">70.586 ms - 16
Login successful
</output>
            </test>
        </suite>
    </suite>
    <suite duration="58" locationUrl="suite:///api/beacons" name="/api/beacons" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\beacons.test.js" status="passed">
        <suite duration="45" locationUrl="suite:///api/beacons.POST /" name="POST /" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\beacons.test.js" status="passed">
            <test duration="18" locationUrl="test:///api/beacons.POST /.400 if random parameter in body is parsed" name="400 if random parameter in body is parsed" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\beacons.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;uuid&amp;quot;:&amp;quot;vsk1vs12-vsk1-sk12-vk12-vk12vk12vk12&amp;quot;,&amp;quot;buildingId&amp;quot;:&amp;quot;5cdd76e7f0ab0124889da2db&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;beacon1&amp;quot;,&amp;quot;randomParam&amp;quot;:&amp;quot;hej&amp;quot;}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlN2YwYWIwMTI0ODg5ZGEyZGEiLCJyb2xlIjoxLCJpYXQiOjE1NTgwMTc3Njd9.D5ESEL3N8Sgk4sRMCb8gT4FAbJvKA5Gxq7xHh0GY7v0&amp;quot;
Res body: &amp;quot;randomParam&amp;quot; is not allowed
POST /api/beacons 
</output>
                <output type="stdout">400 
</output>
                <output type="stdout">10.622 ms - 28
</output>
            </test>
            <test duration="15" locationUrl="test:///api/beacons.POST /.Should accept uuid value" name="Should accept uuid value" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\beacons.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;uuid&amp;quot;:&amp;quot;f7826da6-4fa2-4e98-8024-bc5b71e0891e&amp;quot;,&amp;quot;buildingId&amp;quot;:&amp;quot;5cdd76e7f0ab0124889da2dd&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;beacon1&amp;quot;}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlN2YwYWIwMTI0ODg5ZGEyZGMiLCJyb2xlIjoxLCJpYXQiOjE1NTgwMTc3Njd9.4-z3e19FuuNGHzfoj9d7rcF_FIY6Ku7vtYtBmmpS0X4&amp;quot;
1
Res body: {&amp;quot;_id&amp;quot;:&amp;quot;5cdd76e7f0ab0124889da2de&amp;quot;,&amp;quot;building&amp;quot;:{&amp;quot;feedback&amp;quot;:[],&amp;quot;_id&amp;quot;:&amp;quot;5cdd76e7f0ab0124889da2dd&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;222&amp;quot;,&amp;quot;__v&amp;quot;:0},&amp;quot;name&amp;quot;:&amp;quot;beacon1&amp;quot;,&amp;quot;uuid&amp;quot;:&amp;quot;f7826da6-4fa2-4e98-8024-bc5b71e0891e&amp;quot;}
POST /api/beacons 
</output>
                <output type="stdout">200 
</output>
                <output type="stdout">11.766 ms - 178
</output>
            </test>
            <test duration="6" locationUrl="test:///api/beacons.POST /.should return 403 if user with unauthorized role (0) tries to post beacon" name="should return 403 if user with unauthorized role (0) tries to post beacon" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\beacons.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;uuid&amp;quot;:&amp;quot;vsk1vs12-vsk1-sk12-vk12-vk12vk12vk12&amp;quot;,&amp;quot;buildingId&amp;quot;:&amp;quot;5cdd76e7f0ab0124889da2e0&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;beacon1&amp;quot;}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlN2YwYWIwMTI0ODg5ZGEyZGYiLCJyb2xlIjowLCJpYXQiOjE1NTgwMTc3Njd9.oqOGXrPdXBpZPgjFsk_H8jtYn2KrUlvLiUUV2NIh1cY&amp;quot;
Res body: User needs to be authorized to access the resource
POST /api/beacons 
</output>
                <output type="stdout">403 
</output>
                <output type="stdout">1.928 ms - 50
</output>
            </test>
            <test duration="6" locationUrl="test:///api/beacons.POST /.Should post new beacon with right parameters" name="Should post new beacon with right parameters" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\beacons.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;uuid&amp;quot;:&amp;quot;vsk1vs12-vsk1-sk12-vk12-vk12vk12vk12&amp;quot;,&amp;quot;buildingId&amp;quot;:&amp;quot;5cdd76e7f0ab0124889da2e2&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;beacon1&amp;quot;}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlN2YwYWIwMTI0ODg5ZGEyZTEiLCJyb2xlIjoxLCJpYXQiOjE1NTgwMTc3Njd9.pG98Tjq6VtiQZu0wRK0btH0HWVvqNDe2YqnsY-9JHOE&amp;quot;
1
Res body: {&amp;quot;_id&amp;quot;:&amp;quot;5cdd76e7f0ab0124889da2e3&amp;quot;,&amp;quot;building&amp;quot;:{&amp;quot;feedback&amp;quot;:[],&amp;quot;_id&amp;quot;:&amp;quot;5cdd76e7f0ab0124889da2e2&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;222&amp;quot;,&amp;quot;__v&amp;quot;:0},&amp;quot;name&amp;quot;:&amp;quot;beacon1&amp;quot;,&amp;quot;uuid&amp;quot;:&amp;quot;vsk1vs12-vsk1-sk12-vk12-vk12vk12vk12&amp;quot;}
POST /api/beacons 
</output>
                <output type="stdout">200 
</output>
                <output type="stdout">4.698 ms - 178
</output>
            </test>
        </suite>
        <suite duration="13" locationUrl="suite:///api/beacons.GET /" name="GET /" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\beacons.test.js" status="passed">
            <test duration="13" locationUrl="test:///api/beacons.GET /.Should filter for building if query string parameter parsed" name="Should filter for building if query string parameter parsed" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\beacons.test.js" status="passed">
                <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlN2YwYWIwMTI0ODg5ZGEyZTQiLCJyb2xlIjoxLCJpYXQiOjE1NTgwMTc3Njd9.XTTWfRvtzOevC3zOXswLIzPDB5aPae2xCcVTIqBF1vc&amp;quot;
Res body: [{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76e7f0ab0124889da2e6&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;beacon1&amp;quot;,&amp;quot;uuid&amp;quot;:&amp;quot;vsk1vs12-vsk1-sk12-vk12-vk12vk12vk12&amp;quot;,&amp;quot;building&amp;quot;:{&amp;quot;feedback&amp;quot;:[],&amp;quot;_id&amp;quot;:&amp;quot;5cdd76e7f0ab0124889da2e5&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;222&amp;quot;,&amp;quot;__v&amp;quot;:0},&amp;quot;__v&amp;quot;:0}]
GET /api/beacons/?building=5cdd76e7f0ab0124889da2e5 
</output>
                <output type="stdout">200 
</output>
                <output type="stdout">8.841 ms - 188
[ { _id: &amp;#39;5cdd76e7f0ab0124889da2e6&amp;#39;,
    name: &amp;#39;beacon1&amp;#39;,
    uuid: &amp;#39;vsk1vs12-vsk1-sk12-vk12-vk12vk12vk12&amp;#39;,
    building:
     { feedback: [],
       _id: &amp;#39;5cdd76e7f0ab0124889da2e5&amp;#39;,
       name: &amp;#39;222&amp;#39;,
       __v: 0 },
    __v: 0 } ]
</output>
            </test>
        </suite>
    </suite>
    <suite duration="199" locationUrl="suite:///api/buildings" name="/api/buildings" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\buildings.test.js" status="passed">
        <suite duration="31" locationUrl="suite:///api/buildings.POST /" name="POST /" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\buildings.test.js" status="passed">
            <test duration="7" locationUrl="test:///api/buildings.POST /.401 if json token not provided in header" name="401 if json token not provided in header" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\buildings.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;name&amp;quot;:&amp;quot;324&amp;quot;}
&amp;quot;null&amp;quot;
Res body: Invalid token
POST /api/buildings 
</output>
                <output type="stdout">401 
</output>
                <output type="stdout">1.188 ms - 13
</output>
            </test>
            <test duration="6" locationUrl="test:///api/buildings.POST /.400 if name not provided" name="400 if name not provided" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\buildings.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;name&amp;quot;:null}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlOGYwYWIwMTI0ODg5ZGEyZWEiLCJyb2xlIjoxLCJpYXQiOjE1NTgwMTc3Njh9.B9xMvsG3KqvMLELtOEXdZxNt1_GWuVDD_hzH1r4h52Y&amp;quot;
Res body: child &amp;quot;name&amp;quot; fails because [&amp;quot;name&amp;quot; must be a string]
POST /api/buildings 
</output>
                <output type="stdout">400 
</output>
                <output type="stdout">2.435 ms - 52
</output>
            </test>
            <test duration="13" locationUrl="test:///api/buildings.POST /.should have user as admin on newly posted building" name="should have user as admin on newly posted building" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\buildings.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;name&amp;quot;:&amp;quot;324&amp;quot;}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlOGYwYWIwMTI0ODg5ZGEyZWIiLCJyb2xlIjoxLCJpYXQiOjE1NTgwMTc3Njh9.fLVoWVUMV_S3MNMMKAB2A6zDXcaEjPNgFlKjEK4Pkdk&amp;quot;
Res body: {&amp;quot;feedback&amp;quot;:[],&amp;quot;_id&amp;quot;:&amp;quot;5cdd76e8f0ab0124889da2ec&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;324&amp;quot;,&amp;quot;__v&amp;quot;:0}
POST /api/buildings 
</output>
                <output type="stdout">200 
</output>
                <output type="stdout">8.409 ms - 69
</output>
            </test>
            <test duration="5" locationUrl="test:///api/buildings.POST /.should return 403 if user not authorized with login role &gt;= 1" name="should return 403 if user not authorized with login role &gt;= 1" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\buildings.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;name&amp;quot;:&amp;quot;324&amp;quot;}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlOGYwYWIwMTI0ODg5ZGEyZWQiLCJyb2xlIjoxLCJpYXQiOjE1NTgwMTc3Njh9.F2qAc4G0_J_UcQdEQikP5_BQ8NDY3sKtwkt07_2EN_s&amp;quot;
Res body: User needs to be authorized to access the resource
POST /api/buildings 
</output>
                <output type="stdout">403 
</output>
                <output type="stdout">1.351 ms - 50
</output>
            </test>
        </suite>
        <suite duration="57" locationUrl="suite:///api/buildings.DELETE /:id" name="DELETE /:id" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\buildings.test.js" status="passed">
            <test duration="9" locationUrl="test:///api/buildings.DELETE /:id.Should return empty array of buildings after building was deleted" name="Should return empty array of buildings after building was deleted" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\buildings.test.js" status="passed">
                <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlOGYwYWIwMTI0ODg5ZGEyZWUiLCJyb2xlIjoxLCJpYXQiOjE1NTgwMTc3Njh9.wtvKa5Hb9pbq4vAuvqKhw89crO0jaJgpElpe23zggwk&amp;quot;
Res body: {&amp;quot;feedback&amp;quot;:[],&amp;quot;_id&amp;quot;:&amp;quot;5cdd76e8f0ab0124889da2ef&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;324&amp;quot;,&amp;quot;__v&amp;quot;:0}
DELETE /api/buildings/5cdd76e8f0ab0124889da2ef 
</output>
                <output type="stdout">200 
</output>
                <output type="stdout">5.444 ms - 69
</output>
            </test>
            <test duration="11" locationUrl="test:///api/buildings.DELETE /:id.Should also delete all rooms in that building" name="Should also delete all rooms in that building" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\buildings.test.js" status="passed">
                <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlOWYwYWIwMTI0ODg5ZGEyZjAiLCJyb2xlIjoxLCJpYXQiOjE1NTgwMTc3Njl9.OtIihE2R6UD4yW8g1361Ks7Cnr52x2P19G1xW3YOcOM&amp;quot;
Res body: {&amp;quot;feedback&amp;quot;:[],&amp;quot;_id&amp;quot;:&amp;quot;5cdd76e9f0ab0124889da2f1&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;324&amp;quot;,&amp;quot;__v&amp;quot;:0}
DELETE /api/buildings/5cdd76e9f0ab0124889da2f1 
</output>
                <output type="stdout">200 
</output>
                <output type="stdout">5.169 ms - 69
</output>
            </test>
            <test duration="15" locationUrl="test:///api/buildings.DELETE /:id.Should delete reference to room for questions posted in that building" name="Should delete reference to room for questions posted in that building" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\buildings.test.js" status="passed">
                <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlOWYwYWIwMTI0ODg5ZGEyZjMiLCJyb2xlIjoxLCJpYXQiOjE1NTgwMTc3Njl9.98UEYYIw5XQyOZfGYHvYx041WS1eoNr8YjbrCaQD4fM&amp;quot;
Res body: {&amp;quot;feedback&amp;quot;:[],&amp;quot;_id&amp;quot;:&amp;quot;5cdd76e9f0ab0124889da2f4&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;324&amp;quot;,&amp;quot;__v&amp;quot;:0}
DELETE /api/buildings/5cdd76e9f0ab0124889da2f4 
</output>
                <output type="stdout">200 
</output>
                <output type="stdout">4.539 ms - 69
</output>
            </test>
            <test duration="10" locationUrl="test:///api/buildings.DELETE /:id.Should not delete questions posted in other buildings" name="Should not delete questions posted in other buildings" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\buildings.test.js" status="passed">
                <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlOWYwYWIwMTI0ODg5ZGEyZmIiLCJyb2xlIjoxLCJpYXQiOjE1NTgwMTc3Njl9.kt3CjfZvACXX_ZScUg0hMcb6qOLEZjW8wVJXLi1r5ts&amp;quot;
Res body: {&amp;quot;feedback&amp;quot;:[],&amp;quot;_id&amp;quot;:&amp;quot;5cdd76e9f0ab0124889da2fc&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;324&amp;quot;,&amp;quot;__v&amp;quot;:0}
DELETE /api/buildings/5cdd76e9f0ab0124889da2fc 
</output>
                <output type="stdout">200 
</output>
                <output type="stdout">3.209 ms - 69
</output>
            </test>
            <test duration="8" locationUrl="test:///api/buildings.DELETE /:id.Should still have room that does not belong to the deleted building" name="Should still have room that does not belong to the deleted building" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\buildings.test.js" status="passed">
                <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlOWYwYWIwMTI0ODg5ZGEzMDQiLCJyb2xlIjoxLCJpYXQiOjE1NTgwMTc3Njl9.RKoUXO_3-jWypRwHw176eJaV2uAaRGRpaEH4Nz8pa5I&amp;quot;
Res body: {&amp;quot;feedback&amp;quot;:[],&amp;quot;_id&amp;quot;:&amp;quot;5cdd76e9f0ab0124889da305&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;324&amp;quot;,&amp;quot;__v&amp;quot;:0}
DELETE /api/buildings/5cdd76e9f0ab0124889da305 
</output>
                <output type="stdout">200 
</output>
                <output type="stdout">3.874 ms - 69
</output>
            </test>
            <test duration="4" locationUrl="test:///api/buildings.DELETE /:id.Should return 403 if user was not admin on the building" name="Should return 403 if user was not admin on the building" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\buildings.test.js" status="passed">
                <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlOWYwYWIwMTI0ODg5ZGEzMDgiLCJyb2xlIjoxLCJpYXQiOjE1NTgwMTc3Njl9.hny7B-QyvyA1NXL376_SsPqPtNzGWMcHe6Vl9j9oycE&amp;quot;
Res body: User needs to be admin on building to delete it
DELETE /api/buildings/5cdd76e9f0ab0124889da309 
</output>
                <output type="stdout">403 
</output>
                <output type="stdout">1.325 ms - 47
</output>
            </test>
        </suite>
        <suite duration="32" locationUrl="suite:///api/buildings.GET /:id" name="GET /:id" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\buildings.test.js" status="passed">
            <test duration="6" locationUrl="test:///api/buildings.GET /:id.Should return only one building" name="Should return only one building" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\buildings.test.js" status="passed">
                <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlOWYwYWIwMTI0ODg5ZGEzMGEiLCJyb2xlIjowLCJpYXQiOjE1NTgwMTc3Njl9.DHpIoqHnHeqN3DDSG9CGWJ9UXUcf0dyPsqr34cQ5asI&amp;quot;
id 5cdd76e9f0ab0124889da30b
Res body: {&amp;quot;name&amp;quot;:&amp;quot;324&amp;quot;,&amp;quot;_id&amp;quot;:&amp;quot;5cdd76e9f0ab0124889da30b&amp;quot;,&amp;quot;rooms&amp;quot;:[{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76e9f0ab0124889da30c&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;hej&amp;quot;,&amp;quot;building&amp;quot;:&amp;quot;5cdd76e9f0ab0124889da30b&amp;quot;,&amp;quot;__v&amp;quot;:0}]}
GET /api/buildings/5cdd76e9f0ab0124889da30b/ 
</output>
                <output type="stdout">200 
</output>
                <output type="stdout">3.571 ms - 151
</output>
            </test>
            <test duration="4" locationUrl="test:///api/buildings.GET /:id.Should return 404 if building was not found" name="Should return 404 if building was not found" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\buildings.test.js" status="passed">
                <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlOWYwYWIwMTI0ODg5ZGEzMGUiLCJyb2xlIjowLCJpYXQiOjE1NTgwMTc3Njl9.exLgTZFUs5nSgwMV-3TbZlXbl8zl-WP8OFi3YscKtBc&amp;quot;
id 5cdd76e9f0ab0124889da311
Res body: Building with id 5cdd76e9f0ab0124889da311 was not found
GET /api/buildings/5cdd76e9f0ab0124889da311/ 
</output>
                <output type="stdout">404 
</output>
                <output type="stdout">1.987 ms - 55
</output>
            </test>
            <test duration="10" locationUrl="test:///api/buildings.GET /:id.Should return feedbackCount if withFeedbackCount query set" name="Should return feedbackCount if withFeedbackCount query set" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\buildings.test.js" status="passed">
                <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlOWYwYWIwMTI0ODg5ZGEzMTIiLCJyb2xlIjowLCJpYXQiOjE1NTgwMTc3Njl9.rdhTimVg_j33WWBQSPziJt6dDRCjuzWfCEwjAZXF8Zg&amp;quot;
id 5cdd76e9f0ab0124889da313
Res body: {&amp;quot;name&amp;quot;:&amp;quot;324&amp;quot;,&amp;quot;_id&amp;quot;:&amp;quot;5cdd76e9f0ab0124889da313&amp;quot;,&amp;quot;rooms&amp;quot;:[{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76e9f0ab0124889da314&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;hej&amp;quot;,&amp;quot;building&amp;quot;:&amp;quot;5cdd76e9f0ab0124889da313&amp;quot;,&amp;quot;__v&amp;quot;:0}],&amp;quot;feedbackCount&amp;quot;:0}
GET /api/buildings/5cdd76e9f0ab0124889da313/?withFeedbackCount=true 
</output>
                <output type="stdout">200 
</output>
                <output type="stdout">5.656 ms - 169
</output>
            </test>
            <test duration="12" locationUrl="test:///api/buildings.GET /:id.Should set correct feedbackCount" name="Should set correct feedbackCount" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\buildings.test.js" status="passed">
                <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlOWYwYWIwMTI0ODg5ZGEzMTUiLCJyb2xlIjowLCJpYXQiOjE1NTgwMTc3Njl9.FYQaNsrEeVpT-IonP_dVgttybZbE2uDHWUgUKocVlgA&amp;quot;
id 5cdd76e9f0ab0124889da316
Res body: {&amp;quot;name&amp;quot;:&amp;quot;324&amp;quot;,&amp;quot;_id&amp;quot;:&amp;quot;5cdd76e9f0ab0124889da316&amp;quot;,&amp;quot;rooms&amp;quot;:[{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76e9f0ab0124889da317&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;hej&amp;quot;,&amp;quot;building&amp;quot;:&amp;quot;5cdd76e9f0ab0124889da316&amp;quot;,&amp;quot;__v&amp;quot;:0},{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76e9f0ab0124889da318&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;hej&amp;quot;,&amp;quot;building&amp;quot;:&amp;quot;5cdd76e9f0ab0124889da316&amp;quot;,&amp;quot;__v&amp;quot;:0}],&amp;quot;feedbackCount&amp;quot;:1}
GET /api/buildings/5cdd76e9f0ab0124889da316/?withFeedbackCount=true 
</output>
                <output type="stdout">200 
</output>
                <output type="stdout">6.582 ms - 263
</output>
            </test>
        </suite>
        <suite duration="79" locationUrl="suite:///api/buildings.Get /" name="Get /" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\buildings.test.js" status="passed">
            <test duration="6" locationUrl="test:///api/buildings.Get /.Should return building with room" name="Should return building with room" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\buildings.test.js" status="passed">
                <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlOWYwYWIwMTI0ODg5ZGEzMWQiLCJyb2xlIjowLCJpYXQiOjE1NTgwMTc3Njl9.jpO5NIuXAdnBnDDC9YnX3mTrUtaMid6CJQWY3x3VE1I&amp;quot;
Res body: [{&amp;quot;name&amp;quot;:&amp;quot;324&amp;quot;,&amp;quot;_id&amp;quot;:&amp;quot;5cdd76e9f0ab0124889da31e&amp;quot;,&amp;quot;rooms&amp;quot;:[{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76e9f0ab0124889da31f&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;hej&amp;quot;,&amp;quot;building&amp;quot;:&amp;quot;5cdd76e9f0ab0124889da31e&amp;quot;,&amp;quot;__v&amp;quot;:0}]}]
GET /api/buildings/?admin=me 
</output>
                <output type="stdout">200 
</output>
                <output type="stdout">3.483 ms - 153
</output>
            </test>
            <test duration="7" locationUrl="test:///api/buildings.Get /.Should return array with rooms" name="Should return array with rooms" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\buildings.test.js" status="passed">
                <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlOWYwYWIwMTI0ODg5ZGEzMjAiLCJyb2xlIjowLCJpYXQiOjE1NTgwMTc3Njl9.n01unb6pf--04XKQsyhjmN0rWTuKGiOhvZZueqRxdVk&amp;quot;
Res body: [{&amp;quot;name&amp;quot;:&amp;quot;324&amp;quot;,&amp;quot;_id&amp;quot;:&amp;quot;5cdd76e9f0ab0124889da321&amp;quot;,&amp;quot;rooms&amp;quot;:[{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76e9f0ab0124889da322&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;hej&amp;quot;,&amp;quot;building&amp;quot;:&amp;quot;5cdd76e9f0ab0124889da321&amp;quot;,&amp;quot;__v&amp;quot;:0},{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76e9f0ab0124889da323&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;hej&amp;quot;,&amp;quot;building&amp;quot;:&amp;quot;5cdd76e9f0ab0124889da321&amp;quot;,&amp;quot;__v&amp;quot;:0}]}]
GET /api/buildings/?admin=me 
</output>
                <output type="stdout">200 
</output>
                <output type="stdout">3.199 ms - 247
</output>
            </test>
            <test duration="10" locationUrl="test:///api/buildings.Get /.Should only return buildings that requesting user is admin on when query set" name="Should only return buildings that requesting user is admin on when query set" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\buildings.test.js" status="passed">
                <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlOWYwYWIwMTI0ODg5ZGEzMjYiLCJyb2xlIjowLCJpYXQiOjE1NTgwMTc3Njl9.QRzUsNxYC9fId91JIh8hf0-TBwY6yOGUz-SWPnX_zRk&amp;quot;
Res body: [{&amp;quot;name&amp;quot;:&amp;quot;hej&amp;quot;,&amp;quot;_id&amp;quot;:&amp;quot;5cdd76e9f0ab0124889da329&amp;quot;,&amp;quot;rooms&amp;quot;:[]},{&amp;quot;name&amp;quot;:&amp;quot;hej&amp;quot;,&amp;quot;_id&amp;quot;:&amp;quot;5cdd76e9f0ab0124889da32a&amp;quot;,&amp;quot;rooms&amp;quot;:[]}]
GET /api/buildings/?admin=me 
</output>
                <output type="stdout">200 
</output>
                <output type="stdout">5.018 ms - 119
</output>
            </test>
            <test duration="4" locationUrl="test:///api/buildings.Get /.Should return 403 if user was not admin but tried to get all buildings" name="Should return 403 if user was not admin but tried to get all buildings" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\buildings.test.js" status="passed">
                <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlOWYwYWIwMTI0ODg5ZGEzMmIiLCJyb2xlIjowLCJpYXQiOjE1NTgwMTc3Njl9.R9-1aCscaVGOeGNjxgP4uUI4-dYY9mnGoSSCMTRdwG4&amp;quot;
Res body: User did not have authorized role (admin) to view all buildings. Please specify query to only receive specific buildings
GET /api/buildings/ 
</output>
                <output type="stdout">403 
</output>
                <output type="stdout">1.888 ms - 120
</output>
            </test>
            <test duration="10" locationUrl="test:///api/buildings.Get /.Should get all buildings when user was admin and did not set any query parameter" name="Should get all buildings when user was admin and did not set any query parameter" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\buildings.test.js" status="passed">
                <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlOWYwYWIwMTI0ODg5ZGEzMmUiLCJyb2xlIjoyLCJpYXQiOjE1NTgwMTc3Njl9.SAkBiggEDc0RFX4wU_z5H5lIMPuYxg-sMVbUJIVscK0&amp;quot;
Res body: [{&amp;quot;name&amp;quot;:&amp;quot;324&amp;quot;,&amp;quot;_id&amp;quot;:&amp;quot;5cdd76e9f0ab0124889da32f&amp;quot;,&amp;quot;rooms&amp;quot;:[{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76e9f0ab0124889da330&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;hej&amp;quot;,&amp;quot;building&amp;quot;:&amp;quot;5cdd76e9f0ab0124889da32f&amp;quot;,&amp;quot;__v&amp;quot;:0}]},{&amp;quot;name&amp;quot;:&amp;quot;hej&amp;quot;,&amp;quot;_id&amp;quot;:&amp;quot;5cdd76e9f0ab0124889da331&amp;quot;,&amp;quot;rooms&amp;quot;:[]},{&amp;quot;name&amp;quot;:&amp;quot;hej&amp;quot;,&amp;quot;_id&amp;quot;:&amp;quot;5cdd76e9f0ab0124889da332&amp;quot;,&amp;quot;rooms&amp;quot;:[]}]
GET /api/buildings/ 
</output>
                <output type="stdout">200 
</output>
                <output type="stdout">4.942 ms - 271
</output>
            </test>
            <test duration="7" locationUrl="test:///api/buildings.Get /.Should return 403 if non admin user tries to get buildings from where feedback from a different user was given" name="Should return 403 if non admin user tries to get buildings from where feedback from a different user was given" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\buildings.test.js" status="passed">
                <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlOWYwYWIwMTI0ODg5ZGEzMzMiLCJyb2xlIjowLCJpYXQiOjE1NTgwMTc3Njl9.5fHM5clQIpNojwBmXI2mVN0kcvIzJRTdUZ7hxjZ43R0&amp;quot;
Res body: User did not have authorized role (admin) to view buildings where another user has given feedback
GET /api/buildings/?feedback=5cdd76e9f0ab0124889da338 
</output>
                <output type="stdout">403 
</output>
                <output type="stdout">1.402 ms - 97
</output>
            </test>
            <test duration="15" locationUrl="test:///api/buildings.Get /.Should return buildings where another user has given feedback " name="Should return buildings where another user has given feedback " metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\buildings.test.js" status="passed">
                <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlOWYwYWIwMTI0ODg5ZGEzM2IiLCJyb2xlIjowLCJpYXQiOjE1NTgwMTc3Njl9.J2FyGQqCWWUuxPoEsi3A973f74DHeoAYZ0blxLa28q4&amp;quot;
Res body: [{&amp;quot;name&amp;quot;:&amp;quot;hej&amp;quot;,&amp;quot;_id&amp;quot;:&amp;quot;5cdd76e9f0ab0124889da33e&amp;quot;,&amp;quot;rooms&amp;quot;:[{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76e9f0ab0124889da33f&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;222&amp;quot;,&amp;quot;building&amp;quot;:&amp;quot;5cdd76e9f0ab0124889da33e&amp;quot;,&amp;quot;__v&amp;quot;:0}]}]
GET /api/buildings/?feedback=5cdd76e9f0ab0124889da340 
</output>
                <output type="stdout">200 
</output>
                <output type="stdout">6.255 ms - 153
</output>
            </test>
            <test duration="9" locationUrl="test:///api/buildings.Get /.Should get buildings where feedback was given" name="Should get buildings where feedback was given" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\buildings.test.js" status="passed">
                <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlOWYwYWIwMTI0ODg5ZGEzNDQiLCJyb2xlIjowLCJpYXQiOjE1NTgwMTc3Njl9.yohQ58Pxb-SX2p2nnX6_MGU1aOtmQ66UFK36CukeLfU&amp;quot;
Res body: [{&amp;quot;name&amp;quot;:&amp;quot;324&amp;quot;,&amp;quot;_id&amp;quot;:&amp;quot;5cdd76e9f0ab0124889da345&amp;quot;,&amp;quot;rooms&amp;quot;:[{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76e9f0ab0124889da346&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;hej&amp;quot;,&amp;quot;building&amp;quot;:&amp;quot;5cdd76e9f0ab0124889da345&amp;quot;,&amp;quot;__v&amp;quot;:0}]}]
GET /api/buildings/?feedback=me 
</output>
                <output type="stdout">200 
</output>
                <output type="stdout">4.560 ms - 153
</output>
            </test>
            <test duration="11" locationUrl="test:///api/buildings.Get /.Should get building from another admin when proper query parsed" name="Should get building from another admin when proper query parsed" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\buildings.test.js" status="passed">
                <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlOWYwYWIwMTI0ODg5ZGEzNGIiLCJyb2xlIjoyLCJpYXQiOjE1NTgwMTc3Njl9.hrl5h_pMISFFR5CSIKSSsNzC-iJagsAsrKzEa3AhewM&amp;quot;
Res body: [{&amp;quot;name&amp;quot;:&amp;quot;hej&amp;quot;,&amp;quot;_id&amp;quot;:&amp;quot;5cdd76e9f0ab0124889da34e&amp;quot;,&amp;quot;rooms&amp;quot;:[]},{&amp;quot;name&amp;quot;:&amp;quot;hej&amp;quot;,&amp;quot;_id&amp;quot;:&amp;quot;5cdd76e9f0ab0124889da34f&amp;quot;,&amp;quot;rooms&amp;quot;:[]}]
GET /api/buildings/?admin=5cdd76e9f0ab0124889da350 
</output>
                <output type="stdout">200 
</output>
                <output type="stdout">5.041 ms - 119
</output>
            </test>
        </suite>
    </suite>
    <suite duration="1190" locationUrl="suite:///api/feedback" name="/api/feedback" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\feedback.test.js" status="passed">
        <suite duration="50" locationUrl="suite:///api/feedback. POST /" name=" POST /" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\feedback.test.js" status="passed">
            <test duration="4" locationUrl="test:///api/feedback. POST /.should return 401 if token not provided" name="should return 401 if token not provided" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\feedback.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;roomId&amp;quot;:&amp;quot;5cdd76eaf0ab0124889da353&amp;quot;,&amp;quot;questionId&amp;quot;:&amp;quot;5cdd76eaf0ab0124889da356&amp;quot;,&amp;quot;answerId&amp;quot;:&amp;quot;5cdd76eaf0ab0124889da359&amp;quot;}
Res body: No json web token provided.
POST /api/feedback 
</output>
                <output type="stdout">401 
</output>
                <output type="stdout">0.361 ms - 27
</output>
            </test>
            <test duration="2" locationUrl="test:///api/feedback. POST /.should return 401 if invalid token" name="should return 401 if invalid token" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\feedback.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;roomId&amp;quot;:&amp;quot;5cdd76eaf0ab0124889da35c&amp;quot;,&amp;quot;questionId&amp;quot;:&amp;quot;5cdd76eaf0ab0124889da35f&amp;quot;,&amp;quot;answerId&amp;quot;:&amp;quot;5cdd76eaf0ab0124889da362&amp;quot;}
&amp;quot;123&amp;quot;
Res body: Invalid token
POST /api/feedback 
</output>
                <output type="stdout">401 
</output>
                <output type="stdout">0.356 ms - 13
</output>
            </test>
            <test duration="3" locationUrl="test:///api/feedback. POST /.401 if invalid token" name="401 if invalid token" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\feedback.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;roomId&amp;quot;:&amp;quot;5cdd76eaf0ab0124889da365&amp;quot;,&amp;quot;questionId&amp;quot;:&amp;quot;5cdd76eaf0ab0124889da368&amp;quot;,&amp;quot;answerId&amp;quot;:&amp;quot;5cdd76eaf0ab0124889da36b&amp;quot;}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJoZWoiOiJoZWoiLCJpYXQiOjE1NTgwMTc3NzB9.Vyfs-A7Aj3G_BDEP6Pi35iU0udh17OFmrQXHl2p4JRs&amp;quot;
Res body: Invalid token
POST /api/feedback 
</output>
                <output type="stdout">401 
</output>
                <output type="stdout">0.404 ms - 13
</output>
            </test>
            <test duration="3" locationUrl="test:///api/feedback. POST /.400 if roomId not provided" name="400 if roomId not provided" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\feedback.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;roomId&amp;quot;:null,&amp;quot;questionId&amp;quot;:&amp;quot;5cdd76eaf0ab0124889da371&amp;quot;,&amp;quot;answerId&amp;quot;:&amp;quot;5cdd76eaf0ab0124889da374&amp;quot;}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlYWYwYWIwMTI0ODg5ZGEzNmMiLCJyb2xlIjowLCJpYXQiOjE1NTgwMTc3NzB9.U-i5qwRO8f_OC2SkvYXFsyZqZKg3J_eW6U7pg4dx3Rs&amp;quot;
Res body: &amp;quot;roomId&amp;quot; must be a string
POST /api/feedback 
</output>
                <output type="stdout">400 
</output>
                <output type="stdout">1.642 ms - 25
</output>
            </test>
            <test duration="4" locationUrl="test:///api/feedback. POST /.400 if question not provided" name="400 if question not provided" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\feedback.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;roomId&amp;quot;:&amp;quot;5cdd76eaf0ab0124889da377&amp;quot;,&amp;quot;questionId&amp;quot;:null,&amp;quot;answerId&amp;quot;:&amp;quot;5cdd76eaf0ab0124889da37d&amp;quot;}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlYWYwYWIwMTI0ODg5ZGEzNzUiLCJyb2xlIjowLCJpYXQiOjE1NTgwMTc3NzB9.Oj4ZrD15zPMDYenRR5lPZlvOz4-aNMwnhAzGff76lQU&amp;quot;
Res body: &amp;quot;questionId&amp;quot; must be a string
POST /api/feedback 
</output>
                <output type="stdout">400 
</output>
                <output type="stdout">1.845 ms - 29
</output>
            </test>
            <test duration="3" locationUrl="test:///api/feedback. POST /.400 if questionId not set" name="400 if questionId not set" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\feedback.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;roomId&amp;quot;:&amp;quot;5cdd76eaf0ab0124889da380&amp;quot;,&amp;quot;questionId&amp;quot;:null,&amp;quot;answerId&amp;quot;:&amp;quot;5cdd76eaf0ab0124889da386&amp;quot;}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlYWYwYWIwMTI0ODg5ZGEzN2UiLCJyb2xlIjowLCJpYXQiOjE1NTgwMTc3NzB9.sdJ0V-By2T1jj6J-9--rB4U9Wwyf2t9BiL1REwjElm8&amp;quot;
Res body: &amp;quot;questionId&amp;quot; must be a string
POST /api/feedback 
</output>
                <output type="stdout">400 
</output>
                <output type="stdout">1.598 ms - 29
</output>
            </test>
            <test duration="12" locationUrl="test:///api/feedback. POST /.400 if one question was not from same building as room" name="400 if one question was not from same building as room" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\feedback.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;roomId&amp;quot;:&amp;quot;5cdd76eaf0ab0124889da389&amp;quot;,&amp;quot;questionId&amp;quot;:&amp;quot;5cdd76eaf0ab0124889da394&amp;quot;,&amp;quot;answerId&amp;quot;:&amp;quot;5cdd76eaf0ab0124889da38f&amp;quot;}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlYWYwYWIwMTI0ODg5ZGEzODciLCJyb2xlIjowLCJpYXQiOjE1NTgwMTc3NzB9.NSvHwvfcm-yQcb0KuAEjBbqv1wRZn-cwMAlaLXGoXT0&amp;quot;
Res body: Question was not from the same room as the feedback given
POST /api/feedback 
</output>
                <output type="stdout">400 
</output>
                <output type="stdout">5.702 ms - 57
</output>
            </test>
            <test duration="0" locationUrl="test:///api/feedback. POST /.400 if question array length was not the same as room question array length" name="400 if question array length was not the same as room question array length" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\feedback.test.js" status="passed"/>
            <test duration="8" locationUrl="test:///api/feedback. POST /.Should return 400 if question was from other room than feedback" name="Should return 400 if question was from other room than feedback" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\feedback.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;roomId&amp;quot;:&amp;quot;5cdd76eaf0ab0124889da3a2&amp;quot;,&amp;quot;questionId&amp;quot;:&amp;quot;5cdd76eaf0ab0124889da3a5&amp;quot;,&amp;quot;answerId&amp;quot;:&amp;quot;5cdd76eaf0ab0124889da3a8&amp;quot;}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlYWYwYWIwMTI0ODg5ZGEzYTAiLCJyb2xlIjowLCJpYXQiOjE1NTgwMTc3NzB9.jwEo4BNO83yihIsIMT_aQ9A2qxuLrEFRonSCLZZ-0bo&amp;quot;
Res body: Question was not from the same room as the feedback given
POST /api/feedback 
</output>
                <output type="stdout">400 
</output>
                <output type="stdout">4.897 ms - 57
</output>
            </test>
            <test duration="11" locationUrl="test:///api/feedback. POST /.should return 200 if all fields provided correctly" name="should return 200 if all fields provided correctly" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\feedback.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;roomId&amp;quot;:&amp;quot;5cdd76eaf0ab0124889da3ac&amp;quot;,&amp;quot;questionId&amp;quot;:&amp;quot;5cdd76eaf0ab0124889da3af&amp;quot;,&amp;quot;answerId&amp;quot;:&amp;quot;5cdd76eaf0ab0124889da3b2&amp;quot;}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlYWYwYWIwMTI0ODg5ZGEzYWEiLCJyb2xlIjowLCJpYXQiOjE1NTgwMTc3NzB9.qVoE5Vq5Gg94D2df_heNAnfevEYyflcPGrv8jDhTE0I&amp;quot;
Res body: {&amp;quot;_id&amp;quot;:&amp;quot;5cdd76eaf0ab0124889da3b3&amp;quot;,&amp;quot;user&amp;quot;:&amp;quot;5cdd76eaf0ab0124889da3aa&amp;quot;,&amp;quot;room&amp;quot;:&amp;quot;5cdd76eaf0ab0124889da3ac&amp;quot;,&amp;quot;answer&amp;quot;:&amp;quot;5cdd76eaf0ab0124889da3b2&amp;quot;,&amp;quot;question&amp;quot;:&amp;quot;5cdd76eaf0ab0124889da3af&amp;quot;}
POST /api/feedback 
</output>
                <output type="stdout">200 
</output>
                <output type="stdout">9.313 ms - 176
</output>
            </test>
        </suite>
        <suite duration="1140" locationUrl="suite:///api/feedback.GET requests" name="GET requests" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\feedback.test.js" status="passed">
            <suite duration="1074" locationUrl="suite:///api/feedback.GET requests. GET /" name=" GET /" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\feedback.test.js" status="passed">
                <test duration="1019" locationUrl="test:///api/feedback.GET requests. GET /.Should return array with one feedback" name="Should return array with one feedback" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\feedback.test.js" status="passed">
                    <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlYWYwYWIwMTI0ODg5ZGEzYjQiLCJyb2xlIjowLCJpYXQiOjE1NTgwMTc3NzB9.6to5WKiXV_yuYj8a3FQD9ucZN1aJhdVb5J3DWgyHDHw&amp;quot;
{}
Res body: [{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76eaf0ab0124889da3bd&amp;quot;,&amp;quot;answer&amp;quot;:{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76eaf0ab0124889da3bc&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;123&amp;quot;,&amp;quot;__v&amp;quot;:0},&amp;quot;question&amp;quot;:{&amp;quot;rooms&amp;quot;:[&amp;quot;5cdd76eaf0ab0124889da3b6&amp;quot;],&amp;quot;isActive&amp;quot;:true,&amp;quot;_id&amp;quot;:&amp;quot;5cdd76eaf0ab0124889da3b9&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;123&amp;quot;,&amp;quot;answerOptions&amp;quot;:[{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76eaf0ab0124889da3b7&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;123&amp;quot;},{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76eaf0ab0124889da3b8&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;1234&amp;quot;}],&amp;quot;__v&amp;quot;:0},&amp;quot;user&amp;quot;:&amp;quot;5cdd76eaf0ab0124889da3b4&amp;quot;,&amp;quot;room&amp;quot;:&amp;quot;5cdd76eaf0ab0124889da3b6&amp;quot;,&amp;quot;createdAt&amp;quot;:&amp;quot;2019-05-16T14:42:50.501Z&amp;quot;,&amp;quot;updatedAt&amp;quot;:&amp;quot;2019-05-16T14:42:50.501Z&amp;quot;,&amp;quot;__v&amp;quot;:0}]
GET /api/feedback/ 
</output>
                    <output type="stdout">200 
</output>
                    <output type="stdout">1014.488 ms - 494
</output>
                </test>
                <test duration="6" locationUrl="test:///api/feedback.GET requests. GET /.Should return 400 if bad query parsed" name="Should return 400 if bad query parsed" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\feedback.test.js" status="passed">
                    <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlYmYwYWIwMTI0ODg5ZGEzYmUiLCJyb2xlIjowLCJpYXQiOjE1NTgwMTc3NzF9.Gwe7H-lqv5ReMKH-fSneKCR021LC3ku3fbBBSWFY8rc&amp;quot;
Res body: Invalid query parameter
GET /api/feedback?user=hej 
</output>
                    <output type="stdout">400 
</output>
                    <output type="stdout">3.212 ms - 23
</output>
                </test>
                <test duration="7" locationUrl="test:///api/feedback.GET requests. GET /.Should only return one length array when user query parsed" name="Should only return one length array when user query parsed" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\feedback.test.js" status="passed">
                    <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlYmYwYWIwMTI0ODg5ZGEzYzgiLCJyb2xlIjowLCJpYXQiOjE1NTgwMTc3NzF9.5Ms-fE9fiD1iXqMLRWL9WqJXz8LHuxForgtwDgctYVI&amp;quot;
{ user: 5cdd76ebf0ab0124889da3c8 }
Res body: [{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76ebf0ab0124889da3d1&amp;quot;,&amp;quot;answer&amp;quot;:{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76ebf0ab0124889da3d0&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;123&amp;quot;,&amp;quot;__v&amp;quot;:0},&amp;quot;question&amp;quot;:{&amp;quot;rooms&amp;quot;:[&amp;quot;5cdd76ebf0ab0124889da3ca&amp;quot;],&amp;quot;isActive&amp;quot;:true,&amp;quot;_id&amp;quot;:&amp;quot;5cdd76ebf0ab0124889da3cd&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;123&amp;quot;,&amp;quot;answerOptions&amp;quot;:[{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76ebf0ab0124889da3cb&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;123&amp;quot;},{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76ebf0ab0124889da3cc&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;1234&amp;quot;}],&amp;quot;__v&amp;quot;:0},&amp;quot;user&amp;quot;:&amp;quot;5cdd76ebf0ab0124889da3c8&amp;quot;,&amp;quot;room&amp;quot;:&amp;quot;5cdd76ebf0ab0124889da3ca&amp;quot;,&amp;quot;createdAt&amp;quot;:&amp;quot;2019-05-16T14:42:51.584Z&amp;quot;,&amp;quot;updatedAt&amp;quot;:&amp;quot;2019-05-16T14:42:51.584Z&amp;quot;,&amp;quot;__v&amp;quot;:0}]
GET /api/feedback/?user=me 
</output>
                    <output type="stdout">200 
</output>
                    <output type="stdout">4.621 ms - 494
</output>
                </test>
                <test duration="8" locationUrl="test:///api/feedback.GET requests. GET /.Should return only feedback from given room if query parsed" name="Should return only feedback from given room if query parsed" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\feedback.test.js" status="passed">
                    <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlYmYwYWIwMTI0ODg5ZGEzZDYiLCJyb2xlIjowLCJpYXQiOjE1NTgwMTc3NzF9.CorZe2V0_cFcTY7djs4uCPSc__2b_hSULmqnYwdj-lY&amp;quot;
{ room: &amp;#39;5cdd76ebf0ab0124889da3d8&amp;#39; }
Res body: [{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76ebf0ab0124889da3df&amp;quot;,&amp;quot;answer&amp;quot;:{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76ebf0ab0124889da3de&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;123&amp;quot;,&amp;quot;__v&amp;quot;:0},&amp;quot;question&amp;quot;:{&amp;quot;rooms&amp;quot;:[&amp;quot;5cdd76ebf0ab0124889da3d8&amp;quot;],&amp;quot;isActive&amp;quot;:true,&amp;quot;_id&amp;quot;:&amp;quot;5cdd76ebf0ab0124889da3db&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;123&amp;quot;,&amp;quot;answerOptions&amp;quot;:[{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76ebf0ab0124889da3d9&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;123&amp;quot;},{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76ebf0ab0124889da3da&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;1234&amp;quot;}],&amp;quot;__v&amp;quot;:0},&amp;quot;user&amp;quot;:&amp;quot;5cdd76ebf0ab0124889da3d6&amp;quot;,&amp;quot;room&amp;quot;:&amp;quot;5cdd76ebf0ab0124889da3d8&amp;quot;,&amp;quot;createdAt&amp;quot;:&amp;quot;2019-05-16T14:42:51.603Z&amp;quot;,&amp;quot;updatedAt&amp;quot;:&amp;quot;2019-05-16T14:42:51.603Z&amp;quot;,&amp;quot;__v&amp;quot;:0}]
GET /api/feedback/?room=5cdd76ebf0ab0124889da3d8 
</output>
                    <output type="stdout">200 
</output>
                    <output type="stdout">5.348 ms - 494
</output>
                </test>
                <test duration="9" locationUrl="test:///api/feedback.GET requests. GET /.Should only return feedback within a month when time query parsed in url" name="Should only return feedback within a month when time query parsed in url" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\feedback.test.js" status="passed">
                    <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlYmYwYWIwMTI0ODg5ZGEzZTUiLCJyb2xlIjowLCJpYXQiOjE1NTgwMTc3NzF9.tb0zjT3i2TKFRkC2n9zJZWi1ysEvlFgFkI9HdbtRIb0&amp;quot;
{ createdAt: { &amp;#39;$gt&amp;#39;: 2019-04-15T22:00:00.000Z } }
Res body: [{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76ebf0ab0124889da3ee&amp;quot;,&amp;quot;answer&amp;quot;:{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76ebf0ab0124889da3ed&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;123&amp;quot;,&amp;quot;__v&amp;quot;:0},&amp;quot;question&amp;quot;:{&amp;quot;rooms&amp;quot;:[&amp;quot;5cdd76ebf0ab0124889da3e7&amp;quot;],&amp;quot;isActive&amp;quot;:true,&amp;quot;_id&amp;quot;:&amp;quot;5cdd76ebf0ab0124889da3ea&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;123&amp;quot;,&amp;quot;answerOptions&amp;quot;:[{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76ebf0ab0124889da3e8&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;123&amp;quot;},{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76ebf0ab0124889da3e9&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;1234&amp;quot;}],&amp;quot;__v&amp;quot;:0},&amp;quot;user&amp;quot;:&amp;quot;5cdd76ebf0ab0124889da3e5&amp;quot;,&amp;quot;room&amp;quot;:&amp;quot;5cdd76ebf0ab0124889da3e7&amp;quot;,&amp;quot;createdAt&amp;quot;:&amp;quot;2019-05-16T14:42:51.626Z&amp;quot;,&amp;quot;updatedAt&amp;quot;:&amp;quot;2019-05-16T14:42:51.626Z&amp;quot;,&amp;quot;__v&amp;quot;:0}]
GET /api/feedback/?t=month 
</output>
                    <output type="stdout">200 
</output>
                    <output type="stdout">6.436 ms - 494
</output>
                </test>
                <test duration="8" locationUrl="test:///api/feedback.GET requests. GET /.should only return feedback within a year when year restriction set in query" name="should only return feedback within a year when year restriction set in query" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\feedback.test.js" status="passed">
                    <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlYmYwYWIwMTI0ODg5ZGEzZjMiLCJyb2xlIjowLCJpYXQiOjE1NTgwMTc3NzF9.T-98MQOhzy5WziOUJj6Q-8ZHEnlMpwfsy9VRqrx5NiY&amp;quot;
{ createdAt: { &amp;#39;$gt&amp;#39;: 2018-04-30T22:00:00.000Z } }
Res body: [{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76ebf0ab0124889da3fc&amp;quot;,&amp;quot;answer&amp;quot;:{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76ebf0ab0124889da3fb&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;123&amp;quot;,&amp;quot;__v&amp;quot;:0},&amp;quot;question&amp;quot;:{&amp;quot;rooms&amp;quot;:[&amp;quot;5cdd76ebf0ab0124889da3f5&amp;quot;],&amp;quot;isActive&amp;quot;:true,&amp;quot;_id&amp;quot;:&amp;quot;5cdd76ebf0ab0124889da3f8&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;123&amp;quot;,&amp;quot;answerOptions&amp;quot;:[{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76ebf0ab0124889da3f6&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;123&amp;quot;},{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76ebf0ab0124889da3f7&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;1234&amp;quot;}],&amp;quot;__v&amp;quot;:0},&amp;quot;user&amp;quot;:&amp;quot;5cdd76ebf0ab0124889da3f3&amp;quot;,&amp;quot;room&amp;quot;:&amp;quot;5cdd76ebf0ab0124889da3f5&amp;quot;,&amp;quot;createdAt&amp;quot;:&amp;quot;2019-05-16T14:42:51.646Z&amp;quot;,&amp;quot;updatedAt&amp;quot;:&amp;quot;2019-05-16T14:42:51.646Z&amp;quot;,&amp;quot;__v&amp;quot;:0}]
GET /api/feedback/?t=year 
</output>
                    <output type="stdout">200 
</output>
                    <output type="stdout">4.320 ms - 494
</output>
                </test>
                <test duration="8" locationUrl="test:///api/feedback.GET requests. GET /.should only return feedback within a week when week restriction set in query" name="should only return feedback within a week when week restriction set in query" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\feedback.test.js" status="passed">
                    <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlYmYwYWIwMTI0ODg5ZGE0MDEiLCJyb2xlIjowLCJpYXQiOjE1NTgwMTc3NzF9.YUV_YeKV-GI4xU2NGwyFA2OH2eaQxOHZfDh3KKPeGHk&amp;quot;
{ createdAt: { &amp;#39;$gt&amp;#39;: 2019-05-09T14:00:00.000Z } }
Res body: [{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76ebf0ab0124889da40a&amp;quot;,&amp;quot;answer&amp;quot;:{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76ebf0ab0124889da409&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;123&amp;quot;,&amp;quot;__v&amp;quot;:0},&amp;quot;question&amp;quot;:{&amp;quot;rooms&amp;quot;:[&amp;quot;5cdd76ebf0ab0124889da403&amp;quot;],&amp;quot;isActive&amp;quot;:true,&amp;quot;_id&amp;quot;:&amp;quot;5cdd76ebf0ab0124889da406&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;123&amp;quot;,&amp;quot;answerOptions&amp;quot;:[{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76ebf0ab0124889da404&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;123&amp;quot;},{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76ebf0ab0124889da405&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;1234&amp;quot;}],&amp;quot;__v&amp;quot;:0},&amp;quot;user&amp;quot;:&amp;quot;5cdd76ebf0ab0124889da401&amp;quot;,&amp;quot;room&amp;quot;:&amp;quot;5cdd76ebf0ab0124889da403&amp;quot;,&amp;quot;createdAt&amp;quot;:&amp;quot;2019-05-16T14:42:51.664Z&amp;quot;,&amp;quot;updatedAt&amp;quot;:&amp;quot;2019-05-16T14:42:51.664Z&amp;quot;,&amp;quot;__v&amp;quot;:0}]
GET /api/feedback/?t=week 
</output>
                    <output type="stdout">200 
</output>
                    <output type="stdout">5.437 ms - 494
</output>
                </test>
                <test duration="9" locationUrl="test:///api/feedback.GET requests. GET /.should only return feedback from today when today-restriction set in query" name="should only return feedback from today when today-restriction set in query" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\feedback.test.js" status="passed">
                    <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlYmYwYWIwMTI0ODg5ZGE0MGYiLCJyb2xlIjowLCJpYXQiOjE1NTgwMTc3NzF9.B-uHGGxG3pjtAVMM5F0zCbpdbkg1nDnGDBc1XAHJaFs&amp;quot;
{ createdAt: { &amp;#39;$gt&amp;#39;: 2019-05-15T14:42:00.000Z } }
Res body: [{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76ebf0ab0124889da418&amp;quot;,&amp;quot;answer&amp;quot;:{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76ebf0ab0124889da417&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;123&amp;quot;,&amp;quot;__v&amp;quot;:0},&amp;quot;question&amp;quot;:{&amp;quot;rooms&amp;quot;:[&amp;quot;5cdd76ebf0ab0124889da411&amp;quot;],&amp;quot;isActive&amp;quot;:true,&amp;quot;_id&amp;quot;:&amp;quot;5cdd76ebf0ab0124889da414&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;123&amp;quot;,&amp;quot;answerOptions&amp;quot;:[{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76ebf0ab0124889da412&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;123&amp;quot;},{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76ebf0ab0124889da413&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;1234&amp;quot;}],&amp;quot;__v&amp;quot;:0},&amp;quot;user&amp;quot;:&amp;quot;5cdd76ebf0ab0124889da40f&amp;quot;,&amp;quot;room&amp;quot;:&amp;quot;5cdd76ebf0ab0124889da411&amp;quot;,&amp;quot;createdAt&amp;quot;:&amp;quot;2019-05-16T14:42:51.684Z&amp;quot;,&amp;quot;updatedAt&amp;quot;:&amp;quot;2019-05-16T14:42:51.684Z&amp;quot;,&amp;quot;__v&amp;quot;:0}]
GET /api/feedback/?t=day 
</output>
                    <output type="stdout">200 
</output>
                    <output type="stdout">5.971 ms - 494
</output>
                </test>
            </suite>
            <suite duration="30" locationUrl="suite:///api/feedback.GET requests.GET /questionStatistics" name="GET /questionStatistics" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\feedback.test.js" status="passed">
                <test duration="5" locationUrl="test:///api/feedback.GET requests.GET /questionStatistics.Should return array with answer object" name="Should return array with answer object" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\feedback.test.js" status="passed">
                    <output type="stdout">Req body: {}
id 5cdd76ebf0ab0124889da422
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlYmYwYWIwMTI0ODg5ZGE0MWQiLCJyb2xlIjowLCJpYXQiOjE1NTgwMTc3NzF9.R7eJz0v29wgBiWOWte1pWnJAYN-NPuSBIFs2tz8FBSA&amp;quot;
Res body: [{&amp;quot;answer&amp;quot;:{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76ebf0ab0124889da425&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;123&amp;quot;},&amp;quot;timesAnswered&amp;quot;:1}]
GET /api/feedback/questionStatistics/5cdd76ebf0ab0124889da422/ 
</output>
                    <output type="stdout">200 
</output>
                    <output type="stdout">3.842 ms - 79
</output>
                </test>
                <test duration="7" locationUrl="test:///api/feedback.GET requests.GET /questionStatistics.Should return array with timesAnswered property" name="Should return array with timesAnswered property" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\feedback.test.js" status="passed">
                    <output type="stdout">Req body: {}
id 5cdd76ebf0ab0124889da42c
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlYmYwYWIwMTI0ODg5ZGE0MjciLCJyb2xlIjowLCJpYXQiOjE1NTgwMTc3NzF9.ylduwmIazZyWh0CyhKl2IyXPrMb6WCLnZGIQUtnIZPs&amp;quot;
Res body: [{&amp;quot;answer&amp;quot;:{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76ebf0ab0124889da42f&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;123&amp;quot;},&amp;quot;timesAnswered&amp;quot;:1}]
GET /api/feedback/questionStatistics/5cdd76ebf0ab0124889da42c/ 
</output>
                    <output type="stdout">200 
</output>
                    <output type="stdout">4.777 ms - 79
</output>
                </test>
                <test duration="10" locationUrl="test:///api/feedback.GET requests.GET /questionStatistics.Should return valid timesAnswered for question" name="Should return valid timesAnswered for question" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\feedback.test.js" status="passed">
                    <output type="stdout">Req body: {}
id 5cdd76ebf0ab0124889da436
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlYmYwYWIwMTI0ODg5ZGE0MzEiLCJyb2xlIjowLCJpYXQiOjE1NTgwMTc3NzF9.g5H05ntWEz53ngki6roGXlGVGZm8StOXxu3nxnYtIwY&amp;quot;
Res body: [{&amp;quot;answer&amp;quot;:{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76ebf0ab0124889da439&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;123&amp;quot;},&amp;quot;timesAnswered&amp;quot;:3}]
GET /api/feedback/questionStatistics/5cdd76ebf0ab0124889da436/ 
</output>
                    <output type="stdout">200 
</output>
                    <output type="stdout">5.816 ms - 79
</output>
                </test>
                <test duration="8" locationUrl="test:///api/feedback.GET requests.GET /questionStatistics.Should also regulate timesAnswered if user filter (query) parsed in url" name="Should also regulate timesAnswered if user filter (query) parsed in url" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\feedback.test.js" status="passed">
                    <output type="stdout">Req body: {}
id 5cdd76ebf0ab0124889da442
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlYmYwYWIwMTI0ODg5ZGE0M2QiLCJyb2xlIjowLCJpYXQiOjE1NTgwMTc3NzF9.fQXtuZ7T_D2hAavIV8tUesv4hM67YCqdxMW7V6OipWM&amp;quot;
Res body: [{&amp;quot;answer&amp;quot;:{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76ebf0ab0124889da445&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;123&amp;quot;},&amp;quot;timesAnswered&amp;quot;:1}]
GET /api/feedback/questionStatistics/5cdd76ebf0ab0124889da442/?user=me 
</output>
                    <output type="stdout">200 
</output>
                    <output type="stdout">4.379 ms - 79
</output>
                </test>
            </suite>
            <suite duration="36" locationUrl="suite:///api/feedback.GET requests.GET /answeredQuestions/" name="GET /answeredQuestions/" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\feedback.test.js" status="passed">
                <test duration="6" locationUrl="test:///api/feedback.GET requests.GET /answeredQuestions/.Should return all unique questions with feedback" name="Should return all unique questions with feedback" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\feedback.test.js" status="passed">
                    <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlYmYwYWIwMTI0ODg5ZGE0NDkiLCJyb2xlIjowLCJpYXQiOjE1NTgwMTc3NzF9._JWfnABeYWSYkIUE6R0dNR9EhO3BYkbQRyD9NrHCkXo&amp;quot;
Res body: [{&amp;quot;question&amp;quot;:{&amp;quot;value&amp;quot;:&amp;quot;123&amp;quot;,&amp;quot;_id&amp;quot;:&amp;quot;5cdd76ebf0ab0124889da44e&amp;quot;},&amp;quot;timesAnswered&amp;quot;:2}]
GET /api/feedback/answeredQuestions/ 
</output>
                    <output type="stdout">200 
</output>
                    <output type="stdout">3.616 ms - 81
</output>
                </test>
                <test duration="5" locationUrl="test:///api/feedback.GET requests.GET /answeredQuestions/.question in array should have value" name="question in array should have value" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\feedback.test.js" status="passed">
                    <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlYmYwYWIwMTI0ODg5ZGE0NTQiLCJyb2xlIjowLCJpYXQiOjE1NTgwMTc3NzF9.b3Jhu8Tznb3EMd8D6J4Y8y5q_p6BjWxyJ5PrwqhBonE&amp;quot;
Res body: [{&amp;quot;question&amp;quot;:{&amp;quot;value&amp;quot;:&amp;quot;123&amp;quot;,&amp;quot;_id&amp;quot;:&amp;quot;5cdd76ebf0ab0124889da459&amp;quot;},&amp;quot;timesAnswered&amp;quot;:1}]
GET /api/feedback/answeredQuestions/ 
</output>
                    <output type="stdout">200 
</output>
                    <output type="stdout">3.540 ms - 81
</output>
                </test>
                <test duration="8" locationUrl="test:///api/feedback.GET requests.GET /answeredQuestions/.Should have a property timesAnswered" name="Should have a property timesAnswered" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\feedback.test.js" status="passed">
                    <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlYmYwYWIwMTI0ODg5ZGE0NWUiLCJyb2xlIjowLCJpYXQiOjE1NTgwMTc3NzF9.HiVmQN2w3TeVc3lcouBs3vbZ09TVj3QbRAjd1IUSV9E&amp;quot;
Res body: [{&amp;quot;question&amp;quot;:{&amp;quot;value&amp;quot;:&amp;quot;123&amp;quot;,&amp;quot;_id&amp;quot;:&amp;quot;5cdd76ebf0ab0124889da463&amp;quot;},&amp;quot;timesAnswered&amp;quot;:1}]
GET /api/feedback/answeredQuestions/ 
</output>
                    <output type="stdout">200 
</output>
                    <output type="stdout">6.174 ms - 81
</output>
                </test>
                <test duration="9" locationUrl="test:///api/feedback.GET requests.GET /answeredQuestions/.Should return times answered" name="Should return times answered" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\feedback.test.js" status="passed">
                    <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlYmYwYWIwMTI0ODg5ZGE0NjgiLCJyb2xlIjowLCJpYXQiOjE1NTgwMTc3NzF9.AMmSbBtAY9x8l7s4q6cRms_KRsAV7kbVetOonHr_kWI&amp;quot;
Res body: [{&amp;quot;question&amp;quot;:{&amp;quot;value&amp;quot;:&amp;quot;123&amp;quot;,&amp;quot;_id&amp;quot;:&amp;quot;5cdd76ebf0ab0124889da46d&amp;quot;},&amp;quot;timesAnswered&amp;quot;:3}]
GET /api/feedback/answeredQuestions/ 
</output>
                    <output type="stdout">200 
</output>
                    <output type="stdout">5.048 ms - 81
</output>
                </test>
                <test duration="8" locationUrl="test:///api/feedback.GET requests.GET /answeredQuestions/.Should be possible to send queries and limit the result" name="Should be possible to send queries and limit the result" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\feedback.test.js" status="passed">
                    <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlYmYwYWIwMTI0ODg5ZGE0NzQiLCJyb2xlIjowLCJpYXQiOjE1NTgwMTc3NzF9.8aRFvjPqynJ1WySvtb96qJBaT9NTjArffy9fg2R1S_Q&amp;quot;
Res body: [{&amp;quot;question&amp;quot;:{&amp;quot;value&amp;quot;:&amp;quot;123&amp;quot;,&amp;quot;_id&amp;quot;:&amp;quot;5cdd76ebf0ab0124889da479&amp;quot;},&amp;quot;timesAnswered&amp;quot;:1}]
GET /api/feedback/answeredQuestions/?user=me 
</output>
                    <output type="stdout">200 
</output>
                    <output type="stdout">3.770 ms - 81
</output>
                </test>
            </suite>
        </suite>
    </suite>
    <suite duration="280" locationUrl="suite:///api/questions" name="/api/questions" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\questions.test.js" status="passed">
        <suite duration="63" locationUrl="suite:///api/questions.GET /" name="GET /" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\questions.test.js" status="passed">
            <test duration="3" locationUrl="test:///api/questions.GET /.Should return 401 if token not provided" name="Should return 401 if token not provided" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\questions.test.js" status="passed">
                <output type="stdout">Req body: {}
&amp;quot;null&amp;quot;
Res body: Invalid token
GET /api/questions 
</output>
                <output type="stdout">401 
</output>
                <output type="stdout">0.545 ms - 13
</output>
            </test>
            <test duration="3" locationUrl="test:///api/questions.GET /.401 if wrong token format sent" name="401 if wrong token format sent" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\questions.test.js" status="passed">
                <output type="stdout">Req body: {}
&amp;quot;hej&amp;quot;
Res body: Invalid token
GET /api/questions 
</output>
                <output type="stdout">401 
</output>
                <output type="stdout">0.414 ms - 13
</output>
            </test>
            <test duration="5" locationUrl="test:///api/questions.GET /.404 if user was not found" name="404 if user was not found" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\questions.test.js" status="passed">
                <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlY2YwYWIwMTI0ODg5ZGE0OWQiLCJyb2xlIjowLCJpYXQiOjE1NTgwMTc3NzJ9.RpT0nJN-uhLSAHPttPuLFoJ7EiYKLi5r0ylQOcK4Ic8&amp;quot;
Res body: User with id (decoded from token) 5cdd76ecf0ab0124889da49d was not found
GET /api/questions 
</output>
                <output type="stdout">404 
</output>
                <output type="stdout">2.241 ms - 72
</output>
            </test>
            <test duration="3" locationUrl="test:///api/questions.GET /.400 if roomId not provided" name="400 if roomId not provided" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\questions.test.js" status="passed">
                <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlY2YwYWIwMTI0ODg5ZGE0OWUiLCJyb2xlIjowLCJpYXQiOjE1NTgwMTc3NzJ9.yei41r3J28j6e3IyNdczvAiV9fmIGO3ahZGAuAPBwyc&amp;quot;
Res body: Room id null was not valid
GET /api/questions 
</output>
                <output type="stdout">400 
</output>
                <output type="stdout">1.466 ms - 26
</output>
            </test>
            <test duration="4" locationUrl="test:///api/questions.GET /.400 if roomId was wrong format" name="400 if roomId was wrong format" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\questions.test.js" status="passed">
                <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlY2YwYWIwMTI0ODg5ZGE0YTYiLCJyb2xlIjowLCJpYXQiOjE1NTgwMTc3NzJ9.EdtGCTat-djQuAG39Z-nxv1kd78a7AE3ZGN4cMyVtKs&amp;quot;
Res body: Room id 12345 was not valid
GET /api/questions 
</output>
                <output type="stdout">400 
</output>
                <output type="stdout">2.072 ms - 27
</output>
            </test>
            <test duration="4" locationUrl="test:///api/questions.GET /.404 if room was not found" name="404 if room was not found" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\questions.test.js" status="passed">
                <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlY2YwYWIwMTI0ODg5ZGE0YWUiLCJyb2xlIjowLCJpYXQiOjE1NTgwMTc3NzN9.jGCZ08h7bjrefJfrnhhWG2ajXnlUzqhw1R7ltp14BBk&amp;quot;
Res body: Room with id 5cdd76edf0ab0124889da4b6 was not found
GET /api/questions 
</output>
                <output type="stdout">404 
</output>
                <output type="stdout">2.554 ms - 51
</output>
            </test>
            <test duration="6" locationUrl="test:///api/questions.GET /.should return questions array with 1 length" name="should return questions array with 1 length" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\questions.test.js" status="passed">
                <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlZGYwYWIwMTI0ODg5ZGE0YjciLCJyb2xlIjowLCJpYXQiOjE1NTgwMTc3NzN9.pCSNeiahc7Gv8H-DbExs6T3csmKlfqv_lZrZv4e6YSU&amp;quot;
Res body: [{&amp;quot;rooms&amp;quot;:[&amp;quot;5cdd76edf0ab0124889da4b9&amp;quot;],&amp;quot;isActive&amp;quot;:true,&amp;quot;_id&amp;quot;:&amp;quot;5cdd76edf0ab0124889da4bc&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;12345&amp;quot;,&amp;quot;answerOptions&amp;quot;:[{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76edf0ab0124889da4ba&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;hej&amp;quot;,&amp;quot;__v&amp;quot;:0},{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76edf0ab0124889da4bb&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;hej2&amp;quot;,&amp;quot;__v&amp;quot;:0}],&amp;quot;__v&amp;quot;:0}]
GET /api/questions 
</output>
                <output type="stdout">200 
</output>
                <output type="stdout">4.369 ms - 246
</output>
            </test>
            <test duration="4" locationUrl="test:///api/questions.GET /.should return 200 when getting questions array with valid parameters" name="should return 200 when getting questions array with valid parameters" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\questions.test.js" status="passed">
                <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlZGYwYWIwMTI0ODg5ZGE0YmYiLCJyb2xlIjowLCJpYXQiOjE1NTgwMTc3NzN9.bSLW4CUjapXo6U-g9AlKc_iy14qGato-0Or13pY93J8&amp;quot;
Res body: [{&amp;quot;rooms&amp;quot;:[&amp;quot;5cdd76edf0ab0124889da4c1&amp;quot;],&amp;quot;isActive&amp;quot;:true,&amp;quot;_id&amp;quot;:&amp;quot;5cdd76edf0ab0124889da4c4&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;12345&amp;quot;,&amp;quot;answerOptions&amp;quot;:[{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76edf0ab0124889da4c2&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;hej&amp;quot;,&amp;quot;__v&amp;quot;:0},{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76edf0ab0124889da4c3&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;hej2&amp;quot;,&amp;quot;__v&amp;quot;:0}],&amp;quot;__v&amp;quot;:0}]
GET /api/questions 
</output>
                <output type="stdout">200 
</output>
                <output type="stdout">3.430 ms - 246
</output>
            </test>
            <test duration="6" locationUrl="test:///api/questions.GET /.should return question object with roomId field" name="should return question object with roomId field" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\questions.test.js" status="passed">
                <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlZGYwYWIwMTI0ODg5ZGE0YzciLCJyb2xlIjowLCJpYXQiOjE1NTgwMTc3NzN9.PXOdb30CQPFs2beDPGKFsCmM05-FAA-DYQPaU8q0EF4&amp;quot;
Res body: [{&amp;quot;rooms&amp;quot;:[&amp;quot;5cdd76edf0ab0124889da4c9&amp;quot;],&amp;quot;isActive&amp;quot;:true,&amp;quot;_id&amp;quot;:&amp;quot;5cdd76edf0ab0124889da4cc&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;12345&amp;quot;,&amp;quot;answerOptions&amp;quot;:[{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76edf0ab0124889da4ca&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;hej&amp;quot;,&amp;quot;__v&amp;quot;:0},{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76edf0ab0124889da4cb&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;hej2&amp;quot;,&amp;quot;__v&amp;quot;:0}],&amp;quot;__v&amp;quot;:0}]
GET /api/questions 
</output>
                <output type="stdout">200 
</output>
                <output type="stdout">4.801 ms - 246
</output>
            </test>
            <test duration="8" locationUrl="test:///api/questions.GET /.should only return questions from detected room/building" name="should only return questions from detected room/building" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\questions.test.js" status="passed">
                <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlZGYwYWIwMTI0ODg5ZGE0Y2YiLCJyb2xlIjowLCJpYXQiOjE1NTgwMTc3NzN9.ocXpp2fdoC_djmX0fU12V_kHGYMxIUXqXIyDuzMvCeU&amp;quot;
Res body: [{&amp;quot;rooms&amp;quot;:[&amp;quot;5cdd76edf0ab0124889da4d1&amp;quot;],&amp;quot;isActive&amp;quot;:true,&amp;quot;_id&amp;quot;:&amp;quot;5cdd76edf0ab0124889da4d4&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;12345&amp;quot;,&amp;quot;answerOptions&amp;quot;:[{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76edf0ab0124889da4d2&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;hej&amp;quot;,&amp;quot;__v&amp;quot;:0},{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76edf0ab0124889da4d3&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;hej2&amp;quot;,&amp;quot;__v&amp;quot;:0}],&amp;quot;__v&amp;quot;:0}]
GET /api/questions 
</output>
                <output type="stdout">200 
</output>
                <output type="stdout">3.376 ms - 246
</output>
            </test>
            <test duration="5" locationUrl="test:///api/questions.GET /.Should return answer options" name="Should return answer options" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\questions.test.js" status="passed">
                <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlZGYwYWIwMTI0ODg5ZGE0ZGUiLCJyb2xlIjowLCJpYXQiOjE1NTgwMTc3NzN9.yzRbBFx_EEilj7GuOCh_ULzjqAOMK9sR3nTOqcTUBbA&amp;quot;
Res body: [{&amp;quot;rooms&amp;quot;:[&amp;quot;5cdd76edf0ab0124889da4e0&amp;quot;],&amp;quot;isActive&amp;quot;:true,&amp;quot;_id&amp;quot;:&amp;quot;5cdd76edf0ab0124889da4e3&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;12345&amp;quot;,&amp;quot;answerOptions&amp;quot;:[{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76edf0ab0124889da4e1&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;hej&amp;quot;,&amp;quot;__v&amp;quot;:0},{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76edf0ab0124889da4e2&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;hej2&amp;quot;,&amp;quot;__v&amp;quot;:0}],&amp;quot;__v&amp;quot;:0}]
GET /api/questions 
</output>
                <output type="stdout">200 
</output>
                <output type="stdout">3.321 ms - 246
</output>
            </test>
            <test duration="5" locationUrl="test:///api/questions.GET /.Should return answer options with name" name="Should return answer options with name" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\questions.test.js" status="passed">
                <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlZGYwYWIwMTI0ODg5ZGE0ZTYiLCJyb2xlIjowLCJpYXQiOjE1NTgwMTc3NzN9.N7SYh6bd6ajs-F8zG6mfujQhONMDqm1oZdDOY77-MGk&amp;quot;
Res body: [{&amp;quot;rooms&amp;quot;:[&amp;quot;5cdd76edf0ab0124889da4e8&amp;quot;],&amp;quot;isActive&amp;quot;:true,&amp;quot;_id&amp;quot;:&amp;quot;5cdd76edf0ab0124889da4eb&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;12345&amp;quot;,&amp;quot;answerOptions&amp;quot;:[{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76edf0ab0124889da4e9&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;hej&amp;quot;,&amp;quot;__v&amp;quot;:0},{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76edf0ab0124889da4ea&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;hej2&amp;quot;,&amp;quot;__v&amp;quot;:0}],&amp;quot;__v&amp;quot;:0}]
GET /api/questions 
</output>
                <output type="stdout">200 
</output>
                <output type="stdout">3.387 ms - 246
</output>
            </test>
            <test duration="7" locationUrl="test:///api/questions.GET /.Should return answer options with id" name="Should return answer options with id" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\questions.test.js" status="passed">
                <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlZGYwYWIwMTI0ODg5ZGE0ZWUiLCJyb2xlIjowLCJpYXQiOjE1NTgwMTc3NzN9.Hnf_l44YPZg5-p3ZX_Ndfped1ykAXhYzGWItRbUi4oQ&amp;quot;
Res body: [{&amp;quot;rooms&amp;quot;:[&amp;quot;5cdd76edf0ab0124889da4f0&amp;quot;],&amp;quot;isActive&amp;quot;:true,&amp;quot;_id&amp;quot;:&amp;quot;5cdd76edf0ab0124889da4f3&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;12345&amp;quot;,&amp;quot;answerOptions&amp;quot;:[{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76edf0ab0124889da4f1&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;hej&amp;quot;,&amp;quot;__v&amp;quot;:0},{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76edf0ab0124889da4f2&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;hej2&amp;quot;,&amp;quot;__v&amp;quot;:0}],&amp;quot;__v&amp;quot;:0}]
GET /api/questions 
</output>
                <output type="stdout">200 
</output>
                <output type="stdout">5.199 ms - 246
</output>
            </test>
        </suite>
        <suite duration="8" locationUrl="suite:///api/questions.GET /active" name="GET /active" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\questions.test.js" status="passed">
            <test duration="8" locationUrl="test:///api/questions.GET /active.Should only return active questions" name="Should only return active questions" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\questions.test.js" status="passed">
                <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlZGYwYWIwMTI0ODg5ZGE0ZjYiLCJyb2xlIjowLCJpYXQiOjE1NTgwMTc3NzN9.1AT0ll0T60OmMcLjo4SREnb7_5xfAMG3UjGedzH6Pq4&amp;quot;
Res body: [{&amp;quot;rooms&amp;quot;:[&amp;quot;5cdd76edf0ab0124889da4f8&amp;quot;],&amp;quot;isActive&amp;quot;:true,&amp;quot;_id&amp;quot;:&amp;quot;5cdd76edf0ab0124889da4fb&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;12345&amp;quot;,&amp;quot;answerOptions&amp;quot;:[{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76edf0ab0124889da4f9&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;123&amp;quot;},{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76edf0ab0124889da4fa&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;1234&amp;quot;}],&amp;quot;__v&amp;quot;:0}]
GET /api/questions/active 
</output>
                <output type="stdout">200 
</output>
                <output type="stdout">4.409 ms - 230
</output>
            </test>
        </suite>
        <suite duration="154" locationUrl="suite:///api/questions.POST /" name="POST /" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\questions.test.js" status="passed">
            <test duration="2" locationUrl="test:///api/questions.POST /.401 if token not provided" name="401 if token not provided" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\questions.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;rooms&amp;quot;:[&amp;quot;5cdd76edf0ab0124889da505&amp;quot;],&amp;quot;value&amp;quot;:&amp;quot;12345&amp;quot;,&amp;quot;answerOptions&amp;quot;:[&amp;quot;Too hot&amp;quot;,&amp;quot;Too cold&amp;quot;]}
&amp;quot;null&amp;quot;
Res body: Invalid token
POST /api/questions 
</output>
                <output type="stdout">401 
</output>
                <output type="stdout">0.395 ms - 13
</output>
            </test>
            <test duration="2" locationUrl="test:///api/questions.POST /.401 if token not valid" name="401 if token not valid" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\questions.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;rooms&amp;quot;:[&amp;quot;5cdd76edf0ab0124889da508&amp;quot;],&amp;quot;value&amp;quot;:&amp;quot;12345&amp;quot;,&amp;quot;answerOptions&amp;quot;:[&amp;quot;Too hot&amp;quot;,&amp;quot;Too cold&amp;quot;]}
&amp;quot;12345&amp;quot;
Res body: Invalid token
POST /api/questions 
</output>
                <output type="stdout">401 
</output>
                <output type="stdout">0.238 ms - 13
</output>
            </test>
            <test duration="3" locationUrl="test:///api/questions.POST /.404 if user was not found" name="404 if user was not found" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\questions.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;rooms&amp;quot;:[&amp;quot;5cdd76edf0ab0124889da50b&amp;quot;],&amp;quot;value&amp;quot;:&amp;quot;12345&amp;quot;,&amp;quot;answerOptions&amp;quot;:[&amp;quot;Too hot&amp;quot;,&amp;quot;Too cold&amp;quot;]}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlZGYwYWIwMTI0ODg5ZGE1MGMiLCJyb2xlIjowLCJpYXQiOjE1NTgwMTc3NzN9.g34pdyqq6aVoUGTlX4mzHm41XeFPS0Enfa_Ft8ueEro&amp;quot;
Res body: User with id (decoded from token) 5cdd76edf0ab0124889da50c was not found
POST /api/questions 
</output>
                <output type="stdout">404 
</output>
                <output type="stdout">1.152 ms - 72
</output>
            </test>
            <test duration="5" locationUrl="test:///api/questions.POST /.400 if roomId not provided" name="400 if roomId not provided" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\questions.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;rooms&amp;quot;:[null],&amp;quot;value&amp;quot;:&amp;quot;12345&amp;quot;,&amp;quot;answerOptions&amp;quot;:[&amp;quot;Too hot&amp;quot;,&amp;quot;Too cold&amp;quot;]}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlZGYwYWIwMTI0ODg5ZGE1MGQiLCJyb2xlIjoxLCJpYXQiOjE1NTgwMTc3NzN9.7mTcP6Yaok8Guw5YzoLBQkJD8lHp8sdnSemD1ermpyM&amp;quot;
Res body: &amp;quot;0&amp;quot; must be a string
POST /api/questions 
</output>
                <output type="stdout">400 
</output>
                <output type="stdout">2.733 ms - 20
</output>
            </test>
            <test duration="4" locationUrl="test:///api/questions.POST /.400 if roomId not valid" name="400 if roomId not valid" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\questions.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;rooms&amp;quot;:[&amp;quot;12345&amp;quot;],&amp;quot;value&amp;quot;:&amp;quot;12345&amp;quot;,&amp;quot;answerOptions&amp;quot;:[&amp;quot;Too hot&amp;quot;,&amp;quot;Too cold&amp;quot;]}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlZGYwYWIwMTI0ODg5ZGE1MTAiLCJyb2xlIjoxLCJpYXQiOjE1NTgwMTc3NzN9.baza7XfFDCsmOHR5O908vu85yyGW_9YL8yH82z26Tb0&amp;quot;
Res body: &amp;quot;0&amp;quot; with value &amp;quot;12345&amp;quot; fails to match the required pattern: /^[0-9a-fA-F]{24}$/
POST /api/questions 
</output>
                <output type="stdout">400 
</output>
                <output type="stdout">1.790 ms - 79
</output>
            </test>
            <test duration="10" locationUrl="test:///api/questions.POST /.400 if question posted in rooms of different buildings" name="400 if question posted in rooms of different buildings" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\questions.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;rooms&amp;quot;:[&amp;quot;5cdd76edf0ab0124889da515&amp;quot;,&amp;quot;5cdd76edf0ab0124889da517&amp;quot;],&amp;quot;value&amp;quot;:&amp;quot;12345&amp;quot;,&amp;quot;answerOptions&amp;quot;:[&amp;quot;Too hot&amp;quot;,&amp;quot;Too cold&amp;quot;]}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlZGYwYWIwMTI0ODg5ZGE1MTMiLCJyb2xlIjoxLCJpYXQiOjE1NTgwMTc3NzN9.Bk4A9iYlRVq_nWTL4DEFeUStvXsDaKUPjnYe4TlKc2E&amp;quot;
Res body: Questions were posted in rooms of different buildings, which is not allowed
POST /api/questions 
</output>
                <output type="stdout">400 
</output>
                <output type="stdout">5.699 ms - 75
</output>
            </test>
            <test duration="4" locationUrl="test:///api/questions.POST /.404 if roomId not found" name="404 if roomId not found" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\questions.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;rooms&amp;quot;:[&amp;quot;5cdd76edf0ab0124889da51b&amp;quot;],&amp;quot;value&amp;quot;:&amp;quot;12345&amp;quot;,&amp;quot;answerOptions&amp;quot;:[&amp;quot;Too hot&amp;quot;,&amp;quot;Too cold&amp;quot;]}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlZGYwYWIwMTI0ODg5ZGE1MTgiLCJyb2xlIjoxLCJpYXQiOjE1NTgwMTc3NzN9.cniWJdw6i1WHZSfYWpXuiiwiWCgaJaP8LCwaKcIgJQY&amp;quot;
Res body: Room with id 5cdd76edf0ab0124889da51b was not found.
POST /api/questions 
</output>
                <output type="stdout">404 
</output>
                <output type="stdout">3.281 ms - 52
</output>
            </test>
            <test duration="4" locationUrl="test:///api/questions.POST /.400 if value not provided" name="400 if value not provided" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\questions.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;rooms&amp;quot;:[&amp;quot;5cdd76edf0ab0124889da51e&amp;quot;],&amp;quot;value&amp;quot;:null,&amp;quot;answerOptions&amp;quot;:[&amp;quot;Too hot&amp;quot;,&amp;quot;Too cold&amp;quot;]}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlZGYwYWIwMTI0ODg5ZGE1MWMiLCJyb2xlIjoxLCJpYXQiOjE1NTgwMTc3NzN9.-hXpNpneUdXvFPVMgqDBfV9OQWANiMHJYTrM5TLyWfU&amp;quot;
Res body: &amp;quot;value&amp;quot; must be a string
POST /api/questions 
</output>
                <output type="stdout">400 
</output>
                <output type="stdout">1.912 ms - 24
</output>
            </test>
            <test duration="4" locationUrl="test:///api/questions.POST /.Should return 403 if user not authorized role (1)" name="Should return 403 if user not authorized role (1)" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\questions.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;rooms&amp;quot;:[&amp;quot;5cdd76edf0ab0124889da521&amp;quot;],&amp;quot;value&amp;quot;:&amp;quot;12345&amp;quot;,&amp;quot;answerOptions&amp;quot;:[&amp;quot;Too hot&amp;quot;,&amp;quot;Too cold&amp;quot;]}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlZGYwYWIwMTI0ODg5ZGE1MWYiLCJyb2xlIjoxLCJpYXQiOjE1NTgwMTc3NzN9.SslGp0-_9kQLC2qs4KBSlU5SMYMN1NdhhGJ7Z0rh2wI&amp;quot;
Res body: User should be authorized to post questions
POST /api/questions 
</output>
                <output type="stdout">403 
</output>
                <output type="stdout">1.523 ms - 43
</output>
            </test>
            <test duration="5" locationUrl="test:///api/questions.POST /.403 if user not admin on building" name="403 if user not admin on building" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\questions.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;rooms&amp;quot;:[&amp;quot;5cdd76edf0ab0124889da524&amp;quot;],&amp;quot;value&amp;quot;:&amp;quot;12345&amp;quot;,&amp;quot;answerOptions&amp;quot;:[&amp;quot;Too hot&amp;quot;,&amp;quot;Too cold&amp;quot;]}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlZGYwYWIwMTI0ODg5ZGE1MjIiLCJyb2xlIjoxLCJpYXQiOjE1NTgwMTc3NzN9.I11DZDfBr_7MNIQDNDz0IfZvm8c5unKgeqhvHeDOEfQ&amp;quot;
Res body: Admin rights on the building are required to post new questions
POST /api/questions 
</output>
                <output type="stdout">403 
</output>
                <output type="stdout">3.490 ms - 63
</output>
            </test>
            <test duration="4" locationUrl="test:///api/questions.POST /.Should return 400 if two or more answer options were not given" name="Should return 400 if two or more answer options were not given" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\questions.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;rooms&amp;quot;:[&amp;quot;5cdd76edf0ab0124889da527&amp;quot;],&amp;quot;value&amp;quot;:&amp;quot;12345&amp;quot;,&amp;quot;answerOptions&amp;quot;:null}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlZGYwYWIwMTI0ODg5ZGE1MjUiLCJyb2xlIjoxLCJpYXQiOjE1NTgwMTc3NzN9.IxMMxnw2NnJCqDnxFQ2KpyounE7JkbA98ehhQopUN6Q&amp;quot;
Res body: &amp;quot;answerOptions&amp;quot; must be an array
POST /api/questions 
</output>
                <output type="stdout">400 
</output>
                <output type="stdout">1.575 ms - 32
</output>
            </test>
            <test duration="3" locationUrl="test:///api/questions.POST /.Should return 400 if answeroptions did not have minimum 2 elements" name="Should return 400 if answeroptions did not have minimum 2 elements" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\questions.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;rooms&amp;quot;:[&amp;quot;5cdd76edf0ab0124889da52a&amp;quot;],&amp;quot;value&amp;quot;:&amp;quot;12345&amp;quot;,&amp;quot;answerOptions&amp;quot;:[&amp;quot;Too hot&amp;quot;]}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlZGYwYWIwMTI0ODg5ZGE1MjgiLCJyb2xlIjoxLCJpYXQiOjE1NTgwMTc3NzN9.EMZdy1PRulL_7CtAZ2T2nbOj4Ko-iRpyRMVYb4_YWII&amp;quot;
Res body: Minimum 2 answer options should be provided
POST /api/questions 
</output>
                <output type="stdout">400 
</output>
                <output type="stdout">1.417 ms - 43
{ ValidationError: Question validation failed: answerOptions: Question should have at least two answer options
    at ValidationError.inspect (C:\Users\sebs8\WebstormProjects\Climify\node_modules\mongoose\lib\error\validation.js:59:24)
    at formatValue (internal/util/inspect.js:453:31)
    at inspect (internal/util/inspect.js:193:10)
    at Object.formatWithOptions (util.js:85:12)
    at Console.(anonymous function) (console.js:188:15)
    at Console.log (console.js:199:31)
    at module.exports (C:\Users\sebs8\WebstormProjects\Climify\middleware\error.js:13:13)
    at newFn (C:\Users\sebs8\WebstormProjects\Climify\node_modules\express-async-errors\index.js:16:20)
    at Layer.handle_error (C:\Users\sebs8\WebstormProjects\Climify\node_modules\express\lib\router\layer.js:71:5)
    at trim_prefix (C:\Users\sebs8\WebstormProjects\Climify\node_modules\express\lib\router\index.js:315:13)
    at C:\Users\sebs8\WebstormProjects\Climify\node_modules\express\lib\router\index.js:284:7
    at Function.process_params (C:\Users\sebs8\WebstormProjects\Climify\node_modules\express\lib\router\index.js:335:12)
    at next (C:\Users\sebs8\WebstormProjects\Climify\node_modules\express\lib\router\index.js:275:10)
    at C:\Users\sebs8\WebstormProjects\Climify\node_modules\express\lib\router\index.js:635:15
    at next (C:\Users\sebs8\WebstormProjects\Climify\node_modules\express\lib\router\index.js:260:14)
    at next (C:\Users\sebs8\WebstormProjects\Climify\node_modules\express\lib\router\route.js:127:14)
    at ret.catch.err (C:\Users\sebs8\WebstormProjects\Climify\node_modules\express-async-errors\index.js:18:44)
  errors:
   { answerOptions:
      { ValidatorError: Question should have at least two answer options
          at new ValidatorError (C:\Users\sebs8\WebstormProjects\Climify\node_modules\mongoose\lib\error\validator.js:29:11)
          at validate (C:\Users\sebs8\WebstormProjects\Climify\node_modules\mongoose\lib\schematype.js:930:13)
          at C:\Users\sebs8\WebstormProjects\Climify\node_modules\mongoose\lib\schematype.js:983:11
          at Array.forEach (&amp;lt;anonymous&amp;gt;)
          at DocumentArray.SchemaType.doValidate (C:\Users\sebs8\WebstormProjects\Climify\node_modules\mongoose\lib\schematype.js:939:19)
          at DocumentArray.doValidate (C:\Users\sebs8\WebstormProjects\Climify\node_modules\mongoose\lib\schema\documentarray.js:160:37)
          at C:\Users\sebs8\WebstormProjects\Climify\node_modules\mongoose\lib\document.js:1936:9
          at process._tickCallback (internal/process/next_tick.js:61:11)
        message: &amp;#39;Question should have at least two answer options&amp;#39;,
        name: &amp;#39;ValidatorError&amp;#39;,
        properties: [Object],
        kind: &amp;#39;user defined&amp;#39;,
        path: &amp;#39;answerOptions&amp;#39;,
        value: [CoreMongooseArray],
        reason: undefined,
        &amp;#39;$isArrayValidatorError&amp;#39;: true,
        [Symbol(mongoose:validatorError)]: true } },
  _message: &amp;#39;Question validation failed&amp;#39;,
  name: &amp;#39;ValidationError&amp;#39; }
</output>
                <output type="stderr">(node:9352) [DEP0079] DeprecationWarning: Custom inspection function on Objects via .inspect() is deprecated
</output>
            </test>
            <test duration="28" locationUrl="test:///api/questions.POST /.should return question object with proper room id" name="should return question object with proper room id" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\questions.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;rooms&amp;quot;:[&amp;quot;5cdd76eef0ab0124889da530&amp;quot;],&amp;quot;value&amp;quot;:&amp;quot;12345&amp;quot;,&amp;quot;answerOptions&amp;quot;:[&amp;quot;Too hot&amp;quot;,&amp;quot;Too cold&amp;quot;]}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlZWYwYWIwMTI0ODg5ZGE1MmUiLCJyb2xlIjoxLCJpYXQiOjE1NTgwMTc3NzR9.ONNVY1S8F_wvOaSWgSHNPOOGAyiXb6wF-TQHQ9s9vnM&amp;quot;
Res body: {&amp;quot;_id&amp;quot;:&amp;quot;5cdd76eef0ab0124889da531&amp;quot;,&amp;quot;rooms&amp;quot;:[&amp;quot;5cdd76eef0ab0124889da530&amp;quot;],&amp;quot;value&amp;quot;:&amp;quot;12345&amp;quot;,&amp;quot;isActive&amp;quot;:true,&amp;quot;answerOptions&amp;quot;:[{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76eef0ab0124889da532&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;Too hot&amp;quot;,&amp;quot;__v&amp;quot;:0},{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76eef0ab0124889da534&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;Too cold&amp;quot;,&amp;quot;__v&amp;quot;:0}]}
POST /api/questions 
</output>
                <output type="stdout">200 
</output>
                <output type="stdout">24.355 ms - 244
</output>
            </test>
            <test duration="45" locationUrl="test:///api/questions.POST /.should only return 1 length array when posted question for two different rooms" name="should only return 1 length array when posted question for two different rooms" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\questions.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;rooms&amp;quot;:[&amp;quot;5cdd76eef0ab0124889da538&amp;quot;],&amp;quot;value&amp;quot;:&amp;quot;12345&amp;quot;,&amp;quot;answerOptions&amp;quot;:[&amp;quot;hej&amp;quot;,&amp;quot;hej2&amp;quot;]}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlZWYwYWIwMTI0ODg5ZGE1MzYiLCJyb2xlIjoxLCJpYXQiOjE1NTgwMTc3NzR9.azyg9timyAbWCGhdWoiu4Zb_m_9VmKFRnrTsmQ9_j8c&amp;quot;
Res body: {&amp;quot;_id&amp;quot;:&amp;quot;5cdd76eef0ab0124889da53b&amp;quot;,&amp;quot;rooms&amp;quot;:[&amp;quot;5cdd76eef0ab0124889da538&amp;quot;],&amp;quot;value&amp;quot;:&amp;quot;12345&amp;quot;,&amp;quot;isActive&amp;quot;:true,&amp;quot;answerOptions&amp;quot;:[{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76eef0ab0124889da53c&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;hej&amp;quot;,&amp;quot;__v&amp;quot;:0},{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76eef0ab0124889da53e&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;hej2&amp;quot;,&amp;quot;__v&amp;quot;:0}]}
POST /api/questions 
</output>
                <output type="stdout">200 
</output>
                <output type="stdout">12.694 ms - 236
Req body: {&amp;quot;rooms&amp;quot;:[&amp;quot;5cdd76eef0ab0124889da53a&amp;quot;],&amp;quot;value&amp;quot;:&amp;quot;12345&amp;quot;,&amp;quot;answerOptions&amp;quot;:[&amp;quot;hej&amp;quot;,&amp;quot;hej2&amp;quot;]}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlZWYwYWIwMTI0ODg5ZGE1MzYiLCJyb2xlIjoxLCJpYXQiOjE1NTgwMTc3NzR9.azyg9timyAbWCGhdWoiu4Zb_m_9VmKFRnrTsmQ9_j8c&amp;quot;
Res body: {&amp;quot;_id&amp;quot;:&amp;quot;5cdd76eef0ab0124889da540&amp;quot;,&amp;quot;rooms&amp;quot;:[&amp;quot;5cdd76eef0ab0124889da53a&amp;quot;],&amp;quot;value&amp;quot;:&amp;quot;12345&amp;quot;,&amp;quot;isActive&amp;quot;:true,&amp;quot;answerOptions&amp;quot;:[{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76eef0ab0124889da541&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;hej&amp;quot;,&amp;quot;__v&amp;quot;:0},{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76eef0ab0124889da543&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;hej2&amp;quot;,&amp;quot;__v&amp;quot;:0}]}
POST /api/questions 
</output>
                <output type="stdout">200 
</output>
                <output type="stdout">12.482 ms - 236
Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlZWYwYWIwMTI0ODg5ZGE1MzYiLCJyb2xlIjoxLCJpYXQiOjE1NTgwMTc3NzR9.azyg9timyAbWCGhdWoiu4Zb_m_9VmKFRnrTsmQ9_j8c&amp;quot;
Res body: [{&amp;quot;rooms&amp;quot;:[&amp;quot;5cdd76eef0ab0124889da538&amp;quot;],&amp;quot;isActive&amp;quot;:true,&amp;quot;_id&amp;quot;:&amp;quot;5cdd76eef0ab0124889da53b&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;12345&amp;quot;,&amp;quot;answerOptions&amp;quot;:[{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76eef0ab0124889da53c&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;hej&amp;quot;,&amp;quot;__v&amp;quot;:0},{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76eef0ab0124889da53e&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;hej2&amp;quot;,&amp;quot;__v&amp;quot;:0}],&amp;quot;__v&amp;quot;:0}]
GET /api/questions 
</output>
                <output type="stdout">200 
</output>
                <output type="stdout">6.199 ms - 246
</output>
            </test>
            <test duration="8" locationUrl="test:///api/questions.POST /.Should automatically set isActive to false if not set" name="Should automatically set isActive to false if not set" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\questions.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;rooms&amp;quot;:[&amp;quot;5cdd76eef0ab0124889da547&amp;quot;],&amp;quot;value&amp;quot;:&amp;quot;12345&amp;quot;,&amp;quot;answerOptions&amp;quot;:[&amp;quot;Too hot&amp;quot;,&amp;quot;Too cold&amp;quot;]}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlZWYwYWIwMTI0ODg5ZGE1NDUiLCJyb2xlIjoxLCJpYXQiOjE1NTgwMTc3NzR9.3gE5D9-aFiz34w1LM1A1yTkG-NKQVrDlYlasnmxiCmE&amp;quot;
Res body: {&amp;quot;_id&amp;quot;:&amp;quot;5cdd76eef0ab0124889da548&amp;quot;,&amp;quot;rooms&amp;quot;:[&amp;quot;5cdd76eef0ab0124889da547&amp;quot;],&amp;quot;value&amp;quot;:&amp;quot;12345&amp;quot;,&amp;quot;isActive&amp;quot;:true,&amp;quot;answerOptions&amp;quot;:[{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76eef0ab0124889da549&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;Too hot&amp;quot;,&amp;quot;__v&amp;quot;:0},{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76eef0ab0124889da54b&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;Too cold&amp;quot;,&amp;quot;__v&amp;quot;:0}]}
POST /api/questions 
</output>
                <output type="stdout">200 
</output>
                <output type="stdout">6.804 ms - 244
</output>
            </test>
            <test duration="12" locationUrl="test:///api/questions.POST /.Should have answer options when question posted" name="Should have answer options when question posted" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\questions.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;rooms&amp;quot;:[&amp;quot;5cdd76eef0ab0124889da54f&amp;quot;],&amp;quot;value&amp;quot;:&amp;quot;12345&amp;quot;,&amp;quot;answerOptions&amp;quot;:[&amp;quot;Too hot&amp;quot;,&amp;quot;Too cold&amp;quot;]}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlZWYwYWIwMTI0ODg5ZGE1NGQiLCJyb2xlIjoxLCJpYXQiOjE1NTgwMTc3NzR9.oR2u6v3fT88O5yLcZuOZEQCQY0mX75dxtngDdwkHkcU&amp;quot;
Res body: {&amp;quot;_id&amp;quot;:&amp;quot;5cdd76eef0ab0124889da550&amp;quot;,&amp;quot;rooms&amp;quot;:[&amp;quot;5cdd76eef0ab0124889da54f&amp;quot;],&amp;quot;value&amp;quot;:&amp;quot;12345&amp;quot;,&amp;quot;isActive&amp;quot;:true,&amp;quot;answerOptions&amp;quot;:[{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76eef0ab0124889da551&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;Too hot&amp;quot;,&amp;quot;__v&amp;quot;:0},{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76eef0ab0124889da553&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;Too cold&amp;quot;,&amp;quot;__v&amp;quot;:0}]}
POST /api/questions 
</output>
                <output type="stdout">200 
</output>
                <output type="stdout">10.363 ms - 244
</output>
            </test>
            <test duration="11" locationUrl="test:///api/questions.POST /.Should trim answerOptions" name="Should trim answerOptions" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\questions.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;rooms&amp;quot;:[&amp;quot;5cdd76eef0ab0124889da557&amp;quot;],&amp;quot;value&amp;quot;:&amp;quot;12345&amp;quot;,&amp;quot;answerOptions&amp;quot;:[&amp;quot;       hej hej   &amp;quot;,&amp;quot;Too cold&amp;quot;]}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlZWYwYWIwMTI0ODg5ZGE1NTUiLCJyb2xlIjoxLCJpYXQiOjE1NTgwMTc3NzR9.d8eQJiYTQplkk6oDGXh358rtsJkZhb6U0c8YOUOWgtA&amp;quot;
Res body: {&amp;quot;_id&amp;quot;:&amp;quot;5cdd76eef0ab0124889da558&amp;quot;,&amp;quot;rooms&amp;quot;:[&amp;quot;5cdd76eef0ab0124889da557&amp;quot;],&amp;quot;value&amp;quot;:&amp;quot;12345&amp;quot;,&amp;quot;isActive&amp;quot;:true,&amp;quot;answerOptions&amp;quot;:[{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76eef0ab0124889da559&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;hej hej&amp;quot;,&amp;quot;__v&amp;quot;:0},{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76eef0ab0124889da55b&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;Too cold&amp;quot;,&amp;quot;__v&amp;quot;:0}]}
POST /api/questions 
</output>
                <output type="stdout">200 
</output>
                <output type="stdout">8.760 ms - 244
</output>
            </test>
        </suite>
        <suite duration="11" locationUrl="suite:///api/questions.PATCH /:id change isActive of question" name="PATCH /:id change isActive of question" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\questions.test.js" status="passed">
            <test duration="4" locationUrl="test:///api/questions.PATCH /:id change isActive of question.Should return 400 if isActive not provided" name="Should return 400 if isActive not provided" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\questions.test.js" status="passed">
                <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlZWYwYWIwMTI0ODg5ZGE1NWQiLCJyb2xlIjowLCJpYXQiOjE1NTgwMTc3NzR9.iJLMKwJkiWRxWTGkFopeod-gwYgY2-X9tVM2a6thNks&amp;quot;
Res body: isActive should be set in body
PATCH /api/questions/setActive/5cdd76eef0ab0124889da562 
</output>
                <output type="stdout">400 
</output>
                <output type="stdout">1.338 ms - 30
</output>
            </test>
            <test duration="7" locationUrl="test:///api/questions.PATCH /:id change isActive of question.Should change isActive" name="Should change isActive" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\questions.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;isActive&amp;quot;:true}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlZWYwYWIwMTI0ODg5ZGE1NjUiLCJyb2xlIjowLCJpYXQiOjE1NTgwMTc3NzR9.Swbg8k0QYEsc1MSKoJ8SShwlsRP6qBL_NG7J9LJTCrQ&amp;quot;
</output>
                <output type="stderr">(node:9352) DeprecationWarning: collection.findAndModify is deprecated. Use findOneAndUpdate, findOneAndReplace or findOneAndDelete instead.
</output>
                <output type="stdout">Res body: {&amp;quot;rooms&amp;quot;:[&amp;quot;5cdd76eef0ab0124889da567&amp;quot;],&amp;quot;isActive&amp;quot;:true,&amp;quot;_id&amp;quot;:&amp;quot;5cdd76eef0ab0124889da56a&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;12345&amp;quot;,&amp;quot;answerOptions&amp;quot;:[{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76eef0ab0124889da568&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;123&amp;quot;},{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76eef0ab0124889da569&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;1234&amp;quot;}],&amp;quot;__v&amp;quot;:0}
PATCH /api/questions/setActive/5cdd76eef0ab0124889da56a 
</output>
                <output type="stdout">200 
</output>
                <output type="stdout">5.654 ms - 228
</output>
            </test>
        </suite>
        <suite duration="44" locationUrl="suite:///api/questions.DELETE /:id " name="DELETE /:id " metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\questions.test.js" status="passed">
            <test duration="13" locationUrl="test:///api/questions.DELETE /:id .Should only contain one question in db after deleted one" name="Should only contain one question in db after deleted one" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\questions.test.js" status="passed">
                <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlZWYwYWIwMTI0ODg5ZGE1NmQiLCJyb2xlIjowLCJpYXQiOjE1NTgwMTc3NzR9.oecOM5XhGgvqohKua7nbgs6YOb3QAaWgqtmTuJRsQN8&amp;quot;
res null
res 5cdd76eef0ab0124889da570
res null
res 5cdd76eef0ab0124889da571
Res body: {&amp;quot;rooms&amp;quot;:[&amp;quot;5cdd76eef0ab0124889da56f&amp;quot;],&amp;quot;isActive&amp;quot;:false,&amp;quot;_id&amp;quot;:&amp;quot;5cdd76eef0ab0124889da572&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;12345&amp;quot;,&amp;quot;answerOptions&amp;quot;:[{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76eef0ab0124889da570&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;123&amp;quot;},{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76eef0ab0124889da571&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;1234&amp;quot;}],&amp;quot;__v&amp;quot;:0}
DELETE /api/questions/5cdd76eef0ab0124889da572 
</output>
                <output type="stdout">200 
</output>
                <output type="stdout">8.058 ms - 229
</output>
            </test>
            <test duration="10" locationUrl="test:///api/questions.DELETE /:id .Should return 403 if user was not admin on building with question" name="Should return 403 if user was not admin on building with question" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\questions.test.js" status="passed">
                <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlZWYwYWIwMTI0ODg5ZGE1N2EiLCJyb2xlIjowLCJpYXQiOjE1NTgwMTc3NzR9.NpQHSIRXKdpxtsOG1u09uuNxZ6EW5hNONgHzxrlQcV0&amp;quot;
Res body: User needs to be admin on building with question to delete it
DELETE /api/questions/5cdd76eef0ab0124889da586 
</output>
                <output type="stdout">403 
</output>
                <output type="stdout">3.888 ms - 61
</output>
            </test>
            <test duration="13" locationUrl="test:///api/questions.DELETE /:id .Should delete all answers for that question" name="Should delete all answers for that question" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\questions.test.js" status="passed">
                <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlZWYwYWIwMTI0ODg5ZGE1ODkiLCJyb2xlIjowLCJpYXQiOjE1NTgwMTc3NzR9.OGVqE-bpd7Ao9O65ok0lPqctHdRr2vcjpeHJ-h5dXls&amp;quot;
res { _id: 5cdd76eef0ab0124889da592, value: &amp;#39;123&amp;#39;, __v: 0 }
res 5cdd76eef0ab0124889da592
res { _id: 5cdd76eef0ab0124889da595, value: &amp;#39;123&amp;#39;, __v: 0 }
res 5cdd76eef0ab0124889da595
Res body: {&amp;quot;rooms&amp;quot;:[&amp;quot;5cdd76eef0ab0124889da58b&amp;quot;],&amp;quot;isActive&amp;quot;:false,&amp;quot;_id&amp;quot;:&amp;quot;5cdd76eef0ab0124889da591&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;12345&amp;quot;,&amp;quot;answerOptions&amp;quot;:[{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76eef0ab0124889da592&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;123&amp;quot;,&amp;quot;__v&amp;quot;:0},{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76eef0ab0124889da595&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;123&amp;quot;,&amp;quot;__v&amp;quot;:0}],&amp;quot;__v&amp;quot;:0}
DELETE /api/questions/5cdd76eef0ab0124889da591 
</output>
                <output type="stdout">200 
</output>
                <output type="stdout">6.082 ms - 244
</output>
            </test>
            <test duration="8" locationUrl="test:///api/questions.DELETE /:id .Should return id of deleted question" name="Should return id of deleted question" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\questions.test.js" status="passed">
                <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlZWYwYWIwMTI0ODg5ZGE1OTgiLCJyb2xlIjowLCJpYXQiOjE1NTgwMTc3NzR9.1pNG8KLV_b4JEesyWOSDqw0ZpURRFNaCJnGNbBL1MwE&amp;quot;
res null
res 5cdd76eef0ab0124889da59b
res null
res 5cdd76eef0ab0124889da59c
Res body: {&amp;quot;rooms&amp;quot;:[&amp;quot;5cdd76eef0ab0124889da59a&amp;quot;],&amp;quot;isActive&amp;quot;:false,&amp;quot;_id&amp;quot;:&amp;quot;5cdd76eef0ab0124889da59d&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;12345&amp;quot;,&amp;quot;answerOptions&amp;quot;:[{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76eef0ab0124889da59b&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;123&amp;quot;},{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76eef0ab0124889da59c&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;1234&amp;quot;}],&amp;quot;__v&amp;quot;:0}
DELETE /api/questions/5cdd76eef0ab0124889da59d 
</output>
                <output type="stdout">200 
</output>
                <output type="stdout">6.178 ms - 229
</output>
            </test>
        </suite>
    </suite>
    <suite duration="111" locationUrl="suite:///api/rooms" name="/api/rooms" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\rooms.test.js" status="passed">
        <suite duration="30" locationUrl="suite:///api/rooms.POST /" name="POST /" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\rooms.test.js" status="passed">
            <test duration="6" locationUrl="test:///api/rooms.POST /.should return 401 if no token provided" name="should return 401 if no token provided" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\rooms.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;buildingId&amp;quot;:&amp;quot;5cdd76eff0ab0124889da5a1&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;324&amp;quot;}
&amp;quot;null&amp;quot;
Res body: Invalid token
POST /api/rooms 
</output>
                <output type="stdout">401 
</output>
                <output type="stdout">0.846 ms - 13
</output>
            </test>
            <test duration="6" locationUrl="test:///api/rooms.POST /.Should return 403 if user not authorized with login role &gt;= 1" name="Should return 403 if user not authorized with login role &gt;= 1" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\rooms.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;buildingId&amp;quot;:&amp;quot;5cdd76eff0ab0124889da5a3&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;324&amp;quot;}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlZmYwYWIwMTI0ODg5ZGE1YTIiLCJyb2xlIjoxLCJpYXQiOjE1NTgwMTc3NzV9.-3AeFa0SujIEBPfrMQBH7KwtfxRbohHN93_cCpPfCA0&amp;quot;
Res body: User needs to be authorized to access the resource
POST /api/rooms 
</output>
                <output type="stdout">403 
</output>
                <output type="stdout">2.251 ms - 50
</output>
            </test>
            <test duration="9" locationUrl="test:///api/rooms.POST /.should return room with proper building id" name="should return room with proper building id" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\rooms.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;buildingId&amp;quot;:&amp;quot;5cdd76eff0ab0124889da5a5&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;324&amp;quot;}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlZmYwYWIwMTI0ODg5ZGE1YTQiLCJyb2xlIjoxLCJpYXQiOjE1NTgwMTc3NzV9.3tLgQj3vilClahGDgQ4UIsD_wKcPOrT2QR1nmg1BvO4&amp;quot;
Res body: {&amp;quot;_id&amp;quot;:&amp;quot;5cdd76eff0ab0124889da5a6&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;324&amp;quot;,&amp;quot;building&amp;quot;:&amp;quot;5cdd76eff0ab0124889da5a5&amp;quot;,&amp;quot;__v&amp;quot;:0}
POST /api/rooms 
</output>
                <output type="stdout">200 
</output>
                <output type="stdout">6.610 ms - 93
</output>
            </test>
            <test duration="5" locationUrl="test:///api/rooms.POST /.400 if random parameter in body is passed" name="400 if random parameter in body is passed" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\rooms.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;buildingId&amp;quot;:&amp;quot;5cdd76eff0ab0124889da5a8&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;324&amp;quot;}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlZmYwYWIwMTI0ODg5ZGE1YTciLCJyb2xlIjoxLCJpYXQiOjE1NTgwMTc3NzV9.kgCm13CWnBFtoOkrjjT_xEOAzLlCgkrX6Z98T4XchmU&amp;quot;
Res body: {&amp;quot;_id&amp;quot;:&amp;quot;5cdd76eff0ab0124889da5a9&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;324&amp;quot;,&amp;quot;building&amp;quot;:&amp;quot;5cdd76eff0ab0124889da5a8&amp;quot;,&amp;quot;__v&amp;quot;:0}
POST /api/rooms 
</output>
                <output type="stdout">200 
</output>
                <output type="stdout">3.369 ms - 93
</output>
            </test>
            <test duration="4" locationUrl="test:///api/rooms.POST /.should return 400 if name not set" name="should return 400 if name not set" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\rooms.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;buildingId&amp;quot;:&amp;quot;5cdd76eff0ab0124889da5ab&amp;quot;,&amp;quot;name&amp;quot;:null}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlZmYwYWIwMTI0ODg5ZGE1YWEiLCJyb2xlIjoxLCJpYXQiOjE1NTgwMTc3NzV9.S9OFhasPW7tvY8j2HaoSeX9cES7U_WNBVaFD15fMFcM&amp;quot;
Res body: &amp;quot;name&amp;quot; must be a string
POST /api/rooms 
</output>
                <output type="stdout">400 
</output>
                <output type="stdout">2.111 ms - 23
</output>
            </test>
            <test duration="0" locationUrl="test:///api/rooms.POST /.Should return 403 if user not admin on building" name="Should return 403 if user not admin on building" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\rooms.test.js" status="passed"/>
        </suite>
        <suite duration="8" locationUrl="suite:///api/rooms.GET rooms in building /fromBuilding/:id" name="GET rooms in building /fromBuilding/:id" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\rooms.test.js" status="passed">
            <test duration="4" locationUrl="test:///api/rooms.GET rooms in building /fromBuilding/:id.Should only return 1 room" name="Should only return 1 room" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\rooms.test.js" status="passed">
                <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlZmYwYWIwMTI0ODg5ZGE1YWUiLCJyb2xlIjoxLCJpYXQiOjE1NTgwMTc3NzV9.HiJwBSzVGT_klf9_t2yK1nl8yYV1yZPOowfhER2mCyc&amp;quot;
Res body: [{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76eff0ab0124889da5b0&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;222&amp;quot;,&amp;quot;building&amp;quot;:&amp;quot;5cdd76eff0ab0124889da5af&amp;quot;,&amp;quot;__v&amp;quot;:0}]
GET /api/rooms/fromBuilding/5cdd76eff0ab0124889da5af 
</output>
                <output type="stdout">200 
</output>
                <output type="stdout">3.284 ms - 95
</output>
            </test>
            <test duration="4" locationUrl="test:///api/rooms.GET rooms in building /fromBuilding/:id.Should return 403 if user was not admin on building" name="Should return 403 if user was not admin on building" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\rooms.test.js" status="passed">
                <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlZmYwYWIwMTI0ODg5ZGE1YjMiLCJyb2xlIjoxLCJpYXQiOjE1NTgwMTc3NzV9.1k79syvX_J7GoVjYnW7RxL8YopW7kowsyftz6iIsjKw&amp;quot;
Res body: User was not admin on building with id 5cdd76eff0ab0124889da5b4
GET /api/rooms/fromBuilding/5cdd76eff0ab0124889da5b4 
</output>
                <output type="stdout">403 
</output>
                <output type="stdout">1.491 ms - 63
</output>
            </test>
        </suite>
        <suite duration="39" locationUrl="suite:///api/rooms.GET /" name="GET /" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\rooms.test.js" status="passed">
            <test duration="4" locationUrl="test:///api/rooms.GET /.Should return 403 if no query parsed and user wasn't admin" name="Should return 403 if no query parsed and user wasn't admin" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\rooms.test.js" status="passed">
                <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlZmYwYWIwMTI0ODg5ZGE1YjgiLCJyb2xlIjoyLCJpYXQiOjE1NTgwMTc3NzV9.WwzcQ4Ni8IIbPHqFD0GqYumpQwrsHH0jL4xTyZYuxSI&amp;quot;
Res body: User should have role admin to get all rooms
GET /api/rooms/ 
</output>
                <output type="stdout">403 
</output>
                <output type="stdout">1.814 ms - 44
</output>
            </test>
            <test duration="9" locationUrl="test:///api/rooms.GET /.Should only return rooms that user has given feedback on, when query parsed" name="Should only return rooms that user has given feedback on, when query parsed" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\rooms.test.js" status="passed">
                <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlZmYwYWIwMTI0ODg5ZGE1YmIiLCJyb2xlIjoyLCJpYXQiOjE1NTgwMTc3NzV9.dxDltYuryjpBG0blhSyG5TAgg6gfRalYwou6R9HN5ZU&amp;quot;
Res body: [{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76eff0ab0124889da5be&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;222&amp;quot;,&amp;quot;building&amp;quot;:&amp;quot;5cdd76eff0ab0124889da5bc&amp;quot;,&amp;quot;__v&amp;quot;:0}]
GET /api/rooms/?feedback=me 
</output>
                <output type="stdout">200 
</output>
                <output type="stdout">5.363 ms - 95
</output>
            </test>
            <test duration="7" locationUrl="test:///api/rooms.GET /.Should only return rooms, that another user is admin on" name="Should only return rooms, that another user is admin on" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\rooms.test.js" status="passed">
                <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlZmYwYWIwMTI0ODg5ZGE1YzIiLCJyb2xlIjoyLCJpYXQiOjE1NTgwMTc3NzV9.lsVFl7C9DnSvAQluPVi75ATH6siw9o50Ssfjrmywo24&amp;quot;
Res body: [{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76eff0ab0124889da5c6&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;222&amp;quot;,&amp;quot;building&amp;quot;:&amp;quot;5cdd76eff0ab0124889da5c5&amp;quot;,&amp;quot;__v&amp;quot;:0}]
GET /api/rooms/?admin=5cdd76eff0ab0124889da5c7 
</output>
                <output type="stdout">200 
</output>
                <output type="stdout">4.003 ms - 95
</output>
            </test>
            <test duration="5" locationUrl="test:///api/rooms.GET /.Should return 404 if user was not found" name="Should return 404 if user was not found" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\rooms.test.js" status="passed">
                <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlZmYwYWIwMTI0ODg5ZGE1YzgiLCJyb2xlIjoyLCJpYXQiOjE1NTgwMTc3NzV9.Q6SSpw2qap4zFBE_0wcxNsx0LgPakilEDtyW941q6cM&amp;quot;
Res body: User with id 5cdd76eff0ab0124889da5cb was not found
GET /api/rooms/?admin=5cdd76eff0ab0124889da5cb 
</output>
                <output type="stdout">404 
</output>
                <output type="stdout">2.370 ms - 51
</output>
            </test>
            <test duration="3" locationUrl="test:///api/rooms.GET /.Should return 403 if user tried to get rooms another user is admin on but was not admin himself" name="Should return 403 if user tried to get rooms another user is admin on but was not admin himself" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\rooms.test.js" status="passed">
                <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlZmYwYWIwMTI0ODg5ZGE1Y2MiLCJyb2xlIjoyLCJpYXQiOjE1NTgwMTc3NzV9.S1dQ7zv3ZjU3zpDzj6-WrGP0riD0tSnQAWM5VXBp1IQ&amp;quot;
Res body: User should have role admin to get all rooms
GET /api/rooms/?admin=5cdd76eff0ab0124889da5cf 
</output>
                <output type="stdout">403 
</output>
                <output type="stdout">1.274 ms - 44
</output>
            </test>
            <test duration="6" locationUrl="test:///api/rooms.GET /.Should only return rooms where user is admin if query admin=me parsed" name="Should only return rooms where user is admin if query admin=me parsed" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\rooms.test.js" status="passed">
                <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlZmYwYWIwMTI0ODg5ZGE1ZDAiLCJyb2xlIjoyLCJpYXQiOjE1NTgwMTc3NzV9.OaoFhj1FwER_7fdWpSS4kqKy4fk9tJub-BG7TzAWTb0&amp;quot;
rooms:  [ { _id: 5cdd76eff0ab0124889da5d2,
    name: &amp;#39;222&amp;#39;,
    building: 5cdd76eff0ab0124889da5d1,
    __v: 0 } ]
Res body: [{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76eff0ab0124889da5d2&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;222&amp;quot;,&amp;quot;building&amp;quot;:&amp;quot;5cdd76eff0ab0124889da5d1&amp;quot;,&amp;quot;__v&amp;quot;:0}]
GET /api/rooms/?admin=me 
</output>
                <output type="stdout">200 
</output>
                <output type="stdout">2.372 ms - 95
</output>
            </test>
            <test duration="5" locationUrl="test:///api/rooms.GET /.should return array with length 2 of rooms when 2 rooms are posted" name="should return array with length 2 of rooms when 2 rooms are posted" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\rooms.test.js" status="passed">
                <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlZmYwYWIwMTI0ODg5ZGE1ZDUiLCJyb2xlIjoyLCJpYXQiOjE1NTgwMTc3NzV9.erqQgb8SFtpKJ8oqyXuV_Y7THKOFID5ADNEA2dMKvCY&amp;quot;
Res body: [{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76eff0ab0124889da5d7&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;222&amp;quot;,&amp;quot;building&amp;quot;:&amp;quot;5cdd76eff0ab0124889da5d6&amp;quot;,&amp;quot;__v&amp;quot;:0},{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76eff0ab0124889da5d8&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;222&amp;quot;,&amp;quot;building&amp;quot;:&amp;quot;5cdd76eff0ab0124889da5d6&amp;quot;,&amp;quot;__v&amp;quot;:0}]
GET /api/rooms/ 
</output>
                <output type="stdout">200 
</output>
                <output type="stdout">2.272 ms - 189
</output>
            </test>
        </suite>
        <suite duration="34" locationUrl="suite:///api/rooms.DELETE /:id" name="DELETE /:id" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\rooms.test.js" status="passed">
            <test duration="6" locationUrl="test:///api/rooms.DELETE /:id.Should return array of length 0 when room deleted" name="Should return array of length 0 when room deleted" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\rooms.test.js" status="passed">
                <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlZmYwYWIwMTI0ODg5ZGE1ZDkiLCJyb2xlIjoxLCJpYXQiOjE1NTgwMTc3NzV9.JjzhLvrNQ40Y8sd0-C8jhtKYlQj_hUY27UYyejU3dlU&amp;quot;
id 5cdd76eff0ab0124889da5db
Res body: {&amp;quot;_id&amp;quot;:&amp;quot;5cdd76eff0ab0124889da5db&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;324&amp;quot;,&amp;quot;building&amp;quot;:&amp;quot;5cdd76eff0ab0124889da5da&amp;quot;,&amp;quot;__v&amp;quot;:0}
DELETE /api/rooms/5cdd76eff0ab0124889da5db 
</output>
                <output type="stdout">200 
</output>
                <output type="stdout">3.789 ms - 93
</output>
            </test>
            <test duration="6" locationUrl="test:///api/rooms.DELETE /:id.403 if user was not admin on building where room exists" name="403 if user was not admin on building where room exists" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\rooms.test.js" status="passed">
                <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlZmYwYWIwMTI0ODg5ZGE1ZGMiLCJyb2xlIjoxLCJpYXQiOjE1NTgwMTc3NzV9.ncuaR4KwE7gloWePlbxzKeyGx96dWo_fPww0A9csvHA&amp;quot;
id 5cdd76eff0ab0124889da5de
Res body: User needs to be admin on room to delete it
DELETE /api/rooms/5cdd76eff0ab0124889da5de 
</output>
                <output type="stdout">403 
</output>
                <output type="stdout">2.541 ms - 43
</output>
            </test>
            <test duration="10" locationUrl="test:///api/rooms.DELETE /:id.Should delete questions that have only reference to deleted room" name="Should delete questions that have only reference to deleted room" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\rooms.test.js" status="passed">
                <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlZmYwYWIwMTI0ODg5ZGE1ZGYiLCJyb2xlIjoxLCJpYXQiOjE1NTgwMTc3NzV9.zU38Dnt-urcUrpu0rNoiOFHSCRBtRLLyj7MckesUNZM&amp;quot;
id 5cdd76eff0ab0124889da5e1
Res body: {&amp;quot;_id&amp;quot;:&amp;quot;5cdd76eff0ab0124889da5e1&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;324&amp;quot;,&amp;quot;building&amp;quot;:&amp;quot;5cdd76eff0ab0124889da5e0&amp;quot;,&amp;quot;__v&amp;quot;:0}
DELETE /api/rooms/5cdd76eff0ab0124889da5e1 
</output>
                <output type="stdout">200 
</output>
                <output type="stdout">5.055 ms - 93
</output>
            </test>
            <test duration="12" locationUrl="test:///api/rooms.DELETE /:id.Should not delete references to other rooms" name="Should not delete references to other rooms" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\rooms.test.js" status="passed">
                <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZlZmYwYWIwMTI0ODg5ZGE1ZTciLCJyb2xlIjoxLCJpYXQiOjE1NTgwMTc3NzV9.44YhOfNIK9b1Z5ZW495Gk01s7FhPdTaxAelLv1wZvQs&amp;quot;
id 5cdd76eff0ab0124889da5e9
index:  0
Res body: {&amp;quot;_id&amp;quot;:&amp;quot;5cdd76eff0ab0124889da5e9&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;324&amp;quot;,&amp;quot;building&amp;quot;:&amp;quot;5cdd76eff0ab0124889da5e8&amp;quot;,&amp;quot;__v&amp;quot;:0}
DELETE /api/rooms/5cdd76eff0ab0124889da5e9 
</output>
                <output type="stdout">200 
</output>
                <output type="stdout">7.481 ms - 93
</output>
            </test>
        </suite>
    </suite>
    <suite duration="243" locationUrl="suite:///api/signalMaps" name="/api/signalMaps" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\signalMap.test.js" status="passed">
        <suite duration="230" locationUrl="suite:///api/signalMaps.POST /" name="POST /" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\signalMap.test.js" status="passed">
            <test duration="44" locationUrl="test:///api/signalMaps.POST /.Should not throw error" name="Should not throw error" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\signalMap.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;buildingId&amp;quot;:&amp;quot;5cdd76f0f0ab0124889da5f4&amp;quot;,&amp;quot;beacons&amp;quot;:[{&amp;quot;beaconId&amp;quot;:&amp;quot;5cdd76f0f0ab0124889da5f7&amp;quot;,&amp;quot;signals&amp;quot;:[-62]},{&amp;quot;beaconId&amp;quot;:&amp;quot;5cdd76f0f0ab0124889da5f8&amp;quot;,&amp;quot;signals&amp;quot;:[-70]}]}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZmMGYwYWIwMTI0ODg5ZGE1ZjAiLCJyb2xlIjoxLCJpYXQiOjE1NTgwMTc3NzZ9.cruxmSY1AZnbHJtWtFC2V1vob-Txp-3ASjYoZAs-apI&amp;quot;
bids [ 5cdd76f0f0ab0124889da5f7, 5cdd76f0f0ab0124889da5f8 ]
signalmaps:  [ { isActive: true,
    _id: 5cdd76f0f0ab0124889da5f9,
    room: 5cdd76f0f0ab0124889da5f5,
    beacons: [ [Object], [Object] ],
    __v: 0 },
  { isActive: true,
    _id: 5cdd76f0f0ab0124889da5fc,
    room: 5cdd76f0f0ab0124889da5f6,
    beacons: [ [Object], [Object] ],
    __v: 0 } ]
clientb:  [ { beaconId: &amp;#39;5cdd76f0f0ab0124889da5f7&amp;#39;,
    signals: [ -62 ],
    _id: &amp;#39;5cdd76f0f0ab0124889da5f7&amp;#39; },
  { beaconId: &amp;#39;5cdd76f0f0ab0124889da5f8&amp;#39;,
    signals: [ -70 ],
    _id: &amp;#39;5cdd76f0f0ab0124889da5f8&amp;#39; } ]
idds [ 5cdd76f0f0ab0124889da5f7, 5cdd76f0f0ab0124889da5f8 ]
unaligned CoreMongooseArray [
  { signals: [ -73, -69.5, -67 ], _id: 5cdd76f0f0ab0124889da5f7 },
  { signals: [ -64, -70 ], _id: 5cdd76f0f0ab0124889da5f8 } ]
unaligned { signals: [ -73, -69.5, -67 ], _id: 5cdd76f0f0ab0124889da5f7 }
CoreMongooseArray [
  { signals: [ -73, -69.5, -67 ], _id: 5cdd76f0f0ab0124889da5f7 },
  { signals: [ -64, -70 ], _id: 5cdd76f0f0ab0124889da5f8 } ]
unaligned CoreMongooseArray [
  { signals: [ -73, -69.5, -67 ], _id: 5cc6d646032e5567cf4e31ac },
  { signals: [ -64, -70 ], _id: 5cc6d646032e5567cf4e31ab } ]
unaligned { signals: [ -73, -69.5, -67 ], _id: 5cc6d646032e5567cf4e31ac }
CoreMongooseArray [
  { signals: [ -73, -69.5, -67 ], _id: 5cc6d646032e5567cf4e31ac },
  { signals: [ -64, -70 ], _id: 5cc6d646032e5567cf4e31ab } ]
[ { vector: [ -73, -64 ], type: &amp;#39;5cdd76f0f0ab0124889da5f5&amp;#39; },
  { vector: [ -69.5, -70 ], type: &amp;#39;5cdd76f0f0ab0124889da5f5&amp;#39; },
  { vector: [ -67, undefined ], type: &amp;#39;5cdd76f0f0ab0124889da5f5&amp;#39; },
  { vector: [ -100, -100 ], type: &amp;#39;5cdd76f0f0ab0124889da5f6&amp;#39; },
  { vector: [ -100, -100 ], type: &amp;#39;5cdd76f0f0ab0124889da5f6&amp;#39; },
  { vector: [ -100, -100 ], type: &amp;#39;5cdd76f0f0ab0124889da5f6&amp;#39; } ]
unaligned [ { beaconId: &amp;#39;5cdd76f0f0ab0124889da5f7&amp;#39;,
    signals: [ -62 ],
    _id: &amp;#39;5cdd76f0f0ab0124889da5f7&amp;#39; },
  { beaconId: &amp;#39;5cdd76f0f0ab0124889da5f8&amp;#39;,
    signals: [ -70 ],
    _id: &amp;#39;5cdd76f0f0ab0124889da5f8&amp;#39; } ]
unaligned { beaconId: &amp;#39;5cdd76f0f0ab0124889da5f7&amp;#39;,
  signals: [ -62 ],
  _id: &amp;#39;5cdd76f0f0ab0124889da5f7&amp;#39; }
[ { beaconId: &amp;#39;5cdd76f0f0ab0124889da5f7&amp;#39;,
    signals: [ -62 ],
    _id: &amp;#39;5cdd76f0f0ab0124889da5f7&amp;#39; },
  { beaconId: &amp;#39;5cdd76f0f0ab0124889da5f8&amp;#39;,
    signals: [ -70 ],
    _id: &amp;#39;5cdd76f0f0ab0124889da5f8&amp;#39; } ]
{ vector: [ -62, -70 ] }
returned { isActive: false,
  _id: 5cdd76f0f0ab0124889da5ff,
  room:
   { _id: 5cdd76f0f0ab0124889da5f5,
     building: 5cdd76f0f0ab0124889da5f4,
     name: &amp;#39;hej&amp;#39;,
     __v: 0 },
  beacons:
   [ { signals: [Array], _id: 5cdd76f0f0ab0124889da5f7 },
     { signals: [Array], _id: 5cdd76f0f0ab0124889da5f8 } ],
  __v: 0 }
Res body: {&amp;quot;isActive&amp;quot;:false,&amp;quot;_id&amp;quot;:&amp;quot;5cdd76f0f0ab0124889da5ff&amp;quot;,&amp;quot;room&amp;quot;:{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76f0f0ab0124889da5f5&amp;quot;,&amp;quot;building&amp;quot;:&amp;quot;5cdd76f0f0ab0124889da5f4&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;hej&amp;quot;,&amp;quot;__v&amp;quot;:0},&amp;quot;beacons&amp;quot;:[{&amp;quot;signals&amp;quot;:[-62],&amp;quot;_id&amp;quot;:&amp;quot;5cdd76f0f0ab0124889da5f7&amp;quot;},{&amp;quot;signals&amp;quot;:[-70],&amp;quot;_id&amp;quot;:&amp;quot;5cdd76f0f0ab0124889da5f8&amp;quot;}],&amp;quot;__v&amp;quot;:0}
POST /api/signalMaps 
</output>
                <output type="stdout">200 
</output>
                <output type="stdout">19.711 ms - 274
</output>
            </test>
            <test duration="50" locationUrl="test:///api/signalMaps.POST /.Should not throw error either" name="Should not throw error either" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\signalMap.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;beacons&amp;quot;:[{&amp;quot;signals&amp;quot;:[-65.33333],&amp;quot;beaconId&amp;quot;:&amp;quot;5cc813915dd2bd712743c9ba&amp;quot;},{&amp;quot;signals&amp;quot;:[-66],&amp;quot;beaconId&amp;quot;:&amp;quot;5cc81e43c3325e715fb3b72b&amp;quot;},{&amp;quot;signals&amp;quot;:[-64],&amp;quot;beaconId&amp;quot;:&amp;quot;5cc81eb1c3325e715fb3b72c&amp;quot;},{&amp;quot;signals&amp;quot;:[-65.33333],&amp;quot;beaconId&amp;quot;:&amp;quot;5cc820cda98a3571910886b4&amp;quot;}],&amp;quot;buildingId&amp;quot;:&amp;quot;5ca34d31ab35306b2610eb7b&amp;quot;}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZmMGYwYWIwMTI0ODg5ZGE2MDIiLCJyb2xlIjoxLCJpYXQiOjE1NTgwMTc3NzZ9.0s4QtuU-QOVCqoS_i7F4hR-eeITTApqLcb3Fw-hwjZo&amp;quot;
bids [ 5cc813915dd2bd712743c9ba,
  5cc81e43c3325e715fb3b72b,
  5cc81eb1c3325e715fb3b72c,
  5cc820cda98a3571910886b4 ]
signalmaps:  [ { isActive: true,
    _id: 5cc8565c7e14e27313a9ddbb,
    room: 5cc8565c7e14e27313a9ddba,
    beacons: [ [Object], [Object], [Object], [Object] ],
    __v: 0 },
  { isActive: true,
    _id: 5cc856907e14e27313a9ddc1,
    room: 5cc856907e14e27313a9ddc0,
    beacons:
     [ [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object] ],
    __v: 0 },
  { isActive: true,
    _id: 5cc8593fe50be37333359409,
    room: 5cc85939e50be37333359408,
    beacons: [ [Object], [Object], [Object], [Object] ],
    __v: 0 } ]
clientb:  [ { signals: [ -65.33333 ],
    beaconId: &amp;#39;5cc813915dd2bd712743c9ba&amp;#39;,
    _id: &amp;#39;5cc813915dd2bd712743c9ba&amp;#39; },
  { signals: [ -66 ],
    beaconId: &amp;#39;5cc81e43c3325e715fb3b72b&amp;#39;,
    _id: &amp;#39;5cc81e43c3325e715fb3b72b&amp;#39; },
  { signals: [ -64 ],
    beaconId: &amp;#39;5cc81eb1c3325e715fb3b72c&amp;#39;,
    _id: &amp;#39;5cc81eb1c3325e715fb3b72c&amp;#39; },
  { signals: [ -65.33333 ],
    beaconId: &amp;#39;5cc820cda98a3571910886b4&amp;#39;,
    _id: &amp;#39;5cc820cda98a3571910886b4&amp;#39; } ]
idds [ 5cc813915dd2bd712743c9ba,
  5cc81e43c3325e715fb3b72b,
  5cc81eb1c3325e715fb3b72c,
  5cc820cda98a3571910886b4 ]
unaligned CoreMongooseArray [
  { signals: [ -68.33333333333333, -67, -63.6, -69, -69.8, -69.6 ],
    _id: 5cc813915dd2bd712743c9ba },
  { signals: [ -74.33333333333333, -78.8, -76.8, -73.8, -74.2, -74.2 ],
    _id: 5cc81e43c3325e715fb3b72b },
  { signals: [ -70, -69, -75.4, -72, -73, -68.2 ],
    _id: 5cc81eb1c3325e715fb3b72c },
  { signals: [ -75.33333333333333, -75.2, -70.2, -70.2, -69.6, -69.8 ],
    _id: 5cc820cda98a3571910886b4 } ]
unaligned { signals: [ -68.33333333333333, -67, -63.6, -69, -69.8, -69.6 ],
  _id: 5cc813915dd2bd712743c9ba }
CoreMongooseArray [
  { signals: [ -68.33333333333333, -67, -63.6, -69, -69.8, -69.6 ],
    _id: 5cc813915dd2bd712743c9ba },
  { signals: [ -74.33333333333333, -78.8, -76.8, -73.8, -74.2, -74.2 ],
    _id: 5cc81e43c3325e715fb3b72b },
  { signals: [ -70, -69, -75.4, -72, -73, -68.2 ],
    _id: 5cc81eb1c3325e715fb3b72c },
  { signals: [ -75.33333333333333, -75.2, -70.2, -70.2, -69.6, -69.8 ],
    _id: 5cc820cda98a3571910886b4 } ]
unaligned CoreMongooseArray [
  { signals:
     [ -82.4,
       -100,
       -82,
       -100,
       -79.8,
       -100,
       -74,
       -100,
       -75.2,
       -100,
       -72.8,
       -100 ],
    _id: 5cc813915dd2bd712743c9ba },
  { signals:
     [ -65, -100, -67.6, -100, -65.8, -100, -66, -100, -68.2, -100, -64, -100 ],
    _id: 5cc81e43c3325e715fb3b72b },
  { signals:
     [ -66.6,
       -100,
       -66,
       -100,
       -69.4,
       -100,
       -69.6,
       -100,
       -70,
       -100,
       -70.8,
       -100 ],
    _id: 5cc81eb1c3325e715fb3b72c },
  { signals:
     [ -84.2,
       -100,
       -83.2,
       -100,
       -82.4,
       -100,
       -82.4,
       -100,
       -80.4,
       -100,
       -83.2,
       -100 ],
    _id: 5cc820cda98a3571910886b4 },
  { signals:
     [ -82.4,
       -100,
       -82,
       -100,
       -79.8,
       -100,
       -74,
       -100,
       -75.2,
       -100,
       -72.8,
       -100 ],
    _id: 5cc813915dd2bd712743c9ba },
  { signals:
     [ -65, -100, -67.6, -100, -65.8, -100, -66, -100, -68.2, -100, -64, -100 ],
    _id: 5cc81e43c3325e715fb3b72b },
  { signals:
     [ -66.6,
       -100,
       -66,
       -100,
       -69.4,
       -100,
       -69.6,
       -100,
       -70,
       -100,
       -70.8,
       -100 ],
    _id: 5cc81eb1c3325e715fb3b72c },
  { signals:
     [ -84.2,
       -100,
       -83.2,
       -100,
       -82.4,
       -100,
       -82.4,
       -100,
       -80.4,
       -100,
       -83.2,
       -100 ],
    _id: 5cc820cda98a3571910886b4 } ]
unaligned { signals:
   [ -82.4,
     -100,
     -82,
     -100,
     -79.8,
     -100,
     -74,
     -100,
     -75.2,
     -100,
     -72.8,
     -100 ],
  _id: 5cc813915dd2bd712743c9ba }
CoreMongooseArray [
  { signals:
     [ -82.4,
       -100,
       -82,
       -100,
       -79.8,
       -100,
       -74,
       -100,
       -75.2,
       -100,
       -72.8,
       -100 ],
    _id: 5cc813915dd2bd712743c9ba },
  { signals:
     [ -65, -100, -67.6, -100, -65.8, -100, -66, -100, -68.2, -100, -64, -100 ],
    _id: 5cc81e43c3325e715fb3b72b },
  { signals:
     [ -66.6,
       -100,
       -66,
       -100,
       -69.4,
       -100,
       -69.6,
       -100,
       -70,
       -100,
       -70.8,
       -100 ],
    _id: 5cc81eb1c3325e715fb3b72c },
  { signals:
     [ -84.2,
       -100,
       -83.2,
       -100,
       -82.4,
       -100,
       -82.4,
       -100,
       -80.4,
       -100,
       -83.2,
       -100 ],
    _id: 5cc820cda98a3571910886b4 },
  { signals:
     [ -82.4,
       -100,
       -82,
       -100,
       -79.8,
       -100,
       -74,
       -100,
       -75.2,
       -100,
       -72.8,
       -100 ],
    _id: 5cc813915dd2bd712743c9ba },
  { signals:
     [ -65, -100, -67.6, -100, -65.8, -100, -66, -100, -68.2, -100, -64, -100 ],
    _id: 5cc81e43c3325e715fb3b72b },
  { signals:
     [ -66.6,
       -100,
       -66,
       -100,
       -69.4,
       -100,
       -69.6,
       -100,
       -70,
       -100,
       -70.8,
       -100 ],
    _id: 5cc81eb1c3325e715fb3b72c },
  { signals:
     [ -84.2,
       -100,
       -83.2,
       -100,
       -82.4,
       -100,
       -82.4,
       -100,
       -80.4,
       -100,
       -83.2,
       -100 ],
    _id: 5cc820cda98a3571910886b4 } ]
unaligned CoreMongooseArray [
  { signals: [ -44.666666666666664, -48.8, -46.6 ],
    _id: 5cc813915dd2bd712743c9ba },
  { signals: [ -51.333333333333336, -48.8, -49 ],
    _id: 5cc81e43c3325e715fb3b72b },
  { signals: [ -42.333333333333336, -39.2, -40.8 ],
    _id: 5cc81eb1c3325e715fb3b72c },
  { signals: [ -47.333333333333336, -54, -49.8 ],
    _id: 5cc820cda98a3571910886b4 } ]
unaligned { signals: [ -44.666666666666664, -48.8, -46.6 ],
  _id: 5cc813915dd2bd712743c9ba }
CoreMongooseArray [
  { signals: [ -44.666666666666664, -48.8, -46.6 ],
    _id: 5cc813915dd2bd712743c9ba },
  { signals: [ -51.333333333333336, -48.8, -49 ],
    _id: 5cc81e43c3325e715fb3b72b },
  { signals: [ -42.333333333333336, -39.2, -40.8 ],
    _id: 5cc81eb1c3325e715fb3b72c },
  { signals: [ -47.333333333333336, -54, -49.8 ],
    _id: 5cc820cda98a3571910886b4 } ]
[ { vector:
     [ -68.33333333333333,
       -74.33333333333333,
       -70,
       -75.33333333333333 ],
    type: &amp;#39;5cc8565c7e14e27313a9ddba&amp;#39; },
  { vector: [ -67, -78.8, -69, -75.2 ],
    type: &amp;#39;5cc8565c7e14e27313a9ddba&amp;#39; },
  { vector: [ -63.6, -76.8, -75.4, -70.2 ],
    type: &amp;#39;5cc8565c7e14e27313a9ddba&amp;#39; },
  { vector: [ -69, -73.8, -72, -70.2 ],
    type: &amp;#39;5cc8565c7e14e27313a9ddba&amp;#39; },
  { vector: [ -69.8, -74.2, -73, -69.6 ],
    type: &amp;#39;5cc8565c7e14e27313a9ddba&amp;#39; },
  { vector: [ -69.6, -74.2, -68.2, -69.8 ],
    type: &amp;#39;5cc8565c7e14e27313a9ddba&amp;#39; },
  { vector: [ -82.4, -65, -66.6, -84.2 ],
    type: &amp;#39;5cc856907e14e27313a9ddc0&amp;#39; },
  { vector: [ -100, -100, -100, -100 ],
    type: &amp;#39;5cc856907e14e27313a9ddc0&amp;#39; },
  { vector: [ -82, -67.6, -66, -83.2 ],
    type: &amp;#39;5cc856907e14e27313a9ddc0&amp;#39; },
  { vector: [ -100, -100, -100, -100 ],
    type: &amp;#39;5cc856907e14e27313a9ddc0&amp;#39; },
  { vector: [ -79.8, -65.8, -69.4, -82.4 ],
    type: &amp;#39;5cc856907e14e27313a9ddc0&amp;#39; },
  { vector: [ -100, -100, -100, -100 ],
    type: &amp;#39;5cc856907e14e27313a9ddc0&amp;#39; },
  { vector: [ -74, -66, -69.6, -82.4 ],
    type: &amp;#39;5cc856907e14e27313a9ddc0&amp;#39; },
  { vector: [ -100, -100, -100, -100 ],
    type: &amp;#39;5cc856907e14e27313a9ddc0&amp;#39; },
  { vector: [ -75.2, -68.2, -70, -80.4 ],
    type: &amp;#39;5cc856907e14e27313a9ddc0&amp;#39; },
  { vector: [ -100, -100, -100, -100 ],
    type: &amp;#39;5cc856907e14e27313a9ddc0&amp;#39; },
  { vector: [ -72.8, -64, -70.8, -83.2 ],
    type: &amp;#39;5cc856907e14e27313a9ddc0&amp;#39; },
  { vector: [ -100, -100, -100, -100 ],
    type: &amp;#39;5cc856907e14e27313a9ddc0&amp;#39; },
  { vector:
     [ -44.666666666666664,
       -51.333333333333336,
       -42.333333333333336,
       -47.333333333333336 ],
    type: &amp;#39;5cc85939e50be37333359408&amp;#39; },
  { vector: [ -48.8, -48.8, -39.2, -54 ],
    type: &amp;#39;5cc85939e50be37333359408&amp;#39; },
  { vector: [ -46.6, -49, -40.8, -49.8 ],
    type: &amp;#39;5cc85939e50be37333359408&amp;#39; } ]
unaligned [ { signals: [ -65.33333 ],
    beaconId: &amp;#39;5cc813915dd2bd712743c9ba&amp;#39;,
    _id: &amp;#39;5cc813915dd2bd712743c9ba&amp;#39; },
  { signals: [ -66 ],
    beaconId: &amp;#39;5cc81e43c3325e715fb3b72b&amp;#39;,
    _id: &amp;#39;5cc81e43c3325e715fb3b72b&amp;#39; },
  { signals: [ -64 ],
    beaconId: &amp;#39;5cc81eb1c3325e715fb3b72c&amp;#39;,
    _id: &amp;#39;5cc81eb1c3325e715fb3b72c&amp;#39; },
  { signals: [ -65.33333 ],
    beaconId: &amp;#39;5cc820cda98a3571910886b4&amp;#39;,
    _id: &amp;#39;5cc820cda98a3571910886b4&amp;#39; } ]
unaligned { signals: [ -65.33333 ],
  beaconId: &amp;#39;5cc813915dd2bd712743c9ba&amp;#39;,
  _id: &amp;#39;5cc813915dd2bd712743c9ba&amp;#39; }
[ { signals: [ -65.33333 ],
    beaconId: &amp;#39;5cc813915dd2bd712743c9ba&amp;#39;,
    _id: &amp;#39;5cc813915dd2bd712743c9ba&amp;#39; },
  { signals: [ -66 ],
    beaconId: &amp;#39;5cc81e43c3325e715fb3b72b&amp;#39;,
    _id: &amp;#39;5cc81e43c3325e715fb3b72b&amp;#39; },
  { signals: [ -64 ],
    beaconId: &amp;#39;5cc81eb1c3325e715fb3b72c&amp;#39;,
    _id: &amp;#39;5cc81eb1c3325e715fb3b72c&amp;#39; },
  { signals: [ -65.33333 ],
    beaconId: &amp;#39;5cc820cda98a3571910886b4&amp;#39;,
    _id: &amp;#39;5cc820cda98a3571910886b4&amp;#39; } ]
{ vector: [ -65.33333, -66, -64, -65.33333 ] }
returned { isActive: false,
  _id: 5cdd76f0f0ab0124889da627,
  room:
   { _id: 5cc8565c7e14e27313a9ddba,
     name: &amp;#39;222&amp;#39;,
     building: 5ca34d31ab35306b2610eb7b,
     __v: 0 },
  beacons:
   [ { signals: [Array], _id: 5cc813915dd2bd712743c9ba },
     { signals: [Array], _id: 5cc81e43c3325e715fb3b72b },
     { signals: [Array], _id: 5cc81eb1c3325e715fb3b72c },
     { signals: [Array], _id: 5cc820cda98a3571910886b4 } ],
  __v: 0 }
Res body: {&amp;quot;isActive&amp;quot;:false,&amp;quot;_id&amp;quot;:&amp;quot;5cdd76f0f0ab0124889da627&amp;quot;,&amp;quot;room&amp;quot;:{&amp;quot;_id&amp;quot;:&amp;quot;5cc8565c7e14e27313a9ddba&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;222&amp;quot;,&amp;quot;building&amp;quot;:&amp;quot;5ca34d31ab35306b2610eb7b&amp;quot;,&amp;quot;__v&amp;quot;:0},&amp;quot;beacons&amp;quot;:[{&amp;quot;signals&amp;quot;:[-65.33333],&amp;quot;_id&amp;quot;:&amp;quot;5cc813915dd2bd712743c9ba&amp;quot;},{&amp;quot;signals&amp;quot;:[-66],&amp;quot;_id&amp;quot;:&amp;quot;5cc81e43c3325e715fb3b72b&amp;quot;},{&amp;quot;signals&amp;quot;:[-64],&amp;quot;_id&amp;quot;:&amp;quot;5cc81eb1c3325e715fb3b72c&amp;quot;},{&amp;quot;signals&amp;quot;:[-65.33333],&amp;quot;_id&amp;quot;:&amp;quot;5cc820cda98a3571910886b4&amp;quot;}],&amp;quot;__v&amp;quot;:0}
POST /api/signalMaps 
</output>
                <output type="stdout">200 
</output>
                <output type="stdout">25.454 ms - 388
{&amp;quot;req&amp;quot;:{&amp;quot;method&amp;quot;:&amp;quot;POST&amp;quot;,&amp;quot;url&amp;quot;:&amp;quot;http://127.0.0.1:8080/api/signalMaps&amp;quot;,&amp;quot;data&amp;quot;:{&amp;quot;beacons&amp;quot;:[{&amp;quot;signals&amp;quot;:[-65.33333],&amp;quot;beaconId&amp;quot;:&amp;quot;5cc813915dd2bd712743c9ba&amp;quot;},{&amp;quot;signals&amp;quot;:[-66],&amp;quot;beaconId&amp;quot;:&amp;quot;5cc81e43c3325e715fb3b72b&amp;quot;},{&amp;quot;signals&amp;quot;:[-64],&amp;quot;beaconId&amp;quot;:&amp;quot;5cc81eb1c3325e715fb3b72c&amp;quot;},{&amp;quot;signals&amp;quot;:[-65.33333],&amp;quot;beaconId&amp;quot;:&amp;quot;5cc820cda98a3571910886b4&amp;quot;}],&amp;quot;buildingId&amp;quot;:&amp;quot;5ca34d31ab35306b2610eb7b&amp;quot;},&amp;quot;headers&amp;quot;:{&amp;quot;user-agent&amp;quot;:&amp;quot;node-superagent/4.1.0&amp;quot;,&amp;quot;x-auth-token&amp;quot;:&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZmMGYwYWIwMTI0ODg5ZGE2MDIiLCJyb2xlIjoxLCJpYXQiOjE1NTgwMTc3NzZ9.0s4QtuU-QOVCqoS_i7F4hR-eeITTApqLcb3Fw-hwjZo&amp;quot;,&amp;quot;content-type&amp;quot;:&amp;quot;application/json&amp;quot;}},&amp;quot;header&amp;quot;:{&amp;quot;x-powered-by&amp;quot;:&amp;quot;Express&amp;quot;,&amp;quot;access-control-allow-origin&amp;quot;:&amp;quot;*&amp;quot;,&amp;quot;access-control-allow-headers&amp;quot;:&amp;quot;Origin, X-Requested-With, Content-Type, Accept, x-auth-token, roomId&amp;quot;,&amp;quot;access-control-expose-headers&amp;quot;:&amp;quot;x-auth-token, roomId&amp;quot;,&amp;quot;access-control-allow-methods&amp;quot;:&amp;quot;PUT, POST, GET, DELETE, PATCH, OPTIONS&amp;quot;,&amp;quot;content-type&amp;quot;:&amp;quot;application/json; charset=utf-8&amp;quot;,&amp;quot;content-length&amp;quot;:&amp;quot;388&amp;quot;,&amp;quot;etag&amp;quot;:&amp;quot;W/\&amp;quot;184-UBk4PCFRwFri9aedB9+iLcVWnpU\&amp;quot;&amp;quot;,&amp;quot;date&amp;quot;:&amp;quot;Thu, 16 May 2019 14:42:56 GMT&amp;quot;,&amp;quot;connection&amp;quot;:&amp;quot;close&amp;quot;},&amp;quot;status&amp;quot;:200,&amp;quot;text&amp;quot;:&amp;quot;{\&amp;quot;isActive\&amp;quot;:false,\&amp;quot;_id\&amp;quot;:\&amp;quot;5cdd76f0f0ab0124889da627\&amp;quot;,\&amp;quot;room\&amp;quot;:{\&amp;quot;_id\&amp;quot;:\&amp;quot;5cc8565c7e14e27313a9ddba\&amp;quot;,\&amp;quot;name\&amp;quot;:\&amp;quot;222\&amp;quot;,\&amp;quot;building\&amp;quot;:\&amp;quot;5ca34d31ab35306b2610eb7b\&amp;quot;,\&amp;quot;__v\&amp;quot;:0},\&amp;quot;beacons\&amp;quot;:[{\&amp;quot;signals\&amp;quot;:[-65.33333],\&amp;quot;_id\&amp;quot;:\&amp;quot;5cc813915dd2bd712743c9ba\&amp;quot;},{\&amp;quot;signals\&amp;quot;:[-66],\&amp;quot;_id\&amp;quot;:\&amp;quot;5cc81e43c3325e715fb3b72b\&amp;quot;},{\&amp;quot;signals\&amp;quot;:[-64],\&amp;quot;_id\&amp;quot;:\&amp;quot;5cc81eb1c3325e715fb3b72c\&amp;quot;},{\&amp;quot;signals\&amp;quot;:[-65.33333],\&amp;quot;_id\&amp;quot;:\&amp;quot;5cc820cda98a3571910886b4\&amp;quot;}],\&amp;quot;__v\&amp;quot;:0}&amp;quot;}
</output>
            </test>
            <test duration="5" locationUrl="test:///api/signalMaps.POST /.Should return 400 if neither roomId or buildingId provided" name="Should return 400 if neither roomId or buildingId provided" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\signalMap.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;beacons&amp;quot;:[{&amp;quot;beaconId&amp;quot;:&amp;quot;5cdd76f0f0ab0124889da62e&amp;quot;,&amp;quot;signals&amp;quot;:[-40]}]}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZmMGYwYWIwMTI0ODg5ZGE2MmMiLCJyb2xlIjoxLCJpYXQiOjE1NTgwMTc3NzZ9.y1pSVIIQ5FiS0oTB4T4a4rXAwOadKnGbNKK8AcreIzI&amp;quot;
Res body: Please provide either roomId or buildingId
POST /api/signalMaps 
</output>
                <output type="stdout">400 
</output>
                <output type="stdout">3.129 ms - 42
Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client
    at ServerResponse.setHeader (_http_outgoing.js:470:11)
    at ServerResponse.header (C:\Users\sebs8\WebstormProjects\Climify\node_modules\express\lib\response.js:767:10)
    at ServerResponse.send (C:\Users\sebs8\WebstormProjects\Climify\node_modules\express\lib\response.js:170:12)
    at createSignalMap (C:\Users\sebs8\WebstormProjects\Climify\controllers\signalMapController.js:25:60)
</output>
            </test>
            <test duration="8" locationUrl="test:///api/signalMaps.POST /.Should return new signalmap with one length array of beacons" name="Should return new signalmap with one length array of beacons" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\signalMap.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;roomId&amp;quot;:&amp;quot;5cdd76f0f0ab0124889da633&amp;quot;,&amp;quot;beacons&amp;quot;:[{&amp;quot;beaconId&amp;quot;:&amp;quot;5cdd76f0f0ab0124889da632&amp;quot;,&amp;quot;signals&amp;quot;:[-40]}],&amp;quot;buildingId&amp;quot;:&amp;quot;5cdd76f0f0ab0124889da631&amp;quot;}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZmMGYwYWIwMTI0ODg5ZGE2MzAiLCJyb2xlIjoxLCJpYXQiOjE1NTgwMTc3NzZ9.UyWOV6whNxWxx4-PIbtlREovkEaLzjHklvv7RH49w6I&amp;quot;
returned { isActive: true,
  _id: 5cdd76f1f0ab0124889da634,
  room:
   { _id: 5cdd76f0f0ab0124889da633,
     name: &amp;#39;222&amp;#39;,
     building: 5cdd76f0f0ab0124889da631,
     __v: 0 },
  beacons: [ { signals: [Array], _id: 5cdd76f0f0ab0124889da632 } ],
  __v: 0 }
Res body: {&amp;quot;isActive&amp;quot;:true,&amp;quot;_id&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da634&amp;quot;,&amp;quot;room&amp;quot;:{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76f0f0ab0124889da633&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;222&amp;quot;,&amp;quot;building&amp;quot;:&amp;quot;5cdd76f0f0ab0124889da631&amp;quot;,&amp;quot;__v&amp;quot;:0},&amp;quot;beacons&amp;quot;:[{&amp;quot;signals&amp;quot;:[-40],&amp;quot;_id&amp;quot;:&amp;quot;5cdd76f0f0ab0124889da632&amp;quot;}],&amp;quot;__v&amp;quot;:0}
POST /api/signalMaps 
</output>
                <output type="stdout">200 
</output>
                <output type="stdout">6.495 ms - 222
</output>
            </test>
            <test duration="7" locationUrl="test:///api/signalMaps.POST /.Should have reference to room" name="Should have reference to room" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\signalMap.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;roomId&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da639&amp;quot;,&amp;quot;beacons&amp;quot;:[{&amp;quot;beaconId&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da638&amp;quot;,&amp;quot;signals&amp;quot;:[-40]}],&amp;quot;buildingId&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da637&amp;quot;}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZmMWYwYWIwMTI0ODg5ZGE2MzYiLCJyb2xlIjoxLCJpYXQiOjE1NTgwMTc3Nzd9.SlWq82HCZKJqHheeo5cR2V4nwtCk4aOVsCb4LJG0JJU&amp;quot;
returned { isActive: true,
  _id: 5cdd76f1f0ab0124889da63a,
  room:
   { _id: 5cdd76f1f0ab0124889da639,
     name: &amp;#39;222&amp;#39;,
     building: 5cdd76f1f0ab0124889da637,
     __v: 0 },
  beacons: [ { signals: [Array], _id: 5cdd76f1f0ab0124889da638 } ],
  __v: 0 }
Res body: {&amp;quot;isActive&amp;quot;:true,&amp;quot;_id&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da63a&amp;quot;,&amp;quot;room&amp;quot;:{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da639&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;222&amp;quot;,&amp;quot;building&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da637&amp;quot;,&amp;quot;__v&amp;quot;:0},&amp;quot;beacons&amp;quot;:[{&amp;quot;signals&amp;quot;:[-40],&amp;quot;_id&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da638&amp;quot;}],&amp;quot;__v&amp;quot;:0}
POST /api/signalMaps 
</output>
                <output type="stdout">200 
</output>
                <output type="stdout">5.433 ms - 222
</output>
            </test>
            <test duration="4" locationUrl="test:///api/signalMaps.POST /.Should return 400 if one of the beacons doesn't exist in the system" name="Should return 400 if one of the beacons doesn't exist in the system" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\signalMap.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;roomId&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da63f&amp;quot;,&amp;quot;beacons&amp;quot;:[{&amp;quot;beaconId&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da640&amp;quot;,&amp;quot;signals&amp;quot;:[-40]}],&amp;quot;buildingId&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da63d&amp;quot;}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZmMWYwYWIwMTI0ODg5ZGE2M2MiLCJyb2xlIjoxLCJpYXQiOjE1NTgwMTc3Nzd9.TkUmYnnDkhMJU_2pEPhigFtb1KYsFKYEMyey_L9QkRU&amp;quot;
Res body: Beacon with id 5cdd76f1f0ab0124889da640 did not exist in database
POST /api/signalMaps 
</output>
                <output type="stdout">400 
</output>
                <output type="stdout">2.279 ms - 65
</output>
            </test>
            <test duration="3" locationUrl="test:///api/signalMaps.POST /.Should return 400 if one of the rssi arrays did not have the same length as the other's" name="Should return 400 if one of the rssi arrays did not have the same length as the other's" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\signalMap.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;roomId&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da644&amp;quot;,&amp;quot;beacons&amp;quot;:[{&amp;quot;beaconId&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da643&amp;quot;,&amp;quot;signals&amp;quot;:[-40]},{&amp;quot;beaconId&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da646&amp;quot;,&amp;quot;signals&amp;quot;:[10,23,60]}],&amp;quot;buildingId&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da642&amp;quot;}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZmMWYwYWIwMTI0ODg5ZGE2NDEiLCJyb2xlIjoxLCJpYXQiOjE1NTgwMTc3Nzd9.1GRK_J-FW5oGb2UsyLic7ClcgF6vIC69vS_jBYTS3n4&amp;quot;
Res body: &amp;quot;0&amp;quot; must be less than or equal to 0
POST /api/signalMaps 
</output>
                <output type="stdout">400 
</output>
                <output type="stdout">1.848 ms - 35
</output>
            </test>
            <test duration="14" locationUrl="test:///api/signalMaps.POST /.Should set isActive to false by default if room not provided" name="Should set isActive to false by default if room not provided" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\signalMap.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;beacons&amp;quot;:[{&amp;quot;beaconId&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da649&amp;quot;,&amp;quot;signals&amp;quot;:[-40]}],&amp;quot;buildingId&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da648&amp;quot;}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZmMWYwYWIwMTI0ODg5ZGE2NDciLCJyb2xlIjoxLCJpYXQiOjE1NTgwMTc3Nzd9.xI9c4OflHUyBzltyBWrtJ49bUdMpZ00KpSgvESC76e0&amp;quot;
bids [ 5cdd76f1f0ab0124889da649 ]
signalmaps:  [ { isActive: true,
    _id: 5cdd76f1f0ab0124889da64b,
    beacons: [ [Object] ],
    room: 5cdd76f1f0ab0124889da64a,
    __v: 0 } ]
clientb:  [ { beaconId: &amp;#39;5cdd76f1f0ab0124889da649&amp;#39;,
    signals: [ -40 ],
    _id: &amp;#39;5cdd76f1f0ab0124889da649&amp;#39; } ]
idds [ 5cdd76f1f0ab0124889da649 ]
unaligned CoreMongooseArray [ { signals: [ 39, 41 ], _id: 5cdd76f1f0ab0124889da649 } ]
unaligned { signals: [ 39, 41 ], _id: 5cdd76f1f0ab0124889da649 }
CoreMongooseArray [ { signals: [ 39, 41 ], _id: 5cdd76f1f0ab0124889da649 } ]
[ { vector: [ 39 ], type: &amp;#39;5cdd76f1f0ab0124889da64a&amp;#39; },
  { vector: [ 41 ], type: &amp;#39;5cdd76f1f0ab0124889da64a&amp;#39; } ]
unaligned [ { beaconId: &amp;#39;5cdd76f1f0ab0124889da649&amp;#39;,
    signals: [ -40 ],
    _id: &amp;#39;5cdd76f1f0ab0124889da649&amp;#39; } ]
unaligned { beaconId: &amp;#39;5cdd76f1f0ab0124889da649&amp;#39;,
  signals: [ -40 ],
  _id: &amp;#39;5cdd76f1f0ab0124889da649&amp;#39; }
[ { beaconId: &amp;#39;5cdd76f1f0ab0124889da649&amp;#39;,
    signals: [ -40 ],
    _id: &amp;#39;5cdd76f1f0ab0124889da649&amp;#39; } ]
{ vector: [ -40 ] }
returned { isActive: false,
  _id: 5cdd76f1f0ab0124889da64d,
  room:
   { _id: 5cdd76f1f0ab0124889da64a,
     name: &amp;#39;222&amp;#39;,
     building: 5cdd76f1f0ab0124889da648,
     __v: 0 },
  beacons: [ { signals: [Array], _id: 5cdd76f1f0ab0124889da649 } ],
  __v: 0 }
Res body: {&amp;quot;isActive&amp;quot;:false,&amp;quot;_id&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da64d&amp;quot;,&amp;quot;room&amp;quot;:{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da64a&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;222&amp;quot;,&amp;quot;building&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da648&amp;quot;,&amp;quot;__v&amp;quot;:0},&amp;quot;beacons&amp;quot;:[{&amp;quot;signals&amp;quot;:[-40],&amp;quot;_id&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da649&amp;quot;}],&amp;quot;__v&amp;quot;:0}
POST /api/signalMaps 
</output>
                <output type="stdout">200 
</output>
                <output type="stdout">9.620 ms - 223
</output>
            </test>
            <test duration="8" locationUrl="test:///api/signalMaps.POST /.Should set isActive to true if roomId provided" name="Should set isActive to true if roomId provided" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\signalMap.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;roomId&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da652&amp;quot;,&amp;quot;beacons&amp;quot;:[{&amp;quot;beaconId&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da651&amp;quot;,&amp;quot;signals&amp;quot;:[-40]}],&amp;quot;buildingId&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da650&amp;quot;}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZmMWYwYWIwMTI0ODg5ZGE2NGYiLCJyb2xlIjoxLCJpYXQiOjE1NTgwMTc3Nzd9.k7IDEkOUfi8TFVG7iNtZqz0RXiSDXARkC-4D4f3Hx0k&amp;quot;
returned { isActive: true,
  _id: 5cdd76f1f0ab0124889da653,
  room:
   { _id: 5cdd76f1f0ab0124889da652,
     name: &amp;#39;222&amp;#39;,
     building: 5cdd76f1f0ab0124889da650,
     __v: 0 },
  beacons: [ { signals: [Array], _id: 5cdd76f1f0ab0124889da651 } ],
  __v: 0 }
Res body: {&amp;quot;isActive&amp;quot;:true,&amp;quot;_id&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da653&amp;quot;,&amp;quot;room&amp;quot;:{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da652&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;222&amp;quot;,&amp;quot;building&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da650&amp;quot;,&amp;quot;__v&amp;quot;:0},&amp;quot;beacons&amp;quot;:[{&amp;quot;signals&amp;quot;:[-40],&amp;quot;_id&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da651&amp;quot;}],&amp;quot;__v&amp;quot;:0}
POST /api/signalMaps 
</output>
                <output type="stdout">200 
</output>
                <output type="stdout">6.568 ms - 222
</output>
            </test>
            <test duration="18" locationUrl="test:///api/signalMaps.POST /.Should estimate room if roomId not provided" name="Should estimate room if roomId not provided" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\signalMap.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;beacons&amp;quot;:[{&amp;quot;beaconId&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da657&amp;quot;,&amp;quot;signals&amp;quot;:[-40]}],&amp;quot;buildingId&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da656&amp;quot;}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZmMWYwYWIwMTI0ODg5ZGE2NTUiLCJyb2xlIjoxLCJpYXQiOjE1NTgwMTc3Nzd9.N2kNnesPhPuNfXotSt_OZJDn3-6STpILbQvVZtINO0Y&amp;quot;
bids [ 5cdd76f1f0ab0124889da657 ]
signalmaps:  [ { isActive: true,
    _id: 5cdd76f1f0ab0124889da659,
    beacons: [ [Object] ],
    room: 5cdd76f1f0ab0124889da658,
    __v: 0 } ]
clientb:  [ { beaconId: &amp;#39;5cdd76f1f0ab0124889da657&amp;#39;,
    signals: [ -40 ],
    _id: &amp;#39;5cdd76f1f0ab0124889da657&amp;#39; } ]
idds [ 5cdd76f1f0ab0124889da657 ]
unaligned CoreMongooseArray [ { signals: [ 39, 41 ], _id: 5cdd76f1f0ab0124889da657 } ]
unaligned { signals: [ 39, 41 ], _id: 5cdd76f1f0ab0124889da657 }
CoreMongooseArray [ { signals: [ 39, 41 ], _id: 5cdd76f1f0ab0124889da657 } ]
[ { vector: [ 39 ], type: &amp;#39;5cdd76f1f0ab0124889da658&amp;#39; },
  { vector: [ 41 ], type: &amp;#39;5cdd76f1f0ab0124889da658&amp;#39; } ]
unaligned [ { beaconId: &amp;#39;5cdd76f1f0ab0124889da657&amp;#39;,
    signals: [ -40 ],
    _id: &amp;#39;5cdd76f1f0ab0124889da657&amp;#39; } ]
unaligned { beaconId: &amp;#39;5cdd76f1f0ab0124889da657&amp;#39;,
  signals: [ -40 ],
  _id: &amp;#39;5cdd76f1f0ab0124889da657&amp;#39; }
[ { beaconId: &amp;#39;5cdd76f1f0ab0124889da657&amp;#39;,
    signals: [ -40 ],
    _id: &amp;#39;5cdd76f1f0ab0124889da657&amp;#39; } ]
{ vector: [ -40 ] }
returned { isActive: false,
  _id: 5cdd76f1f0ab0124889da65b,
  room:
   { _id: 5cdd76f1f0ab0124889da658,
     name: &amp;#39;222&amp;#39;,
     building: 5cdd76f1f0ab0124889da656,
     __v: 0 },
  beacons: [ { signals: [Array], _id: 5cdd76f1f0ab0124889da657 } ],
  __v: 0 }
Res body: {&amp;quot;isActive&amp;quot;:false,&amp;quot;_id&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da65b&amp;quot;,&amp;quot;room&amp;quot;:{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da658&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;222&amp;quot;,&amp;quot;building&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da656&amp;quot;,&amp;quot;__v&amp;quot;:0},&amp;quot;beacons&amp;quot;:[{&amp;quot;signals&amp;quot;:[-40],&amp;quot;_id&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da657&amp;quot;}],&amp;quot;__v&amp;quot;:0}
POST /api/signalMaps 
</output>
                <output type="stdout">200 
</output>
                <output type="stdout">14.867 ms - 223
</output>
            </test>
            <test duration="21" locationUrl="test:///api/signalMaps.POST /.Should estimate correct room when nearest neighbor is a tie" name="Should estimate correct room when nearest neighbor is a tie" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\signalMap.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;beacons&amp;quot;:[{&amp;quot;beaconId&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da65f&amp;quot;,&amp;quot;signals&amp;quot;:[-40]},{&amp;quot;beaconId&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da661&amp;quot;,&amp;quot;signals&amp;quot;:[-60]}],&amp;quot;buildingId&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da65e&amp;quot;}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZmMWYwYWIwMTI0ODg5ZGE2NWQiLCJyb2xlIjoxLCJpYXQiOjE1NTgwMTc3Nzd9.CtE3rq8wUvBfKBwp8EgtgTJiRnyjKeWZNwHsO3wns-I&amp;quot;
bids [ 5cdd76f1f0ab0124889da65f, 5cdd76f1f0ab0124889da661 ]
signalmaps:  [ { isActive: true,
    _id: 5cdd76f1f0ab0124889da663,
    beacons: [ [Object], [Object] ],
    room: 5cdd76f1f0ab0124889da660,
    __v: 0 },
  { isActive: true,
    _id: 5cdd76f1f0ab0124889da666,
    beacons: [ [Object], [Object] ],
    room: 5cdd76f1f0ab0124889da662,
    __v: 0 } ]
clientb:  [ { beaconId: &amp;#39;5cdd76f1f0ab0124889da65f&amp;#39;,
    signals: [ -40 ],
    _id: &amp;#39;5cdd76f1f0ab0124889da65f&amp;#39; },
  { beaconId: &amp;#39;5cdd76f1f0ab0124889da661&amp;#39;,
    signals: [ -60 ],
    _id: &amp;#39;5cdd76f1f0ab0124889da661&amp;#39; } ]
idds [ 5cdd76f1f0ab0124889da65f, 5cdd76f1f0ab0124889da661 ]
unaligned CoreMongooseArray [
  { signals: [ -39, -41 ], _id: 5cdd76f1f0ab0124889da65f },
  { signals: [ -59, -61 ], _id: 5cdd76f1f0ab0124889da661 } ]
unaligned { signals: [ -39, -41 ], _id: 5cdd76f1f0ab0124889da65f }
CoreMongooseArray [
  { signals: [ -39, -41 ], _id: 5cdd76f1f0ab0124889da65f },
  { signals: [ -59, -61 ], _id: 5cdd76f1f0ab0124889da661 } ]
unaligned CoreMongooseArray [
  { signals: [ -59, -61 ], _id: 5cdd76f1f0ab0124889da65f },
  { signals: [ -39, -41 ], _id: 5cdd76f1f0ab0124889da661 } ]
unaligned { signals: [ -59, -61 ], _id: 5cdd76f1f0ab0124889da65f }
CoreMongooseArray [
  { signals: [ -59, -61 ], _id: 5cdd76f1f0ab0124889da65f },
  { signals: [ -39, -41 ], _id: 5cdd76f1f0ab0124889da661 } ]
[ { vector: [ -39, -59 ], type: &amp;#39;5cdd76f1f0ab0124889da660&amp;#39; },
  { vector: [ -41, -61 ], type: &amp;#39;5cdd76f1f0ab0124889da660&amp;#39; },
  { vector: [ -59, -39 ], type: &amp;#39;5cdd76f1f0ab0124889da662&amp;#39; },
  { vector: [ -61, -41 ], type: &amp;#39;5cdd76f1f0ab0124889da662&amp;#39; } ]
unaligned [ { beaconId: &amp;#39;5cdd76f1f0ab0124889da65f&amp;#39;,
    signals: [ -40 ],
    _id: &amp;#39;5cdd76f1f0ab0124889da65f&amp;#39; },
  { beaconId: &amp;#39;5cdd76f1f0ab0124889da661&amp;#39;,
    signals: [ -60 ],
    _id: &amp;#39;5cdd76f1f0ab0124889da661&amp;#39; } ]
unaligned { beaconId: &amp;#39;5cdd76f1f0ab0124889da65f&amp;#39;,
  signals: [ -40 ],
  _id: &amp;#39;5cdd76f1f0ab0124889da65f&amp;#39; }
[ { beaconId: &amp;#39;5cdd76f1f0ab0124889da65f&amp;#39;,
    signals: [ -40 ],
    _id: &amp;#39;5cdd76f1f0ab0124889da65f&amp;#39; },
  { beaconId: &amp;#39;5cdd76f1f0ab0124889da661&amp;#39;,
    signals: [ -60 ],
    _id: &amp;#39;5cdd76f1f0ab0124889da661&amp;#39; } ]
{ vector: [ -40, -60 ] }
returned { isActive: false,
  _id: 5cdd76f1f0ab0124889da669,
  room:
   { _id: 5cdd76f1f0ab0124889da660,
     name: &amp;#39;222&amp;#39;,
     building: 5cdd76f1f0ab0124889da65e,
     __v: 0 },
  beacons:
   [ { signals: [Array], _id: 5cdd76f1f0ab0124889da65f },
     { signals: [Array], _id: 5cdd76f1f0ab0124889da661 } ],
  __v: 0 }
Res body: {&amp;quot;isActive&amp;quot;:false,&amp;quot;_id&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da669&amp;quot;,&amp;quot;room&amp;quot;:{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da660&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;222&amp;quot;,&amp;quot;building&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da65e&amp;quot;,&amp;quot;__v&amp;quot;:0},&amp;quot;beacons&amp;quot;:[{&amp;quot;signals&amp;quot;:[-40],&amp;quot;_id&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da65f&amp;quot;},{&amp;quot;signals&amp;quot;:[-60],&amp;quot;_id&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da661&amp;quot;}],&amp;quot;__v&amp;quot;:0}
POST /api/signalMaps 
</output>
                <output type="stdout">200 
</output>
                <output type="stdout">13.644 ms - 274
</output>
            </test>
            <test duration="27" locationUrl="test:///api/signalMaps.POST /.Should not throw error if beacon was in client beacons array but not in servermap" name="Should not throw error if beacon was in client beacons array but not in servermap" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\signalMap.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;beacons&amp;quot;:[{&amp;quot;beaconId&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da66e&amp;quot;,&amp;quot;signals&amp;quot;:[-40]},{&amp;quot;beaconId&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da670&amp;quot;,&amp;quot;signals&amp;quot;:[-60]},{&amp;quot;beaconId&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da678&amp;quot;,&amp;quot;signals&amp;quot;:[-20]}],&amp;quot;buildingId&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da66d&amp;quot;}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZmMWYwYWIwMTI0ODg5ZGE2NmMiLCJyb2xlIjoxLCJpYXQiOjE1NTgwMTc3Nzd9.P6a0IplAYsr-JjInIEUF_d0iZo2RLREkondq079bS4M&amp;quot;
bids [ 5cdd76f1f0ab0124889da66e,
  5cdd76f1f0ab0124889da670,
  5cdd76f1f0ab0124889da678 ]
signalmaps:  [ { isActive: true,
    _id: 5cdd76f1f0ab0124889da672,
    beacons: [ [Object], [Object] ],
    room: 5cdd76f1f0ab0124889da66f,
    __v: 0 },
  { isActive: true,
    _id: 5cdd76f1f0ab0124889da675,
    beacons: [ [Object], [Object] ],
    room: 5cdd76f1f0ab0124889da671,
    __v: 0 } ]
clientb:  [ { beaconId: &amp;#39;5cdd76f1f0ab0124889da66e&amp;#39;,
    signals: [ -40 ],
    _id: &amp;#39;5cdd76f1f0ab0124889da66e&amp;#39; },
  { beaconId: &amp;#39;5cdd76f1f0ab0124889da670&amp;#39;,
    signals: [ -60 ],
    _id: &amp;#39;5cdd76f1f0ab0124889da670&amp;#39; },
  { beaconId: &amp;#39;5cdd76f1f0ab0124889da678&amp;#39;,
    signals: [ -20 ],
    _id: &amp;#39;5cdd76f1f0ab0124889da678&amp;#39; } ]
idds [ 5cdd76f1f0ab0124889da66e,
  5cdd76f1f0ab0124889da670,
  5cdd76f1f0ab0124889da678 ]
unaligned CoreMongooseArray [
  { signals: [ -39, -41 ], _id: 5cdd76f1f0ab0124889da66e },
  { signals: [ -59, -61 ], _id: 5cdd76f1f0ab0124889da670 } ]
unaligned { signals: [ -39, -41 ], _id: 5cdd76f1f0ab0124889da66e }
CoreMongooseArray [
  { signals: [ -39, -41 ], _id: 5cdd76f1f0ab0124889da66e },
  { signals: [ -59, -61 ], _id: 5cdd76f1f0ab0124889da670 } ]
unaligned CoreMongooseArray [
  { signals: [ -59, -61 ], _id: 5cdd76f1f0ab0124889da66e },
  { signals: [ -39, -41 ], _id: 5cdd76f1f0ab0124889da670 } ]
unaligned { signals: [ -59, -61 ], _id: 5cdd76f1f0ab0124889da66e }
CoreMongooseArray [
  { signals: [ -59, -61 ], _id: 5cdd76f1f0ab0124889da66e },
  { signals: [ -39, -41 ], _id: 5cdd76f1f0ab0124889da670 } ]
[ { vector: [ -39, -59, -100 ], type: &amp;#39;5cdd76f1f0ab0124889da66f&amp;#39; },
  { vector: [ -41, -61, -100 ], type: &amp;#39;5cdd76f1f0ab0124889da66f&amp;#39; },
  { vector: [ -59, -39, -100 ], type: &amp;#39;5cdd76f1f0ab0124889da671&amp;#39; },
  { vector: [ -61, -41, -100 ], type: &amp;#39;5cdd76f1f0ab0124889da671&amp;#39; } ]
unaligned [ { beaconId: &amp;#39;5cdd76f1f0ab0124889da66e&amp;#39;,
    signals: [ -40 ],
    _id: &amp;#39;5cdd76f1f0ab0124889da66e&amp;#39; },
  { beaconId: &amp;#39;5cdd76f1f0ab0124889da670&amp;#39;,
    signals: [ -60 ],
    _id: &amp;#39;5cdd76f1f0ab0124889da670&amp;#39; },
  { beaconId: &amp;#39;5cdd76f1f0ab0124889da678&amp;#39;,
    signals: [ -20 ],
    _id: &amp;#39;5cdd76f1f0ab0124889da678&amp;#39; } ]
unaligned { beaconId: &amp;#39;5cdd76f1f0ab0124889da66e&amp;#39;,
  signals: [ -40 ],
  _id: &amp;#39;5cdd76f1f0ab0124889da66e&amp;#39; }
[ { beaconId: &amp;#39;5cdd76f1f0ab0124889da66e&amp;#39;,
    signals: [ -40 ],
    _id: &amp;#39;5cdd76f1f0ab0124889da66e&amp;#39; },
  { beaconId: &amp;#39;5cdd76f1f0ab0124889da670&amp;#39;,
    signals: [ -60 ],
    _id: &amp;#39;5cdd76f1f0ab0124889da670&amp;#39; },
  { beaconId: &amp;#39;5cdd76f1f0ab0124889da678&amp;#39;,
    signals: [ -20 ],
    _id: &amp;#39;5cdd76f1f0ab0124889da678&amp;#39; } ]
{ vector: [ -40, -60, -20 ] }
returned { isActive: false,
  _id: 5cdd76f1f0ab0124889da679,
  room:
   { _id: 5cdd76f1f0ab0124889da66f,
     name: &amp;#39;222&amp;#39;,
     building: 5cdd76f1f0ab0124889da66d,
     __v: 0 },
  beacons:
   [ { signals: [Array], _id: 5cdd76f1f0ab0124889da66e },
     { signals: [Array], _id: 5cdd76f1f0ab0124889da670 },
     { signals: [Array], _id: 5cdd76f1f0ab0124889da678 } ],
  __v: 0 }
Res body: {&amp;quot;isActive&amp;quot;:false,&amp;quot;_id&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da679&amp;quot;,&amp;quot;room&amp;quot;:{&amp;quot;_id&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da66f&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;222&amp;quot;,&amp;quot;building&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da66d&amp;quot;,&amp;quot;__v&amp;quot;:0},&amp;quot;beacons&amp;quot;:[{&amp;quot;signals&amp;quot;:[-40],&amp;quot;_id&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da66e&amp;quot;},{&amp;quot;signals&amp;quot;:[-60],&amp;quot;_id&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da670&amp;quot;},{&amp;quot;signals&amp;quot;:[-20],&amp;quot;_id&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da678&amp;quot;}],&amp;quot;__v&amp;quot;:0}
POST /api/signalMaps 
</output>
                <output type="stdout">200 
</output>
                <output type="stdout">16.609 ms - 325
</output>
            </test>
            <test duration="6" locationUrl="test:///api/signalMaps.POST /.Should return 400 if no signalmap was posted an a room estimation was requested" name="Should return 400 if no signalmap was posted an a room estimation was requested" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\signalMap.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;beacons&amp;quot;:[{&amp;quot;beaconId&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da67f&amp;quot;,&amp;quot;signals&amp;quot;:[-40]}],&amp;quot;buildingId&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da67e&amp;quot;}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZmMWYwYWIwMTI0ODg5ZGE2N2QiLCJyb2xlIjoxLCJpYXQiOjE1NTgwMTc3Nzd9.wMppAsBkkYMTg-faBEeYv0oHUMycopEmGMDkRqiyAnE&amp;quot;
Res body: Unable to estimate room when no active signalMaps was found in database
POST /api/signalMaps 
</output>
                <output type="stdout">400 
</output>
                <output type="stdout">4.035 ms - 71
</output>
            </test>
            <test duration="5" locationUrl="test:///api/signalMaps.POST /.Should return 403 if roomId provided and user was not authorized" name="Should return 403 if roomId provided and user was not authorized" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\signalMap.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;roomId&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da684&amp;quot;,&amp;quot;beacons&amp;quot;:[{&amp;quot;beaconId&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da683&amp;quot;,&amp;quot;signals&amp;quot;:[-40]}]}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZmMWYwYWIwMTI0ODg5ZGE2ODEiLCJyb2xlIjowLCJpYXQiOjE1NTgwMTc3Nzd9.3Mo_YmDENYuo4-RpnmfGTLvWxdJtgClZMLNIn-ZKwlE&amp;quot;
Res body: User should be authorized to post active signalmaps
POST /api/signalMaps 
</output>
                <output type="stdout">403 
</output>
                <output type="stdout">2.413 ms - 51
</output>
            </test>
            <test duration="4" locationUrl="test:///api/signalMaps.POST /.Should return 400 if room was not found" name="Should return 400 if room was not found" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\signalMap.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;roomId&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da689&amp;quot;,&amp;quot;beacons&amp;quot;:[{&amp;quot;beaconId&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da687&amp;quot;,&amp;quot;signals&amp;quot;:[-40]}]}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZmMWYwYWIwMTI0ODg5ZGE2ODUiLCJyb2xlIjoxLCJpYXQiOjE1NTgwMTc3Nzd9.rm0M7J_wrxNfykovQ6u0Ji8Y2yD-OioNxKe33VWpxJ4&amp;quot;
Res body: Room with id 5cdd76f1f0ab0124889da689 was not found
POST /api/signalMaps 
</output>
                <output type="stdout">400 
</output>
                <output type="stdout">2.824 ms - 51
</output>
            </test>
            <test duration="6" locationUrl="test:///api/signalMaps.POST /.Should return 403 if user was not admin on building where signalmap is posted" name="Should return 403 if user was not admin on building where signalmap is posted" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\signalMap.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;roomId&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da68d&amp;quot;,&amp;quot;beacons&amp;quot;:[{&amp;quot;beaconId&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da68c&amp;quot;,&amp;quot;signals&amp;quot;:[-40]}]}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZmMWYwYWIwMTI0ODg5ZGE2OGEiLCJyb2xlIjoxLCJpYXQiOjE1NTgwMTc3Nzd9.watzXAtfrGW-6OG_suoPdFPxihS08R8T7SkY18q3O3w&amp;quot;
Res body: User was not admin on building containing room 5cdd76f1f0ab0124889da68d
POST /api/signalMaps 
</output>
                <output type="stdout">403 
</output>
                <output type="stdout">3.612 ms - 71
</output>
            </test>
        </suite>
        <suite duration="9" locationUrl="suite:///api/signalMaps.PATCH /confirm-room/:id Confirm room" name="PATCH /confirm-room/:id Confirm room" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\signalMap.test.js" status="passed">
            <test duration="5" locationUrl="test:///api/signalMaps.PATCH /confirm-room/:id Confirm room.Should return updated signal map with isValid = true" name="Should return updated signal map with isValid = true" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\signalMap.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;roomId&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da691&amp;quot;,&amp;quot;beacons&amp;quot;:[{&amp;quot;beaconId&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da68c&amp;quot;,&amp;quot;signals&amp;quot;:[-40]}],&amp;quot;buildingId&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da690&amp;quot;}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZmMWYwYWIwMTI0ODg5ZGE2OGUiLCJyb2xlIjoxLCJpYXQiOjE1NTgwMTc3Nzd9.yVvnLl3mBsRc1_z_OYYiuJSBgutcS0N5J-H8o8usDI0&amp;quot;
Res body: {&amp;quot;isActive&amp;quot;:true,&amp;quot;_id&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da692&amp;quot;,&amp;quot;room&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da691&amp;quot;,&amp;quot;beacons&amp;quot;:[{&amp;quot;signals&amp;quot;:[39,41],&amp;quot;_id&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da68f&amp;quot;}],&amp;quot;__v&amp;quot;:0}
PATCH /api/signalMaps/confirm-room/5cdd76f1f0ab0124889da692 
</output>
                <output type="stdout">200 
</output>
                <output type="stdout">3.170 ms - 157
</output>
            </test>
            <test duration="4" locationUrl="test:///api/signalMaps.PATCH /confirm-room/:id Confirm room.Should return 404 if signal map did not exist" name="Should return 404 if signal map did not exist" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\signalMap.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;roomId&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da697&amp;quot;,&amp;quot;beacons&amp;quot;:[{&amp;quot;beaconId&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da68c&amp;quot;,&amp;quot;signals&amp;quot;:[-40]}],&amp;quot;buildingId&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da696&amp;quot;}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZmMWYwYWIwMTI0ODg5ZGE2OTQiLCJyb2xlIjoxLCJpYXQiOjE1NTgwMTc3Nzd9.Qsb-MfQIBCiypUbMlzigRDOw9n0wbAB7XyOe5af6Yd0&amp;quot;
Res body: signalMap with id 5cdd76f1f0ab0124889da69a was not found in database
PATCH /api/signalMaps/confirm-room/5cdd76f1f0ab0124889da69a 
</output>
                <output type="stdout">404 
</output>
                <output type="stdout">1.966 ms - 68
</output>
            </test>
        </suite>
        <suite duration="4" locationUrl="suite:///api/signalMaps. GET / " name=" GET / " metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\signalMap.test.js" status="passed">
            <test duration="4" locationUrl="test:///api/signalMaps. GET / .Should return array with correct beaconIds " name="Should return array with correct beaconIds " metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\signalMap.test.js" status="passed">
                <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZmMWYwYWIwMTI0ODg5ZGE2OWIiLCJyb2xlIjoxLCJpYXQiOjE1NTgwMTc3Nzd9.8ZZ94cx-_bUC2AUV9S4P9MwXS9STE94kdzwqmhEGr74&amp;quot;
Res body: [{&amp;quot;isActive&amp;quot;:false,&amp;quot;_id&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da69f&amp;quot;,&amp;quot;room&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da69e&amp;quot;,&amp;quot;beacons&amp;quot;:[{&amp;quot;signals&amp;quot;:[39,41],&amp;quot;_id&amp;quot;:&amp;quot;5cdd76f1f0ab0124889da69c&amp;quot;}],&amp;quot;__v&amp;quot;:0}]
GET /api/signalMaps 
</output>
                <output type="stdout">200 
</output>
                <output type="stdout">2.348 ms - 160
</output>
            </test>
        </suite>
    </suite>
    <suite duration="278" locationUrl="suite:///api/users" name="/api/users" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\users.test.js" status="passed">
        <suite duration="26" locationUrl="suite:///api/users.GET /" name="GET /" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\users.test.js" status="passed">
            <test duration="16" locationUrl="test:///api/users.GET /.Should not return password" name="Should not return password" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\users.test.js" status="passed">
                <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZmMmYwYWIwMTI0ODg5ZGE2YTIiLCJyb2xlIjoyLCJpYXQiOjE1NTgwMTc3Nzh9.G-aWIjPF1GBQLLnxUvjbpYvu8CDUhcIyyJzg1sCWIf0&amp;quot;
Res body: [{&amp;quot;role&amp;quot;:0,&amp;quot;_id&amp;quot;:&amp;quot;5cdd76f2f0ab0124889da6a1&amp;quot;},{&amp;quot;role&amp;quot;:2,&amp;quot;_id&amp;quot;:&amp;quot;5cdd76f2f0ab0124889da6a2&amp;quot;,&amp;quot;email&amp;quot;:&amp;quot;hej&amp;quot;}]
GET /api/users 
</output>
                <output type="stdout">200 
</output>
                <output type="stdout">11.201 ms - 103
</output>
            </test>
            <test duration="7" locationUrl="test:///api/users.GET /.Should return 403 if user was not admin" name="Should return 403 if user was not admin" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\users.test.js" status="passed">
                <output type="stdout">Req body: {}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZmMmYwYWIwMTI0ODg5ZGE2YTQiLCJyb2xlIjoyLCJpYXQiOjE1NTgwMTc3Nzh9.6nQj8GKUALeaIgELUmqI_GMXIbJLPx07ztpyehwyzg4&amp;quot;
Res body: Admin rights are required
GET /api/users 
</output>
                <output type="stdout">403 
</output>
                <output type="stdout">2.197 ms - 25
</output>
            </test>
            <test duration="3" locationUrl="test:///api/users.GET /.Should return 401 if token not provided" name="Should return 401 if token not provided" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\users.test.js" status="passed">
                <output type="stdout">Req body: {}
&amp;quot;null&amp;quot;
Res body: Invalid token
GET /api/users 
</output>
                <output type="stdout">401 
</output>
                <output type="stdout">0.396 ms - 13
</output>
            </test>
        </suite>
        <suite duration="242" locationUrl="suite:///api/users.POST /" name="POST /" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\users.test.js" status="passed">
            <suite duration="13" locationUrl="suite:///api/users.POST /.Unauthorized user" name="Unauthorized user" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\users.test.js" status="passed">
                <test duration="3" locationUrl="test:///api/users.POST /.Unauthorized user.400 if  random parameter in body is passed" name="400 if  random parameter in body is passed" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\users.test.js" status="passed">
                    <output type="stdout">Req body: {&amp;quot;hej&amp;quot;:&amp;quot;12345&amp;quot;}
Res body: &amp;quot;hej&amp;quot; is not allowed
POST /api/users 
</output>
                    <output type="stdout">400 
</output>
                    <output type="stdout">0.597 ms - 20
</output>
                </test>
                <test duration="4" locationUrl="test:///api/users.POST /.Unauthorized user.Should have user role 0 when no email+password provided" name="Should have user role 0 when no email+password provided" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\users.test.js" status="passed">
                    <output type="stdout">Req body: {}
Res body: {&amp;quot;_id&amp;quot;:&amp;quot;5cdd76f2f0ab0124889da6a9&amp;quot;}
POST /api/users 
</output>
                    <output type="stdout">200 
</output>
                    <output type="stdout">1.431 ms - 34
</output>
                </test>
                <test duration="6" locationUrl="test:///api/users.POST /.Unauthorized user.Should be a valid mongoose id decoded by returned json web token" name="Should be a valid mongoose id decoded by returned json web token" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\users.test.js" status="passed">
                    <output type="stdout">Req body: {}
Res body: {&amp;quot;_id&amp;quot;:&amp;quot;5cdd76f2f0ab0124889da6ab&amp;quot;}
POST /api/users 
</output>
                    <output type="stdout">200 
</output>
                    <output type="stdout">1.510 ms - 34
</output>
                </test>
            </suite>
            <suite duration="229" locationUrl="suite:///api/users.POST /.Authorized user" name="Authorized user" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\users.test.js" status="passed">
                <test duration="75" locationUrl="test:///api/users.POST /.Authorized user.Should create user with authorized role if valid email and password provided" name="Should create user with authorized role if valid email and password provided" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\users.test.js" status="passed">
                    <output type="stdout">Req body: {&amp;quot;email&amp;quot;:&amp;quot;user1@gmail.com&amp;quot;,&amp;quot;password&amp;quot;:&amp;quot;qweQWE123&amp;quot;}
Res body: {&amp;quot;_id&amp;quot;:&amp;quot;5cdd76f2f0ab0124889da6ad&amp;quot;,&amp;quot;email&amp;quot;:&amp;quot;user1@gmail.com&amp;quot;}
POST /api/users 
</output>
                    <output type="stdout">200 
</output>
                    <output type="stdout">72.294 ms - 60
</output>
                </test>
                <test duration="2" locationUrl="test:///api/users.POST /.Authorized user.should return 400 if email invalid" name="should return 400 if email invalid" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\users.test.js" status="passed">
                    <output type="stdout">Req body: {&amp;quot;email&amp;quot;:&amp;quot;user@&amp;quot;,&amp;quot;password&amp;quot;:&amp;quot;qweQWE123&amp;quot;}
Res body: Invalid email
POST /api/users 
</output>
                    <output type="stdout">400 
</output>
                    <output type="stdout">0.495 ms - 13
</output>
                </test>
                <test duration="77" locationUrl="test:///api/users.POST /.Authorized user.Should not allow two users to be created with the same email" name="Should not allow two users to be created with the same email" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\users.test.js" status="passed">
                    <output type="stdout">Req body: {&amp;quot;email&amp;quot;:&amp;quot;user1@gmail.com&amp;quot;,&amp;quot;password&amp;quot;:&amp;quot;qweQWE123&amp;quot;}
Res body: {&amp;quot;_id&amp;quot;:&amp;quot;5cdd76f2f0ab0124889da6b0&amp;quot;,&amp;quot;email&amp;quot;:&amp;quot;user1@gmail.com&amp;quot;}
POST /api/users 
</output>
                    <output type="stdout">200 
</output>
                    <output type="stdout">71.572 ms - 60
Req body: {&amp;quot;email&amp;quot;:&amp;quot;user1@gmail.com&amp;quot;,&amp;quot;password&amp;quot;:&amp;quot;qweQWE123&amp;quot;}
Res body: User already registered
POST /api/users 
</output>
                    <output type="stdout">400 
</output>
                    <output type="stdout">2.835 ms - 23
</output>
                </test>
                <test duration="75" locationUrl="test:///api/users.POST /.Authorized user.Should return json web token in header that can be decoded to valid mongoose _id" name="Should return json web token in header that can be decoded to valid mongoose _id" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\users.test.js" status="passed">
                    <output type="stdout">Req body: {&amp;quot;email&amp;quot;:&amp;quot;user1@gmail.com&amp;quot;,&amp;quot;password&amp;quot;:&amp;quot;qweQWE123&amp;quot;}
Res body: {&amp;quot;_id&amp;quot;:&amp;quot;5cdd76f2f0ab0124889da6b2&amp;quot;,&amp;quot;email&amp;quot;:&amp;quot;user1@gmail.com&amp;quot;}
POST /api/users 
</output>
                    <output type="stdout">200 
</output>
                    <output type="stdout">73.324 ms - 60
</output>
                </test>
            </suite>
        </suite>
        <suite duration="10" locationUrl="suite:///api/users.PATCH /makeAdmin" name="PATCH /makeAdmin" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\users.test.js" status="passed">
            <test duration="4" locationUrl="test:///api/users.PATCH /makeAdmin.Should return 403 if user was not admin on building" name="Should return 403 if user was not admin on building" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\users.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;userId&amp;quot;:&amp;quot;5cdd76f2f0ab0124889da6b6&amp;quot;,&amp;quot;buildingId&amp;quot;:&amp;quot;5cdd76f2f0ab0124889da6b4&amp;quot;}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZmMmYwYWIwMTI0ODg5ZGE2YjUiLCJyb2xlIjoxLCJpYXQiOjE1NTgwMTc3Nzh9.zwrVQyYYmH2sXLPfixOFFqSH54sJ7Hd2AU5BFMNIAO0&amp;quot;
user.admin:  []
Res body: User was not admin on building and can therefore not promote other users to admins
PATCH /api/users/makeadmin 
</output>
                <output type="stdout">403 
</output>
                <output type="stdout">1.513 ms - 82
</output>
            </test>
            <test duration="1" locationUrl="test:///api/users.PATCH /makeAdmin.Should return 401 if no token provided" name="Should return 401 if no token provided" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\users.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;userId&amp;quot;:&amp;quot;5cdd76f2f0ab0124889da6ba&amp;quot;,&amp;quot;buildingId&amp;quot;:&amp;quot;5cdd76f2f0ab0124889da6b8&amp;quot;}
&amp;quot;null&amp;quot;
Res body: Invalid token
PATCH /api/users/makeadmin 
</output>
                <output type="stdout">401 
</output>
                <output type="stdout">0.217 ms - 13
</output>
            </test>
            <test duration="5" locationUrl="test:///api/users.PATCH /makeAdmin.Should return updated user with adminOnBuildings updated" name="Should return updated user with adminOnBuildings updated" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\integration\users.test.js" status="passed">
                <output type="stdout">Req body: {&amp;quot;userId&amp;quot;:&amp;quot;5cdd76f2f0ab0124889da6be&amp;quot;,&amp;quot;buildingId&amp;quot;:&amp;quot;5cdd76f2f0ab0124889da6bc&amp;quot;}
&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2RkNzZmMmYwYWIwMTI0ODg5ZGE2YmQiLCJyb2xlIjoxLCJpYXQiOjE1NTgwMTc3Nzh9.Dx1iCA4WaCz_CNl_q3tCBRB2NZx1yuHMU0zUiQ5A8B4&amp;quot;
user.admin:  [&amp;quot;5cdd76f2f0ab0124889da6bc&amp;quot;]
Res body: {&amp;quot;isAdmin&amp;quot;:false,&amp;quot;adminOnBuildings&amp;quot;:[&amp;quot;5cdd76f2f0ab0124889da6bc&amp;quot;],&amp;quot;role&amp;quot;:1,&amp;quot;_id&amp;quot;:&amp;quot;5cdd76f2f0ab0124889da6be&amp;quot;,&amp;quot;email&amp;quot;:&amp;quot;hej&amp;quot;,&amp;quot;password&amp;quot;:&amp;quot;yo&amp;quot;,&amp;quot;__v&amp;quot;:0}
PATCH /api/users/makeadmin 
</output>
                <output type="stdout">200 
</output>
                <output type="stdout">3.479 ms - 145
</output>
            </test>
        </suite>
    </suite>
    <suite duration="2" locationUrl="suite://Answers" name="Answers" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\answer.test.js" status="passed">
        <suite duration="2" locationUrl="suite://Answers.Answer in database" name="Answer in database" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\answer.test.js" status="passed">
            <test duration="1" locationUrl="test://Answers.Answer in database.should be valid with question" name="should be valid with question" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\answer.test.js" status="passed"/>
            <test duration="1" locationUrl="test://Answers.Answer in database.should have a value" name="should have a value" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\answer.test.js" status="passed"/>
        </suite>
        <suite duration="0" locationUrl="suite://Answers.Answer from client" name="Answer from client" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\answer.test.js" status="passed">
            <test duration="0" locationUrl="test://Answers.Answer from client.Should not allow random parameters" name="Should not allow random parameters" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\answer.test.js" status="passed"/>
            <test duration="0" locationUrl="test://Answers.Answer from client.Should validate successfully when all parameters parse" name="Should validate successfully when all parameters parse" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\answer.test.js" status="passed"/>
        </suite>
    </suite>
    <suite duration="0" locationUrl="suite://auth" name="auth" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\auth.test.js" status="passed">
        <suite duration="0" locationUrl="suite://auth.admin" name="admin" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\auth.test.js" status="passed">
            <test duration="0" locationUrl="test://auth.admin.should call status with 403 if user not admin" name="should call status with 403 if user not admin" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\auth.test.js" status="passed"/>
            <test duration="0" locationUrl="test://auth.admin.Should call next when user admin" name="Should call next when user admin" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\auth.test.js" status="passed"/>
        </suite>
        <suite duration="0" locationUrl="suite://auth.auth" name="auth" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\auth.test.js" status="passed">
            <test duration="0" locationUrl="test://auth.auth.should call status 401 if id was not valid" name="should call status 401 if id was not valid" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\auth.test.js" status="passed">
                <output type="stdout">undefined
</output>
            </test>
        </suite>
    </suite>
    <suite duration="3" locationUrl="suite://Feedback in database" name="Feedback in database" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\feedback.test.js" status="passed">
        <test duration="0" locationUrl="test://Feedback in database.should be valid with question, room and user" name="should be valid with question, room and user" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\feedback.test.js" status="passed"/>
        <test duration="1" locationUrl="test://Feedback in database.should have a question id" name="should have a question id" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\feedback.test.js" status="passed"/>
        <test duration="1" locationUrl="test://Feedback in database.should have a user id" name="should have a user id" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\feedback.test.js" status="passed"/>
        <test duration="1" locationUrl="test://Feedback in database.should have a user" name="should have a user" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\feedback.test.js" status="passed"/>
        <test duration="0" locationUrl="test://Feedback in database.should have an answer" name="should have an answer" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\feedback.test.js" status="passed"/>
    </suite>
    <suite duration="3" locationUrl="suite://KNN algorithm manager" name="KNN algorithm manager" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\nearestNeighborManager.test.js" status="passed">
        <suite duration="2" locationUrl="suite://KNN algorithm manager.Initialization" name="Initialization" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\nearestNeighborManager.test.js" status="passed">
            <test duration="1" locationUrl="test://KNN algorithm manager.Initialization.Should throw error if type is not a string" name="Should throw error if type is not a string" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\nearestNeighborManager.test.js" status="passed"/>
            <test duration="0" locationUrl="test://KNN algorithm manager.Initialization.Should throw error if dimensions below 1" name="Should throw error if dimensions below 1" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\nearestNeighborManager.test.js" status="passed"/>
            <test duration="1" locationUrl="test://KNN algorithm manager.Initialization.Should throw error if some of the points did not have correct dimension" name="Should throw error if some of the points did not have correct dimension" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\nearestNeighborManager.test.js" status="passed"/>
            <test duration="0" locationUrl="test://KNN algorithm manager.Initialization.Should throw error if initial points is not at least one-length array" name="Should throw error if initial points is not at least one-length array" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\nearestNeighborManager.test.js" status="passed"/>
            <test duration="0" locationUrl="test://KNN algorithm manager.Initialization.Should throw error if an initial point did not have both id and vector array" name="Should throw error if an initial point did not have both id and vector array" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\nearestNeighborManager.test.js" status="passed"/>
            <test duration="0" locationUrl="test://KNN algorithm manager.Initialization.Should throw error if id of a point is not set" name="Should throw error if id of a point is not set" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\nearestNeighborManager.test.js" status="passed"/>
            <test duration="0" locationUrl="test://KNN algorithm manager.Initialization.Should set points array if provided correct input" name="Should set points array if provided correct input" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\nearestNeighborManager.test.js" status="passed"/>
            <test duration="0" locationUrl="test://KNN algorithm manager.Initialization.Should not throw error even when vector with 0 value was parsed " name="Should not throw error even when vector with 0 value was parsed " metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\nearestNeighborManager.test.js" status="passed"/>
            <test duration="0" locationUrl="test://KNN algorithm manager.Initialization.Should throw if k was not set to a value above 0" name="Should throw if k was not set to a value above 0" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\nearestNeighborManager.test.js" status="passed"/>
            <test duration="0" locationUrl="test://KNN algorithm manager.Initialization.Should have points to at least the amount of k " name="Should have points to at least the amount of k " metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\nearestNeighborManager.test.js" status="passed"/>
        </suite>
        <suite duration="1" locationUrl="suite://KNN algorithm manager.Calculate euclidean distance between two points" name="Calculate euclidean distance between two points" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\nearestNeighborManager.test.js" status="passed">
            <test duration="1" locationUrl="test://KNN algorithm manager.Calculate euclidean distance between two points.Should throw error if the one of the two points do not have the correct dimension" name="Should throw error if the one of the two points do not have the correct dimension" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\nearestNeighborManager.test.js" status="passed"/>
            <test duration="0" locationUrl="test://KNN algorithm manager.Calculate euclidean distance between two points.Should calculate distance" name="Should calculate distance" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\nearestNeighborManager.test.js" status="passed"/>
            <test duration="0" locationUrl="test://KNN algorithm manager.Calculate euclidean distance between two points.Should also calculate distance in 3 dimensions" name="Should also calculate distance in 3 dimensions" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\nearestNeighborManager.test.js" status="passed"/>
        </suite>
        <suite duration="0" locationUrl="suite://KNN algorithm manager.Find nearest neighbors" name="Find nearest neighbors" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\nearestNeighborManager.test.js" status="passed">
            <test duration="0" locationUrl="test://KNN algorithm manager.Find nearest neighbors.Should return array of length 2" name="Should return array of length 2" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\nearestNeighborManager.test.js" status="passed"/>
            <test duration="0" locationUrl="test://KNN algorithm manager.Find nearest neighbors.Should consist of the the 2 closest neighbors" name="Should consist of the the 2 closest neighbors" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\nearestNeighborManager.test.js" status="passed"/>
        </suite>
        <suite duration="0" locationUrl="suite://KNN algorithm manager.Find point with maximum distance to new point" name="Find point with maximum distance to new point" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\nearestNeighborManager.test.js" status="passed">
            <test duration="0" locationUrl="test://KNN algorithm manager.Find point with maximum distance to new point.Should estimate the right point to be at max distance" name="Should estimate the right point to be at max distance" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\nearestNeighborManager.test.js" status="passed"/>
        </suite>
        <suite duration="0" locationUrl="suite://KNN algorithm manager.Find closest point index and distance" name="Find closest point index and distance" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\nearestNeighborManager.test.js" status="passed">
            <test duration="0" locationUrl="test://KNN algorithm manager.Find closest point index and distance.Should return index of min distance point" name="Should return index of min distance point" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\nearestNeighborManager.test.js" status="passed"/>
        </suite>
        <suite duration="0" locationUrl="suite://KNN algorithm manager.Check if point has valid type" name="Check if point has valid type" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\nearestNeighborManager.test.js" status="passed">
            <test duration="0" locationUrl="test://KNN algorithm manager.Check if point has valid type.Should throw error if type is not valid" name="Should throw error if type is not valid" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\nearestNeighborManager.test.js" status="passed"/>
            <test duration="0" locationUrl="test://KNN algorithm manager.Check if point has valid type.Should not throw error if type is valid (set in initialPoints) " name="Should not throw error if type is valid (set in initialPoints) " metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\nearestNeighborManager.test.js" status="passed"/>
        </suite>
        <suite duration="0" locationUrl="suite://KNN algorithm manager.Estimate point type " name="Estimate point type " metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\nearestNeighborManager.test.js" status="passed">
            <test duration="0" locationUrl="test://KNN algorithm manager.Estimate point type .Should throw error if point type was already set" name="Should throw error if point type was already set" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\nearestNeighborManager.test.js" status="passed"/>
            <test duration="0" locationUrl="test://KNN algorithm manager.Estimate point type .Should return the point type with minimal distances if the nearest points have different types" name="Should return the point type with minimal distances if the nearest points have different types" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\nearestNeighborManager.test.js" status="passed">
                <output type="stdout">{ vector: [ 18, 12 ] }
</output>
            </test>
            <test duration="0" locationUrl="test://KNN algorithm manager.Estimate point type .Should return type that most nearest points has" name="Should return type that most nearest points has" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\nearestNeighborManager.test.js" status="passed">
                <output type="stdout">{ vector: [ 18, 12 ] }
</output>
            </test>
        </suite>
    </suite>
    <suite duration="6" locationUrl="suite://Question Validation" name="Question Validation" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\question.test.js" status="passed">
        <suite duration="6" locationUrl="suite://Question Validation.Question in database" name="Question in database" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\question.test.js" status="passed">
            <test duration="1" locationUrl="test://Question Validation.Question in database.Should have valid room ids" name="Should have valid room ids" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\question.test.js" status="passed"/>
            <test duration="0" locationUrl="test://Question Validation.Question in database.should have an array of rooms" name="should have an array of rooms" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\question.test.js" status="passed"/>
            <test duration="1" locationUrl="test://Question Validation.Question in database.Should have an array with at least one room" name="Should have an array with at least one room" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\question.test.js" status="passed"/>
            <test duration="1" locationUrl="test://Question Validation.Question in database.should have a value" name="should have a value" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\question.test.js" status="passed"/>
            <test duration="1" locationUrl="test://Question Validation.Question in database.Should have a list of answer options" name="Should have a list of answer options" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\question.test.js" status="passed"/>
            <test duration="0" locationUrl="test://Question Validation.Question in database.Should have object id in answer options" name="Should have object id in answer options" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\question.test.js" status="passed"/>
            <test duration="1" locationUrl="test://Question Validation.Question in database.Should have object id in answer options" name="Should have object id in answer options" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\question.test.js" status="passed"/>
            <test duration="1" locationUrl="test://Question Validation.Question in database.Should have boolean isActive" name="Should have boolean isActive" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\question.test.js" status="passed"/>
            <test duration="0" locationUrl="test://Question Validation.Question in database.Should validate successfully if all parameters parsed" name="Should validate successfully if all parameters parsed" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\question.test.js" status="passed"/>
        </suite>
        <suite duration="0" locationUrl="suite://Question Validation.Question from client" name="Question from client" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\question.test.js" status="passed">
            <test duration="0" locationUrl="test://Question Validation.Question from client.Should be validated successfully if all parameters parsed" name="Should be validated successfully if all parameters parsed" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\question.test.js" status="passed"/>
            <test duration="0" locationUrl="test://Question Validation.Question from client.Should return error if value not provided" name="Should return error if value not provided" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\question.test.js" status="passed"/>
        </suite>
    </suite>
    <suite duration="2" locationUrl="suite://Room validation" name="Room validation" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\room.test.js" status="passed">
        <suite duration="1" locationUrl="suite://Room validation.Room in DB" name="Room in DB" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\room.test.js" status="passed">
            <test duration="0" locationUrl="test://Room validation.Room in DB.should be valid with building, location and name" name="should be valid with building, location and name" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\room.test.js" status="passed"/>
            <test duration="1" locationUrl="test://Room validation.Room in DB.should have a building id" name="should have a building id" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\room.test.js" status="passed"/>
            <test duration="0" locationUrl="test://Room validation.Room in DB.should have a name" name="should have a name" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\room.test.js" status="passed"/>
        </suite>
        <suite duration="1" locationUrl="suite://Room validation.Room from client" name="Room from client" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\room.test.js" status="passed">
            <test duration="1" locationUrl="test://Room validation.Room from client.should have a buildingId" name="should have a buildingId" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\room.test.js" status="passed"/>
            <test duration="0" locationUrl="test://Room validation.Room from client.should be validated successfully if buildingId and name provided" name="should be validated successfully if buildingId and name provided" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\room.test.js" status="passed"/>
            <test duration="0" locationUrl="test://Room validation.Room from client.should have name" name="should have name" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\room.test.js" status="passed"/>
        </suite>
    </suite>
    <suite duration="9" locationUrl="suite://Location estimation algorithm" name="Location estimation algorithm" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\signalMap.test.js" status="passed">
        <suite duration="7" locationUrl="suite://Location estimation algorithm.Estimate room" name="Estimate room" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\signalMap.test.js" status="passed">
            <test duration="2" locationUrl="test://Location estimation algorithm.Estimate room.Should estimate room to be signalMap 1" name="Should estimate room to be signalMap 1" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\signalMap.test.js" status="passed">
                <output type="stdout">signalmaps:  [ { beacons: [ [Object], [Object] ],
    room: 5cdd76f2f0ab0124889da720 },
  { beacons: [ [Object], [Object] ],
    room: 5cdd76f2f0ab0124889da721 },
  { beacons: [ [Object], [Object] ],
    room: 5cdd76f2f0ab0124889da722 } ]
clientb:  [ { beaconId: 5cdd76f2f0ab0124889da71e, signals: [ 20 ] },
  { beaconId: 5cdd76f2f0ab0124889da71f, signals: [ 10 ] } ]
idds [ 5cdd76f2f0ab0124889da71e, 5cdd76f2f0ab0124889da71f ]
unaligned [ { _id: 5cdd76f2f0ab0124889da71e, signals: [ 19, 21 ] },
  { _id: 5cdd76f2f0ab0124889da71f, signals: [ 9, 11 ] } ]
unaligned { _id: 5cdd76f2f0ab0124889da71e, signals: [ 19, 21 ] }
[ { _id: 5cdd76f2f0ab0124889da71e, signals: [ 19, 21 ] },
  { _id: 5cdd76f2f0ab0124889da71f, signals: [ 9, 11 ] } ]
unaligned [ { _id: 5cdd76f2f0ab0124889da71e, signals: [ 50, 55 ] },
  { _id: 5cdd76f2f0ab0124889da71f, signals: [ 1, 2 ] } ]
unaligned { _id: 5cdd76f2f0ab0124889da71e, signals: [ 50, 55 ] }
[ { _id: 5cdd76f2f0ab0124889da71e, signals: [ 50, 55 ] },
  { _id: 5cdd76f2f0ab0124889da71f, signals: [ 1, 2 ] } ]
unaligned [ { _id: 5cdd76f2f0ab0124889da71e, signals: [ 100, 102 ] },
  { _id: 5cdd76f2f0ab0124889da71f, signals: [ 300, 302 ] } ]
unaligned { _id: 5cdd76f2f0ab0124889da71e, signals: [ 100, 102 ] }
[ { _id: 5cdd76f2f0ab0124889da71e, signals: [ 100, 102 ] },
  { _id: 5cdd76f2f0ab0124889da71f, signals: [ 300, 302 ] } ]
[ { vector: [ 19, 9 ], type: &amp;#39;5cdd76f2f0ab0124889da720&amp;#39; },
  { vector: [ 21, 11 ], type: &amp;#39;5cdd76f2f0ab0124889da720&amp;#39; },
  { vector: [ 50, 1 ], type: &amp;#39;5cdd76f2f0ab0124889da721&amp;#39; },
  { vector: [ 55, 2 ], type: &amp;#39;5cdd76f2f0ab0124889da721&amp;#39; },
  { vector: [ 100, 300 ], type: &amp;#39;5cdd76f2f0ab0124889da722&amp;#39; },
  { vector: [ 102, 302 ], type: &amp;#39;5cdd76f2f0ab0124889da722&amp;#39; } ]
unaligned [ { beaconId: 5cdd76f2f0ab0124889da71e, signals: [ 20 ] },
  { beaconId: 5cdd76f2f0ab0124889da71f, signals: [ 10 ] } ]
unaligned { beaconId: 5cdd76f2f0ab0124889da71e, signals: [ 20 ] }
[ { beaconId: 5cdd76f2f0ab0124889da71e, signals: [ 20 ] },
  { beaconId: 5cdd76f2f0ab0124889da71f, signals: [ 10 ] } ]
{ vector: [ 20, 10 ] }
</output>
            </test>
            <test duration="2" locationUrl="test://Location estimation algorithm.Estimate room.Should also work with reversed order" name="Should also work with reversed order" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\signalMap.test.js" status="passed">
                <output type="stdout">signalmaps:  [ { beacons: [ [Object], [Object] ],
    room: 5cdd76f2f0ab0124889da727 },
  { beacons: [ [Object], [Object] ],
    room: 5cdd76f2f0ab0124889da726 },
  { beacons: [ [Object], [Object] ],
    room: 5cdd76f2f0ab0124889da725 } ]
clientb:  [ { beaconId: 5cdd76f2f0ab0124889da723, signals: [ 20 ] },
  { beaconId: 5cdd76f2f0ab0124889da724, signals: [ 10 ] } ]
idds [ 5cdd76f2f0ab0124889da723, 5cdd76f2f0ab0124889da724 ]
unaligned [ { _id: 5cdd76f2f0ab0124889da723, signals: [ 100, 102 ] },
  { _id: 5cdd76f2f0ab0124889da724, signals: [ 300, 302 ] } ]
unaligned { _id: 5cdd76f2f0ab0124889da723, signals: [ 100, 102 ] }
[ { _id: 5cdd76f2f0ab0124889da723, signals: [ 100, 102 ] },
  { _id: 5cdd76f2f0ab0124889da724, signals: [ 300, 302 ] } ]
unaligned [ { _id: 5cdd76f2f0ab0124889da723, signals: [ 50, 55 ] },
  { _id: 5cdd76f2f0ab0124889da724, signals: [ 1, 2 ] } ]
unaligned { _id: 5cdd76f2f0ab0124889da723, signals: [ 50, 55 ] }
[ { _id: 5cdd76f2f0ab0124889da723, signals: [ 50, 55 ] },
  { _id: 5cdd76f2f0ab0124889da724, signals: [ 1, 2 ] } ]
unaligned [ { _id: 5cdd76f2f0ab0124889da723, signals: [ 19, 21 ] },
  { _id: 5cdd76f2f0ab0124889da724, signals: [ 9, 11 ] } ]
unaligned { _id: 5cdd76f2f0ab0124889da723, signals: [ 19, 21 ] }
[ { _id: 5cdd76f2f0ab0124889da723, signals: [ 19, 21 ] },
  { _id: 5cdd76f2f0ab0124889da724, signals: [ 9, 11 ] } ]
[ { vector: [ 100, 300 ], type: &amp;#39;5cdd76f2f0ab0124889da727&amp;#39; },
  { vector: [ 102, 302 ], type: &amp;#39;5cdd76f2f0ab0124889da727&amp;#39; },
  { vector: [ 50, 1 ], type: &amp;#39;5cdd76f2f0ab0124889da726&amp;#39; },
  { vector: [ 55, 2 ], type: &amp;#39;5cdd76f2f0ab0124889da726&amp;#39; },
  { vector: [ 19, 9 ], type: &amp;#39;5cdd76f2f0ab0124889da725&amp;#39; },
  { vector: [ 21, 11 ], type: &amp;#39;5cdd76f2f0ab0124889da725&amp;#39; } ]
unaligned [ { beaconId: 5cdd76f2f0ab0124889da723, signals: [ 20 ] },
  { beaconId: 5cdd76f2f0ab0124889da724, signals: [ 10 ] } ]
unaligned { beaconId: 5cdd76f2f0ab0124889da723, signals: [ 20 ] }
[ { beaconId: 5cdd76f2f0ab0124889da723, signals: [ 20 ] },
  { beaconId: 5cdd76f2f0ab0124889da724, signals: [ 10 ] } ]
{ vector: [ 20, 10 ] }
</output>
            </test>
            <test duration="1" locationUrl="test://Location estimation algorithm.Estimate room.Should find correct room with 3 signalMaps" name="Should find correct room with 3 signalMaps" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\signalMap.test.js" status="passed">
                <output type="stdout">signalmaps:  [ { beacons: [ [Object], [Object] ],
    room: 5cdd76f2f0ab0124889da72a },
  { beacons: [ [Object], [Object] ],
    room: 5cdd76f2f0ab0124889da72d },
  { beacons: [ [Object], [Object] ],
    room: 5cdd76f2f0ab0124889da72b } ]
clientb:  [ { beaconId: 5cdd76f2f0ab0124889da728, signals: [ 20 ] },
  { beaconId: 5cdd76f2f0ab0124889da729, signals: [ 10 ] } ]
idds [ 5cdd76f2f0ab0124889da728, 5cdd76f2f0ab0124889da729 ]
unaligned [ { _id: 5cdd76f2f0ab0124889da728, signals: [ 19, 21 ] },
  { _id: 5cdd76f2f0ab0124889da729, signals: [ 9, 11 ] } ]
unaligned { _id: 5cdd76f2f0ab0124889da728, signals: [ 19, 21 ] }
[ { _id: 5cdd76f2f0ab0124889da728, signals: [ 19, 21 ] },
  { _id: 5cdd76f2f0ab0124889da729, signals: [ 9, 11 ] } ]
unaligned [ { _id: 5cdd76f2f0ab0124889da728, signals: [ 18, 22 ] },
  { _id: 5cdd76f2f0ab0124889da729, signals: [ 8, 12 ] } ]
unaligned { _id: 5cdd76f2f0ab0124889da728, signals: [ 18, 22 ] }
[ { _id: 5cdd76f2f0ab0124889da728, signals: [ 18, 22 ] },
  { _id: 5cdd76f2f0ab0124889da729, signals: [ 8, 12 ] } ]
unaligned [ { _id: 5cdd76f2f0ab0124889da728, signals: [ 50, 55 ] },
  { _id: 5cdd76f2f0ab0124889da729, signals: [ 1, 2 ] } ]
unaligned { _id: 5cdd76f2f0ab0124889da728, signals: [ 50, 55 ] }
[ { _id: 5cdd76f2f0ab0124889da728, signals: [ 50, 55 ] },
  { _id: 5cdd76f2f0ab0124889da729, signals: [ 1, 2 ] } ]
[ { vector: [ 19, 9 ], type: &amp;#39;5cdd76f2f0ab0124889da72a&amp;#39; },
  { vector: [ 21, 11 ], type: &amp;#39;5cdd76f2f0ab0124889da72a&amp;#39; },
  { vector: [ 18, 8 ], type: &amp;#39;5cdd76f2f0ab0124889da72d&amp;#39; },
  { vector: [ 22, 12 ], type: &amp;#39;5cdd76f2f0ab0124889da72d&amp;#39; },
  { vector: [ 50, 1 ], type: &amp;#39;5cdd76f2f0ab0124889da72b&amp;#39; },
  { vector: [ 55, 2 ], type: &amp;#39;5cdd76f2f0ab0124889da72b&amp;#39; } ]
unaligned [ { beaconId: 5cdd76f2f0ab0124889da728, signals: [ 20 ] },
  { beaconId: 5cdd76f2f0ab0124889da729, signals: [ 10 ] } ]
unaligned { beaconId: 5cdd76f2f0ab0124889da728, signals: [ 20 ] }
[ { beaconId: 5cdd76f2f0ab0124889da728, signals: [ 20 ] },
  { beaconId: 5cdd76f2f0ab0124889da729, signals: [ 10 ] } ]
{ vector: [ 20, 10 ] }
</output>
            </test>
            <test duration="1" locationUrl="test://Location estimation algorithm.Estimate room.Should return correct room when client beacons length is shorter than server beacon length" name="Should return correct room when client beacons length is shorter than server beacon length" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\signalMap.test.js" status="passed">
                <output type="stdout">signalmaps:  [ { beacons: [ [Object], [Object], [Object] ],
    room: 5cdd76f2f0ab0124889da730 },
  { beacons: [ [Object], [Object], [Object] ],
    room: 5cdd76f2f0ab0124889da731 },
  { beacons: [ [Object], [Object] ],
    room: 5cdd76f2f0ab0124889da732 } ]
clientb:  [ { beaconId: 5cdd76f2f0ab0124889da72e, signals: [ 20 ] },
  { beaconId: 5cdd76f2f0ab0124889da72f, signals: [ 10 ] } ]
idds [ 5cdd76f2f0ab0124889da72e, 5cdd76f2f0ab0124889da72f ]
unaligned [ { _id: 5cdd76f2f0ab0124889da72e, signals: [ 19, 21 ] },
  { _id: 5cdd76f2f0ab0124889da72f, signals: [ 9, 11 ] },
  { _id: 5cdd76f2f0ab0124889da72e, signals: [ 50, 55 ] } ]
unaligned { _id: 5cdd76f2f0ab0124889da72e, signals: [ 19, 21 ] }
[ { _id: 5cdd76f2f0ab0124889da72e, signals: [ 19, 21 ] },
  { _id: 5cdd76f2f0ab0124889da72f, signals: [ 9, 11 ] },
  { _id: 5cdd76f2f0ab0124889da72e, signals: [ 50, 55 ] } ]
unaligned [ { _id: 5cdd76f2f0ab0124889da72e, signals: [ 50, 55 ] },
  { _id: 5cdd76f2f0ab0124889da72f, signals: [ 1, 2 ] },
  { _id: 5cdd76f2f0ab0124889da72e, signals: [ 50, 55 ] } ]
unaligned { _id: 5cdd76f2f0ab0124889da72e, signals: [ 50, 55 ] }
[ { _id: 5cdd76f2f0ab0124889da72e, signals: [ 50, 55 ] },
  { _id: 5cdd76f2f0ab0124889da72f, signals: [ 1, 2 ] },
  { _id: 5cdd76f2f0ab0124889da72e, signals: [ 50, 55 ] } ]
unaligned [ { _id: 5cdd76f2f0ab0124889da72e, signals: [ 100, 102 ] },
  { _id: 5cdd76f2f0ab0124889da72f, signals: [ 300, 302 ] } ]
unaligned { _id: 5cdd76f2f0ab0124889da72e, signals: [ 100, 102 ] }
[ { _id: 5cdd76f2f0ab0124889da72e, signals: [ 100, 102 ] },
  { _id: 5cdd76f2f0ab0124889da72f, signals: [ 300, 302 ] } ]
[ { vector: [ 19, 9 ], type: &amp;#39;5cdd76f2f0ab0124889da730&amp;#39; },
  { vector: [ 21, 11 ], type: &amp;#39;5cdd76f2f0ab0124889da730&amp;#39; },
  { vector: [ 50, 1 ], type: &amp;#39;5cdd76f2f0ab0124889da731&amp;#39; },
  { vector: [ 55, 2 ], type: &amp;#39;5cdd76f2f0ab0124889da731&amp;#39; },
  { vector: [ 100, 300 ], type: &amp;#39;5cdd76f2f0ab0124889da732&amp;#39; },
  { vector: [ 102, 302 ], type: &amp;#39;5cdd76f2f0ab0124889da732&amp;#39; } ]
unaligned [ { beaconId: 5cdd76f2f0ab0124889da72e, signals: [ 20 ] },
  { beaconId: 5cdd76f2f0ab0124889da72f, signals: [ 10 ] } ]
unaligned { beaconId: 5cdd76f2f0ab0124889da72e, signals: [ 20 ] }
[ { beaconId: 5cdd76f2f0ab0124889da72e, signals: [ 20 ] },
  { beaconId: 5cdd76f2f0ab0124889da72f, signals: [ 10 ] } ]
{ vector: [ 20, 10 ] }
</output>
            </test>
            <test duration="0" locationUrl="test://Location estimation algorithm.Estimate room.Should also locate the right room when client posts more beacons than server has" name="Should also locate the right room when client posts more beacons than server has" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\signalMap.test.js" status="passed">
                <output type="stdout">signalmaps:  [ { beacons: [ [Object], [Object] ],
    room: 5cdd76f2f0ab0124889da735 },
  { beacons: [ [Object], [Object] ],
    room: 5cdd76f2f0ab0124889da736 },
  { beacons: [ [Object], [Object] ],
    room: 5cdd76f2f0ab0124889da737 } ]
clientb:  [ { beaconId: 5cdd76f2f0ab0124889da733, signals: [ 20 ] },
  { beaconId: 5cdd76f2f0ab0124889da734, signals: [ 10 ] },
  { beaconId: 5cdd76f2f0ab0124889da738, signals: [ 50, 55 ] } ]
idds [ 5cdd76f2f0ab0124889da733, 5cdd76f2f0ab0124889da734 ]
unaligned [ { _id: 5cdd76f2f0ab0124889da733, signals: [ 19, 21 ] },
  { _id: 5cdd76f2f0ab0124889da734, signals: [ 9, 11 ] } ]
unaligned { _id: 5cdd76f2f0ab0124889da733, signals: [ 19, 21 ] }
[ { _id: 5cdd76f2f0ab0124889da733, signals: [ 19, 21 ] },
  { _id: 5cdd76f2f0ab0124889da734, signals: [ 9, 11 ] } ]
unaligned [ { _id: 5cdd76f2f0ab0124889da733, signals: [ 50, 55 ] },
  { _id: 5cdd76f2f0ab0124889da734, signals: [ 1, 2 ] } ]
unaligned { _id: 5cdd76f2f0ab0124889da733, signals: [ 50, 55 ] }
[ { _id: 5cdd76f2f0ab0124889da733, signals: [ 50, 55 ] },
  { _id: 5cdd76f2f0ab0124889da734, signals: [ 1, 2 ] } ]
unaligned [ { _id: 5cdd76f2f0ab0124889da733, signals: [ 100, 102 ] },
  { _id: 5cdd76f2f0ab0124889da734, signals: [ 300, 302 ] } ]
unaligned { _id: 5cdd76f2f0ab0124889da733, signals: [ 100, 102 ] }
[ { _id: 5cdd76f2f0ab0124889da733, signals: [ 100, 102 ] },
  { _id: 5cdd76f2f0ab0124889da734, signals: [ 300, 302 ] } ]
[ { vector: [ 19, 9 ], type: &amp;#39;5cdd76f2f0ab0124889da735&amp;#39; },
  { vector: [ 21, 11 ], type: &amp;#39;5cdd76f2f0ab0124889da735&amp;#39; },
  { vector: [ 50, 1 ], type: &amp;#39;5cdd76f2f0ab0124889da736&amp;#39; },
  { vector: [ 55, 2 ], type: &amp;#39;5cdd76f2f0ab0124889da736&amp;#39; },
  { vector: [ 100, 300 ], type: &amp;#39;5cdd76f2f0ab0124889da737&amp;#39; },
  { vector: [ 102, 302 ], type: &amp;#39;5cdd76f2f0ab0124889da737&amp;#39; } ]
unaligned [ { beaconId: 5cdd76f2f0ab0124889da733, signals: [ 20 ] },
  { beaconId: 5cdd76f2f0ab0124889da734, signals: [ 10 ] },
  { beaconId: 5cdd76f2f0ab0124889da738, signals: [ 50, 55 ] } ]
unaligned { beaconId: 5cdd76f2f0ab0124889da733, signals: [ 20 ] }
[ { beaconId: 5cdd76f2f0ab0124889da733, signals: [ 20 ] },
  { beaconId: 5cdd76f2f0ab0124889da734, signals: [ 10 ] },
  { beaconId: 5cdd76f2f0ab0124889da738, signals: [ 50, 55 ] } ]
{ vector: [ 20, 10 ] }
</output>
            </test>
            <test duration="1" locationUrl="test://Location estimation algorithm.Estimate room.Should estimate the correct room even though the nearest point is for another room" name="Should estimate the correct room even though the nearest point is for another room" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\signalMap.test.js" status="passed">
                <output type="stdout">signalmaps:  [ { beacons: [ [Object], [Object] ],
    room: 5cdd76f2f0ab0124889da73b },
  { beacons: [ [Object], [Object] ],
    room: 5cdd76f2f0ab0124889da73c },
  { beacons: [ [Object], [Object] ],
    room: 5cdd76f2f0ab0124889da73d },
  { beacons: [ [Object], [Object] ],
    room: 5cdd76f2f0ab0124889da73c } ]
clientb:  [ { beaconId: 5cdd76f2f0ab0124889da739, signals: [ 20 ] },
  { beaconId: 5cdd76f2f0ab0124889da73a, signals: [ 10 ] } ]
idds [ 5cdd76f2f0ab0124889da739, 5cdd76f2f0ab0124889da73a ]
unaligned [ { _id: 5cdd76f2f0ab0124889da739, signals: [ 19, 21 ] },
  { _id: 5cdd76f2f0ab0124889da73a, signals: [ 9, 11 ] } ]
unaligned { _id: 5cdd76f2f0ab0124889da739, signals: [ 19, 21 ] }
[ { _id: 5cdd76f2f0ab0124889da739, signals: [ 19, 21 ] },
  { _id: 5cdd76f2f0ab0124889da73a, signals: [ 9, 11 ] } ]
unaligned [ { _id: 5cdd76f2f0ab0124889da739, signals: [ 50, 55 ] },
  { _id: 5cdd76f2f0ab0124889da73a, signals: [ 1, 2 ] } ]
unaligned { _id: 5cdd76f2f0ab0124889da739, signals: [ 50, 55 ] }
[ { _id: 5cdd76f2f0ab0124889da739, signals: [ 50, 55 ] },
  { _id: 5cdd76f2f0ab0124889da73a, signals: [ 1, 2 ] } ]
unaligned [ { _id: 5cdd76f2f0ab0124889da739, signals: [ 100, 102 ] },
  { _id: 5cdd76f2f0ab0124889da73a, signals: [ 300, 302 ] } ]
unaligned { _id: 5cdd76f2f0ab0124889da739, signals: [ 100, 102 ] }
[ { _id: 5cdd76f2f0ab0124889da739, signals: [ 100, 102 ] },
  { _id: 5cdd76f2f0ab0124889da73a, signals: [ 300, 302 ] } ]
unaligned [ { _id: 5cdd76f2f0ab0124889da739, signals: [ 50, 55 ] },
  { _id: 5cdd76f2f0ab0124889da73a, signals: [ 1, 2 ] } ]
unaligned { _id: 5cdd76f2f0ab0124889da739, signals: [ 50, 55 ] }
[ { _id: 5cdd76f2f0ab0124889da739, signals: [ 50, 55 ] },
  { _id: 5cdd76f2f0ab0124889da73a, signals: [ 1, 2 ] } ]
[ { vector: [ 19, 9 ], type: &amp;#39;5cdd76f2f0ab0124889da73b&amp;#39; },
  { vector: [ 21, 11 ], type: &amp;#39;5cdd76f2f0ab0124889da73b&amp;#39; },
  { vector: [ 50, 1 ], type: &amp;#39;5cdd76f2f0ab0124889da73c&amp;#39; },
  { vector: [ 55, 2 ], type: &amp;#39;5cdd76f2f0ab0124889da73c&amp;#39; },
  { vector: [ 100, 300 ], type: &amp;#39;5cdd76f2f0ab0124889da73d&amp;#39; },
  { vector: [ 102, 302 ], type: &amp;#39;5cdd76f2f0ab0124889da73d&amp;#39; },
  { vector: [ 50, 1 ], type: &amp;#39;5cdd76f2f0ab0124889da73c&amp;#39; },
  { vector: [ 55, 2 ], type: &amp;#39;5cdd76f2f0ab0124889da73c&amp;#39; } ]
unaligned [ { beaconId: 5cdd76f2f0ab0124889da739, signals: [ 20 ] },
  { beaconId: 5cdd76f2f0ab0124889da73a, signals: [ 10 ] } ]
unaligned { beaconId: 5cdd76f2f0ab0124889da739, signals: [ 20 ] }
[ { beaconId: 5cdd76f2f0ab0124889da739, signals: [ 20 ] },
  { beaconId: 5cdd76f2f0ab0124889da73a, signals: [ 10 ] } ]
{ vector: [ 20, 10 ] }
</output>
            </test>
            <test duration="0" locationUrl="test://Location estimation algorithm.Estimate room.Should not throw " name="Should not throw " metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\signalMap.test.js" status="passed">
                <output type="stdout">signalmaps:  [ { isActive: true,
    _id: &amp;#39;5cc6ec3eaf4f896906f43f0d&amp;#39;,
    room: &amp;#39;5cc6cd0e785ba2674dbc7482&amp;#39;,
    beacons: [ [Object], [Object] ],
    __v: 0 } ]
clientb:  [ { signals: [ -78 ], beaconId: &amp;#39;5ca4b1776a3ec26dfd07362d&amp;#39; },
  { signals: [ -70 ], beaconId: &amp;#39;5ca45b286a3ec26dfd0735b5&amp;#39; } ]
idds [ 5cdd76f2f0ab0124889da73e, 5cdd76f2f0ab0124889da73f ]
unaligned [ { _id: &amp;#39;5ca4b1776a3ec26dfd07362d&amp;#39;, signals: [ -60 ] },
  { _id: &amp;#39;5ca45b286a3ec26dfd0735b5&amp;#39;, signals: [ -64 ] } ]
unaligned { _id: &amp;#39;5ca4b1776a3ec26dfd07362d&amp;#39;, signals: [ -60 ] }
[ { _id: &amp;#39;5ca4b1776a3ec26dfd07362d&amp;#39;, signals: [ -60 ] },
  { _id: &amp;#39;5ca45b286a3ec26dfd0735b5&amp;#39;, signals: [ -64 ] } ]
[ { vector: [ -100, -100 ], type: &amp;#39;5cc6cd0e785ba2674dbc7482&amp;#39; } ]
unaligned [ { signals: [ -78 ], beaconId: &amp;#39;5ca4b1776a3ec26dfd07362d&amp;#39; },
  { signals: [ -70 ], beaconId: &amp;#39;5ca45b286a3ec26dfd0735b5&amp;#39; } ]
unaligned { signals: [ -78 ], beaconId: &amp;#39;5ca4b1776a3ec26dfd07362d&amp;#39; }
[ { signals: [ -78 ], beaconId: &amp;#39;5ca4b1776a3ec26dfd07362d&amp;#39; },
  { signals: [ -70 ], beaconId: &amp;#39;5ca45b286a3ec26dfd0735b5&amp;#39; } ]
{ vector: [ -100, -100 ] }
</output>
            </test>
        </suite>
        <suite duration="0" locationUrl="suite://Location estimation algorithm.update nearest neighbors" name="update nearest neighbors" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\signalMap.test.js" status="passed">
            <test duration="0" locationUrl="test://Location estimation algorithm.update nearest neighbors.Should return array with new neighbor" name="Should return array with new neighbor" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\signalMap.test.js" status="passed"/>
            <test duration="0" locationUrl="test://Location estimation algorithm.update nearest neighbors.should return non-updated array when newNeighbor is further away" name="should return non-updated array when newNeighbor is further away" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\signalMap.test.js" status="passed"/>
        </suite>
        <suite duration="1" locationUrl="suite://Location estimation algorithm.Find the room that most neighbors point to" name="Find the room that most neighbors point to" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\signalMap.test.js" status="passed">
            <test duration="0" locationUrl="test://Location estimation algorithm.Find the room that most neighbors point to.Should return the roomId that most neighbors point to" name="Should return the roomId that most neighbors point to" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\signalMap.test.js" status="passed"/>
            <test duration="1" locationUrl="test://Location estimation algorithm.Find the room that most neighbors point to.Should return correct roomId when room2 has most neighbors" name="Should return correct roomId when room2 has most neighbors" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\signalMap.test.js" status="passed"/>
            <test duration="0" locationUrl="test://Location estimation algorithm.Find the room that most neighbors point to.If more neighbors have max count the method should return the element with the lowest distance" name="If more neighbors have max count the method should return the element with the lowest distance" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\signalMap.test.js" status="passed"/>
        </suite>
        <suite duration="1" locationUrl="suite://Location estimation algorithm.find index of max distance neighbor" name="find index of max distance neighbor" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\signalMap.test.js" status="passed">
            <test duration="0" locationUrl="test://Location estimation algorithm.find index of max distance neighbor.Should return correct index of max distance" name="Should return correct index of max distance" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\signalMap.test.js" status="passed"/>
            <test duration="1" locationUrl="test://Location estimation algorithm.find index of max distance neighbor.Should return index of undefined neighbor" name="Should return index of undefined neighbor" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\signalMap.test.js" status="passed"/>
        </suite>
        <suite duration="0" locationUrl="suite://Location estimation algorithm.align and fill arrays" name="align and fill arrays" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\signalMap.test.js" status="passed">
            <test duration="0" locationUrl="test://Location estimation algorithm.align and fill arrays.should return aligned beacons array" name="should return aligned beacons array" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\signalMap.test.js" status="passed">
                <output type="stdout">unaligned [ { beaconId: 5cdd76f2f0ab0124889da75c, signals: [] },
  { beaconId: 5cdd76f2f0ab0124889da75b, signals: [] } ]
unaligned { beaconId: 5cdd76f2f0ab0124889da75c, signals: [] }
[ { beaconId: 5cdd76f2f0ab0124889da75c, signals: [] },
  { beaconId: 5cdd76f2f0ab0124889da75b, signals: [] } ]
</output>
            </test>
            <test duration="0" locationUrl="test://Location estimation algorithm.align and fill arrays.Should return aligned beacon array with array length 3" name="Should return aligned beacon array with array length 3" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\signalMap.test.js" status="passed">
                <output type="stdout">unaligned [ { beaconId: 5cdd76f2f0ab0124889da760, signals: [] },
  { beaconId: 5cdd76f2f0ab0124889da75e, signals: [] },
  { beaconId: 5cdd76f2f0ab0124889da75f, signals: [] } ]
unaligned { beaconId: 5cdd76f2f0ab0124889da760, signals: [] }
[ { beaconId: 5cdd76f2f0ab0124889da760, signals: [] },
  { beaconId: 5cdd76f2f0ab0124889da75e, signals: [] },
  { beaconId: 5cdd76f2f0ab0124889da75f, signals: [] } ]
</output>
            </test>
            <test duration="0" locationUrl="test://Location estimation algorithm.align and fill arrays.Should fill array with -100 if an item wasn't in beacon id" name="Should fill array with -100 if an item wasn't in beacon id" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\signalMap.test.js" status="passed">
                <output type="stdout">unaligned [ { beaconId: 5cdd76f2f0ab0124889da763, signals: [ -10 ] },
  { beaconId: 5cdd76f2f0ab0124889da761, signals: [ -20 ] },
  { beaconId: 5cdd76f2f0ab0124889da764, signals: [ -30 ] } ]
unaligned { beaconId: 5cdd76f2f0ab0124889da763, signals: [ -10 ] }
[ { beaconId: 5cdd76f2f0ab0124889da763, signals: [ -10 ] },
  { beaconId: 5cdd76f2f0ab0124889da761, signals: [ -20 ] },
  { beaconId: 5cdd76f2f0ab0124889da764, signals: [ -30 ] } ]
</output>
            </test>
            <test duration="0" locationUrl="test://Location estimation algorithm.align and fill arrays.Should throw if unaligned is not at least one length array " name="Should throw if unaligned is not at least one length array " metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\signalMap.test.js" status="passed">
                <output type="stdout">unaligned []
unaligned undefined
</output>
            </test>
            <test duration="0" locationUrl="test://Location estimation algorithm.align and fill arrays.Should throw if beaconIds empty" name="Should throw if beaconIds empty" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\signalMap.test.js" status="passed"/>
        </suite>
    </suite>
    <suite duration="0" locationUrl="suite://Validation of url id parameter" name="Validation of url id parameter" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\urlParam.test.js" status="passed">
        <test duration="0" locationUrl="test://Validation of url id parameter.should return 400 if id not provided" name="should return 400 if id not provided" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\urlParam.test.js" status="passed">
            <output type="stdout">id undefined
{ [Function: fakeInstance] lastArg: &amp;#39;Id not provided&amp;#39;, callback: undefined }
</output>
        </test>
        <test duration="0" locationUrl="test://Validation of url id parameter.should return 400 if invalid id" name="should return 400 if invalid id" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\urlParam.test.js" status="passed">
            <output type="stdout">id undefined
</output>
        </test>
    </suite>
    <suite duration="6" locationUrl="suite://User" name="User" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\user.test.js" status="passed">
        <suite duration="4" locationUrl="suite://User.User in database" name="User in database" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\user.test.js" status="passed">
            <test duration="1" locationUrl="test://User.User in database.should be valid with user role" name="should be valid with user role" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\user.test.js" status="passed"/>
            <test duration="2" locationUrl="test://User.User in database.should have a user role" name="should have a user role" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\user.test.js" status="passed"/>
            <test duration="1" locationUrl="test://User.User in database.should not accept roles that are not 0, 1 or 2 " name="should not accept roles that are not 0, 1 or 2 " metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\user.test.js" status="passed"/>
        </suite>
        <suite duration="0" locationUrl="suite://User.Basic user posted from client" name="Basic user posted from client" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\user.test.js" status="passed">
            <test duration="0" locationUrl="test://User.Basic user posted from client.Should not have any random fields" name="Should not have any random fields" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\user.test.js" status="passed"/>
            <test duration="0" locationUrl="test://User.Basic user posted from client.Should return undefined error object when parsed empty object" name="Should return undefined error object when parsed empty object" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\user.test.js" status="passed"/>
            <test duration="0" locationUrl="test://User.Basic user posted from client.Should not be able to set authorized parameter" name="Should not be able to set authorized parameter" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\user.test.js" status="passed"/>
        </suite>
        <suite duration="2" locationUrl="suite://User.Validate authorized user" name="Validate authorized user" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\user.test.js" status="passed">
            <test duration="1" locationUrl="test://User.Validate authorized user.Should not return password in error message" name="Should not return password in error message" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\user.test.js" status="passed"/>
            <test duration="0" locationUrl="test://User.Validate authorized user.Should accept valid password" name="Should accept valid password" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\user.test.js" status="passed"/>
            <test duration="1" locationUrl="test://User.Validate authorized user.Should not accept invalid emails" name="Should not accept invalid emails" metainfo="C:\Users\sebs8\WebstormProjects\Climify\test\unit\user.test.js" status="passed">
                <output type="stdout">error Invalid email
</output>
            </test>
        </suite>
    </suite>
</testrun>
